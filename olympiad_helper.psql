--
-- PostgreSQL database dump
--

-- Dumped from database version 11.12 (Debian 11.12-1.pgdg100+1)
-- Dumped by pg_dump version 11.12 (Debian 11.12-1.pgdg100+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: get_most_solvable_problems(); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION public.get_most_solvable_problems() RETURNS TABLE(problem_number character varying, problem_title character varying, solved_count bigint, persent_of_resolve numeric)
    LANGUAGE sql
    AS $$
	select  jp."number", jp.title, count(jups.id) as solved_count,
		round(cast (count(jups.id) as dec(10, 2)) 
			/ (select count(*) from users_customuser uc), 2) * 100 
		as persent_of_resolve 
	from judge_problem jp
	left outer join judge_userproblemstatus jups on jups.problem_id = jp.id
	left outer join users_customuser u on u.id = jups.user_id 
	where jp.id not in (
		select jp.id 
		from judge_problem jp 
		inner join judge_userproblemstatus jups on jp.id=jups.problem_id)
	and jp.competition_id is null
	or ( jups.status = 'AC' and jp.competition_id is null)
	group by jp.title, jp.id, jp.competition_id
	order by solved_count desc limit 10;
$$;


ALTER FUNCTION public.get_most_solvable_problems() OWNER TO admin;

--
-- Name: get_most_unsolvable_problems(); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION public.get_most_unsolvable_problems() RETURNS TABLE(problem_number character varying, problem_title character varying, solved_count bigint, persent_of_resolve numeric)
    LANGUAGE sql
    AS $$
	select  jp."number", jp.title, count(jups.id) as solved_count,
		round(cast (count(jups.id) as dec(10, 2)) 
			/ (select count(*) from users_customuser uc), 2) * 100 
		as persent_of_resolve
	from judge_problem jp
	left outer join judge_userproblemstatus jups on jups.problem_id = jp.id
	left outer join users_customuser u on u.id = jups.user_id 
	where jp.id not in (
		select jp.id 
		from judge_problem jp 
		inner join judge_userproblemstatus jups on jp.id=jups.problem_id)
	and jp.competition_id is null
	or ( jups.status = 'AC' and jp.competition_id is null)
	group by jp.title, jp.id, jp.competition_id
	order by solved_count asc limit 10;
$$;


ALTER FUNCTION public.get_most_unsolvable_problems() OWNER TO admin;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO admin;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.auth_group_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_group_id_seq OWNER TO admin;

--
-- Name: auth_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.auth_group_id_seq OWNED BY public.auth_group.id;


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.auth_group_permissions (
    id integer NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO admin;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.auth_group_permissions_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_group_permissions_id_seq OWNER TO admin;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.auth_group_permissions_id_seq OWNED BY public.auth_group_permissions.id;


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO admin;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.auth_permission_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_permission_id_seq OWNER TO admin;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.auth_permission_id_seq OWNED BY public.auth_permission.id;


--
-- Name: competitions_competition; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.competitions_competition (
    id integer NOT NULL,
    title character varying(100) NOT NULL,
    start_date timestamp with time zone NOT NULL,
    end_date timestamp with time zone NOT NULL,
    group_id integer,
    description text NOT NULL
);


ALTER TABLE public.competitions_competition OWNER TO admin;

--
-- Name: competitions_competition_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.competitions_competition_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.competitions_competition_id_seq OWNER TO admin;

--
-- Name: competitions_competition_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.competitions_competition_id_seq OWNED BY public.competitions_competition.id;


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO admin;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.django_admin_log_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_admin_log_id_seq OWNER TO admin;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.django_admin_log_id_seq OWNED BY public.django_admin_log.id;


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO admin;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.django_content_type_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_content_type_id_seq OWNER TO admin;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.django_content_type_id_seq OWNED BY public.django_content_type.id;


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.django_migrations (
    id integer NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO admin;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.django_migrations_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_migrations_id_seq OWNER TO admin;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.django_migrations_id_seq OWNED BY public.django_migrations.id;


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO admin;

--
-- Name: groups_group; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.groups_group (
    id integer NOT NULL,
    name character varying(50) NOT NULL,
    description text NOT NULL
);


ALTER TABLE public.groups_group OWNER TO admin;

--
-- Name: groups_group_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.groups_group_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.groups_group_id_seq OWNER TO admin;

--
-- Name: groups_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.groups_group_id_seq OWNED BY public.groups_group.id;


--
-- Name: groups_groupuser; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.groups_groupuser (
    id integer NOT NULL,
    role character varying(2) NOT NULL,
    group_id integer NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.groups_groupuser OWNER TO admin;

--
-- Name: groups_groupuser_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.groups_groupuser_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.groups_groupuser_id_seq OWNER TO admin;

--
-- Name: groups_groupuser_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.groups_groupuser_id_seq OWNED BY public.groups_groupuser.id;


--
-- Name: judge_problem; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.judge_problem (
    id integer NOT NULL,
    number character varying(1000) NOT NULL,
    title character varying(100) NOT NULL,
    description text NOT NULL,
    description_photo character varying(100),
    difficulty character varying(2) NOT NULL,
    classification character varying(2) NOT NULL,
    input_condition character varying(500) NOT NULL,
    output_condition character varying(500) NOT NULL,
    special_warning character varying(500),
    is_active boolean NOT NULL,
    memory_limit character varying(30) NOT NULL,
    time_limit character varying(30) NOT NULL,
    competition_id integer,
    classification_en character varying(2),
    classification_uk character varying(2),
    description_en text,
    description_uk text,
    difficulty_en character varying(2),
    difficulty_uk character varying(2),
    input_condition_en character varying(500),
    input_condition_uk character varying(500),
    output_condition_en character varying(500),
    output_condition_uk character varying(500),
    special_warning_en character varying(500),
    special_warning_uk character varying(500),
    title_en character varying(100),
    title_uk character varying(100)
);


ALTER TABLE public.judge_problem OWNER TO admin;

--
-- Name: judge_problemcomment; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.judge_problemcomment (
    id integer NOT NULL,
    content text NOT NULL,
    publication_date timestamp with time zone NOT NULL,
    author_id integer NOT NULL,
    problem_id integer NOT NULL
);


ALTER TABLE public.judge_problemcomment OWNER TO admin;

--
-- Name: judge_problemcomment_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.judge_problemcomment_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.judge_problemcomment_id_seq OWNER TO admin;

--
-- Name: judge_problemcomment_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.judge_problemcomment_id_seq OWNED BY public.judge_problemcomment.id;


--
-- Name: judge_problemsamples; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.judge_problemsamples (
    id integer NOT NULL,
    sample_input text NOT NULL,
    sample_output text NOT NULL,
    problem_id integer NOT NULL,
    sample_input_en text,
    sample_input_uk text,
    sample_output_en text,
    sample_output_uk text
);


ALTER TABLE public.judge_problemsamples OWNER TO admin;

--
-- Name: judge_problemsamples_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.judge_problemsamples_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.judge_problemsamples_id_seq OWNER TO admin;

--
-- Name: judge_problemsamples_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.judge_problemsamples_id_seq OWNED BY public.judge_problemsamples.id;


--
-- Name: judge_problemtest; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.judge_problemtest (
    id integer NOT NULL,
    test_number integer NOT NULL,
    input_data text NOT NULL,
    output_data text NOT NULL,
    problem_id integer NOT NULL
);


ALTER TABLE public.judge_problemtest OWNER TO admin;

--
-- Name: judge_programminglanguage; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.judge_programminglanguage (
    id integer NOT NULL,
    name text NOT NULL,
    compile character varying(300) NOT NULL,
    execute character varying(300) NOT NULL,
    extension character varying(5) NOT NULL
);


ALTER TABLE public.judge_programminglanguage OWNER TO admin;

--
-- Name: judge_programminglanguage_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.judge_programminglanguage_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.judge_programminglanguage_id_seq OWNER TO admin;

--
-- Name: judge_programminglanguage_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.judge_programminglanguage_id_seq OWNED BY public.judge_programminglanguage.id;


--
-- Name: judge_solution; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.judge_solution (
    id integer NOT NULL,
    solving_date timestamp with time zone NOT NULL,
    status character varying(2) NOT NULL,
    program_code text NOT NULL,
    avg_memory_usage character varying(30) NOT NULL,
    avg_time_usage character varying(30) NOT NULL,
    language_id integer NOT NULL,
    problem_id integer NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.judge_solution OWNER TO admin;

--
-- Name: judge_solution_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.judge_solution_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.judge_solution_id_seq OWNER TO admin;

--
-- Name: judge_solution_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.judge_solution_id_seq OWNED BY public.judge_solution.id;


--
-- Name: judge_solutiontest; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.judge_solutiontest (
    id integer NOT NULL,
    memory_usage character varying(30) NOT NULL,
    time_usage character varying(30) NOT NULL,
    status character varying(2) NOT NULL,
    solution_id integer NOT NULL,
    problem_test_id integer NOT NULL
);


ALTER TABLE public.judge_solutiontest OWNER TO admin;

--
-- Name: judge_solutiontest_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.judge_solutiontest_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.judge_solutiontest_id_seq OWNER TO admin;

--
-- Name: judge_solutiontest_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.judge_solutiontest_id_seq OWNED BY public.judge_solutiontest.id;


--
-- Name: judge_task_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.judge_task_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.judge_task_id_seq OWNER TO admin;

--
-- Name: judge_task_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.judge_task_id_seq OWNED BY public.judge_problem.id;


--
-- Name: judge_tasktest_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.judge_tasktest_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.judge_tasktest_id_seq OWNER TO admin;

--
-- Name: judge_tasktest_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.judge_tasktest_id_seq OWNED BY public.judge_problemtest.id;


--
-- Name: judge_userproblemstatus; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.judge_userproblemstatus (
    id integer NOT NULL,
    status character varying(2) NOT NULL,
    problem_id integer NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.judge_userproblemstatus OWNER TO admin;

--
-- Name: judge_userproblemstatus_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.judge_userproblemstatus_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.judge_userproblemstatus_id_seq OWNER TO admin;

--
-- Name: judge_userproblemstatus_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.judge_userproblemstatus_id_seq OWNED BY public.judge_userproblemstatus.id;


--
-- Name: news_article; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.news_article (
    id integer NOT NULL,
    title character varying(120) NOT NULL,
    body text NOT NULL,
    publication_date timestamp with time zone NOT NULL,
    body_en text,
    body_uk text,
    title_en character varying(120),
    title_uk character varying(120)
);


ALTER TABLE public.news_article OWNER TO admin;

--
-- Name: news_article_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.news_article_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.news_article_id_seq OWNER TO admin;

--
-- Name: news_article_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.news_article_id_seq OWNED BY public.news_article.id;


--
-- Name: urlshortening_url; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.urlshortening_url (
    short_id character varying(50) NOT NULL,
    url character varying(200) NOT NULL,
    pub_date timestamp with time zone NOT NULL,
    is_expired boolean NOT NULL,
    redirect_count integer NOT NULL
);


ALTER TABLE public.urlshortening_url OWNER TO admin;

--
-- Name: users_customuser; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.users_customuser (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    email character varying(254) NOT NULL,
    username character varying(150) NOT NULL,
    avatar character varying(100)
);


ALTER TABLE public.users_customuser OWNER TO admin;

--
-- Name: users_customuser_groups; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.users_customuser_groups (
    id integer NOT NULL,
    customuser_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.users_customuser_groups OWNER TO admin;

--
-- Name: users_customuser_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.users_customuser_groups_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_customuser_groups_id_seq OWNER TO admin;

--
-- Name: users_customuser_groups_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.users_customuser_groups_id_seq OWNED BY public.users_customuser_groups.id;


--
-- Name: users_customuser_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.users_customuser_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_customuser_id_seq OWNER TO admin;

--
-- Name: users_customuser_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.users_customuser_id_seq OWNED BY public.users_customuser.id;


--
-- Name: users_customuser_user_permissions; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.users_customuser_user_permissions (
    id integer NOT NULL,
    customuser_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.users_customuser_user_permissions OWNER TO admin;

--
-- Name: users_customuser_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.users_customuser_user_permissions_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_customuser_user_permissions_id_seq OWNER TO admin;

--
-- Name: users_customuser_user_permissions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.users_customuser_user_permissions_id_seq OWNED BY public.users_customuser_user_permissions.id;


--
-- Name: auth_group id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.auth_group ALTER COLUMN id SET DEFAULT nextval('public.auth_group_id_seq'::regclass);


--
-- Name: auth_group_permissions id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.auth_group_permissions ALTER COLUMN id SET DEFAULT nextval('public.auth_group_permissions_id_seq'::regclass);


--
-- Name: auth_permission id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.auth_permission ALTER COLUMN id SET DEFAULT nextval('public.auth_permission_id_seq'::regclass);


--
-- Name: competitions_competition id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.competitions_competition ALTER COLUMN id SET DEFAULT nextval('public.competitions_competition_id_seq'::regclass);


--
-- Name: django_admin_log id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.django_admin_log ALTER COLUMN id SET DEFAULT nextval('public.django_admin_log_id_seq'::regclass);


--
-- Name: django_content_type id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.django_content_type ALTER COLUMN id SET DEFAULT nextval('public.django_content_type_id_seq'::regclass);


--
-- Name: django_migrations id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.django_migrations ALTER COLUMN id SET DEFAULT nextval('public.django_migrations_id_seq'::regclass);


--
-- Name: groups_group id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.groups_group ALTER COLUMN id SET DEFAULT nextval('public.groups_group_id_seq'::regclass);


--
-- Name: groups_groupuser id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.groups_groupuser ALTER COLUMN id SET DEFAULT nextval('public.groups_groupuser_id_seq'::regclass);


--
-- Name: judge_problem id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_problem ALTER COLUMN id SET DEFAULT nextval('public.judge_task_id_seq'::regclass);


--
-- Name: judge_problemcomment id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_problemcomment ALTER COLUMN id SET DEFAULT nextval('public.judge_problemcomment_id_seq'::regclass);


--
-- Name: judge_problemsamples id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_problemsamples ALTER COLUMN id SET DEFAULT nextval('public.judge_problemsamples_id_seq'::regclass);


--
-- Name: judge_problemtest id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_problemtest ALTER COLUMN id SET DEFAULT nextval('public.judge_tasktest_id_seq'::regclass);


--
-- Name: judge_programminglanguage id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_programminglanguage ALTER COLUMN id SET DEFAULT nextval('public.judge_programminglanguage_id_seq'::regclass);


--
-- Name: judge_solution id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_solution ALTER COLUMN id SET DEFAULT nextval('public.judge_solution_id_seq'::regclass);


--
-- Name: judge_solutiontest id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_solutiontest ALTER COLUMN id SET DEFAULT nextval('public.judge_solutiontest_id_seq'::regclass);


--
-- Name: judge_userproblemstatus id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_userproblemstatus ALTER COLUMN id SET DEFAULT nextval('public.judge_userproblemstatus_id_seq'::regclass);


--
-- Name: news_article id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.news_article ALTER COLUMN id SET DEFAULT nextval('public.news_article_id_seq'::regclass);


--
-- Name: users_customuser id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.users_customuser ALTER COLUMN id SET DEFAULT nextval('public.users_customuser_id_seq'::regclass);


--
-- Name: users_customuser_groups id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.users_customuser_groups ALTER COLUMN id SET DEFAULT nextval('public.users_customuser_groups_id_seq'::regclass);


--
-- Name: users_customuser_user_permissions id; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.users_customuser_user_permissions ALTER COLUMN id SET DEFAULT nextval('public.users_customuser_user_permissions_id_seq'::regclass);


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add content type	4	add_contenttype
14	Can change content type	4	change_contenttype
15	Can delete content type	4	delete_contenttype
16	Can view content type	4	view_contenttype
17	Can add session	5	add_session
18	Can change session	5	change_session
19	Can delete session	5	delete_session
20	Can view session	5	view_session
21	Can add programming language	6	add_programminglanguage
22	Can change programming language	6	change_programminglanguage
23	Can delete programming language	6	delete_programminglanguage
24	Can view programming language	6	view_programminglanguage
25	Can add solution	7	add_solution
26	Can change solution	7	change_solution
27	Can delete solution	7	delete_solution
28	Can view solution	7	view_solution
29	Can add solution test	8	add_solutiontest
30	Can change solution test	8	change_solutiontest
31	Can delete solution test	8	delete_solutiontest
32	Can view solution test	8	view_solutiontest
33	Can add task	9	add_task
34	Can change task	9	change_task
35	Can delete task	9	delete_task
36	Can view task	9	view_task
37	Can add task comment	10	add_taskcomment
38	Can change task comment	10	change_taskcomment
39	Can delete task comment	10	delete_taskcomment
40	Can view task comment	10	view_taskcomment
41	Can add task samples	11	add_tasksamples
42	Can change task samples	11	change_tasksamples
43	Can delete task samples	11	delete_tasksamples
44	Can view task samples	11	view_tasksamples
45	Can add task test	12	add_tasktest
46	Can change task test	12	change_tasktest
47	Can delete task test	12	delete_tasktest
48	Can view task test	12	view_tasktest
49	Can add user	13	add_customuser
50	Can change user	13	change_customuser
51	Can delete user	13	delete_customuser
52	Can view user	13	view_customuser
53	Can add competition	14	add_competition
54	Can change competition	14	change_competition
55	Can delete competition	14	delete_competition
56	Can view competition	14	view_competition
57	Can add competition problem	15	add_competitionproblem
58	Can change competition problem	15	change_competitionproblem
59	Can delete competition problem	15	delete_competitionproblem
60	Can view competition problem	15	view_competitionproblem
61	Can add group	16	add_group
62	Can change group	16	change_group
63	Can delete group	16	delete_group
64	Can view group	16	view_group
65	Can add group competition	17	add_groupcompetition
66	Can change group competition	17	change_groupcompetition
67	Can delete group competition	17	delete_groupcompetition
68	Can view group competition	17	view_groupcompetition
69	Can add group user	18	add_groupuser
70	Can change group user	18	change_groupuser
71	Can delete group user	18	delete_groupuser
72	Can view group user	18	view_groupuser
73	Can add problem comment	19	add_problemcomment
74	Can change problem comment	19	change_problemcomment
75	Can delete problem comment	19	delete_problemcomment
76	Can view problem comment	19	view_problemcomment
77	Can add problem samples	20	add_problemsamples
78	Can change problem samples	20	change_problemsamples
79	Can delete problem samples	20	delete_problemsamples
80	Can view problem samples	20	view_problemsamples
81	Can add problem test	12	add_problemtest
82	Can change problem test	12	change_problemtest
83	Can delete problem test	12	delete_problemtest
84	Can view problem test	12	view_problemtest
85	Can add problem	9	add_problem
86	Can change problem	9	change_problem
87	Can delete problem	9	delete_problem
88	Can view problem	9	view_problem
89	Can add competition	21	add_competition
90	Can change competition	21	change_competition
91	Can delete competition	21	delete_competition
92	Can view competition	21	view_competition
93	Can add group user	22	add_groupuser
94	Can change group user	22	change_groupuser
95	Can delete group user	22	delete_groupuser
96	Can view group user	22	view_groupuser
97	Can add group	23	add_group
98	Can change group	23	change_group
99	Can delete group	23	delete_group
100	Can view group	23	view_group
101	Can add group competition	24	add_groupcompetition
102	Can change group competition	24	change_groupcompetition
103	Can delete group competition	24	delete_groupcompetition
104	Can view group competition	24	view_groupcompetition
105	Can add competition problem	25	add_competitionproblem
106	Can change competition problem	25	change_competitionproblem
107	Can delete competition problem	25	delete_competitionproblem
108	Can view competition problem	25	view_competitionproblem
109	Can add competition problem	26	add_competitionproblem
110	Can change competition problem	26	change_competitionproblem
111	Can delete competition problem	26	delete_competitionproblem
112	Can view competition problem	26	view_competitionproblem
113	Can add competition	27	add_competition
114	Can change competition	27	change_competition
115	Can delete competition	27	delete_competition
116	Can view competition	27	view_competition
117	Can add user problem status	28	add_userproblemstatus
118	Can change user problem status	28	change_userproblemstatus
119	Can delete user problem status	28	delete_userproblemstatus
120	Can view user problem status	28	view_userproblemstatus
121	Can add Article	29	add_article
122	Can change Article	29	change_article
123	Can delete Article	29	delete_article
124	Can view Article	29	view_article
125	Can add url	30	add_url
126	Can change url	30	change_url
127	Can delete url	30	delete_url
128	Can view url	30	view_url
\.


--
-- Data for Name: competitions_competition; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.competitions_competition (id, title, start_date, end_date, group_id, description) FROM stdin;
1	empty	2021-03-15 00:00:00+02	2021-03-21 00:00:00+02	\N	Value()
2	user_comp	2021-03-15 00:00:00+02	2021-03-21 00:00:00+02	6	Value()
3	test2	2021-03-15 00:00:00+02	2021-03-21 00:00:00+02	\N	Value()
5	test3	2021-03-15 00:00:00+02	2021-03-21 00:00:00+02	7	Value()
6	tesst	2021-03-13 00:00:00+02	2021-03-15 00:00:00+02	\N	Value()
7	fdgdfg	2021-03-24 00:00:00+02	2021-03-26 00:00:00+02	6	Value()
8	test_competition	2020-03-12 00:00:00+02	2020-03-14 00:00:00+02	6	Value()
9	spring contest 2021	2021-03-01 00:00:00+02	2021-05-31 00:00:00+03	\N	Value()
10	test_group_competition_v2	2021-04-01 00:00:00+03	2021-05-01 00:00:00+03	6	Value()
13	may_contest	2021-05-01 19:10:00+03	2021-05-31 12:00:00+03	6	
14	may_contest_v2	2021-05-03 12:00:00+03	2021-05-28 15:45:00+03	6	
16	13цйу	2021-05-14 12:00:00+03	2021-05-14 12:00:00+03	6	
17	middle of may contest	2021-05-17 12:00:00+03	2021-05-19 12:00:00+03	6	body
18	summer test 2021	2021-06-03 09:00:00+03	2021-08-31 12:00:00+03	6	Завдання на літо
23	sample	2021-06-06 12:00:00+03	2021-06-06 13:00:00+03	10	sample competition body
24	Lorem, ipsum dolor.	2021-06-12 12:00:00+03	2021-07-10 12:00:00+03	6	Lorem ipsum dolor sit, amet consectetur adipisicing elit. Rem atque dolores tenetur veritatis impedit natus alias animi maxime nihil officiis.
25	Lorem ipsum dolor sit amet.	2021-06-01 12:00:00+03	2021-06-30 12:00:00+03	6	Lorem ipsum dolor sit amet consectetur, adipisicing elit. Numquam, provident aspernatur ipsa, placeat repellendus totam ex quam incidunt quis consequatur qui temporibus nam.
26	All summer contest 2021	2021-06-01 14:52:23+03	2021-08-31 23:59:59+03	\N	Lorem ipsum dolor sit amet consectetur, adipisicing elit. Qui at commodi obcaecati inventore rerum, esse dolorem veritatis optio ipsam. Laboriosam ratione facilis sunt, itaque, atque autem hic nulla mollitia enim provident laborum. Animi ipsum adipisci ratione quae tempore assumenda, accusantium repudiandae optio earum soluta perferendis reprehenderit consequuntur similique nemo et?
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2020-12-23 15:48:22.590161+02	1	Python 3.9.0	1	[{"added": {}}]	6	1
2	2020-12-23 15:50:58.075717+02	2	gcc 8.3.0	1	[{"added": {}}]	6	1
3	2020-12-24 13:22:39.199807+02	1	Simple problem	1	[{"added": {}}]	9	1
4	2020-12-24 14:19:00.571319+02	1	Simple problem	1	[{"added": {}}]	11	1
5	2020-12-24 15:13:47.514581+02	1	Simple problem	2	[{"changed": {"fields": ["Description photo"]}}]	9	1
6	2020-12-24 15:16:53.005906+02	1	Simple problem	2	[{"changed": {"fields": ["Description photo"]}}]	9	1
7	2020-12-24 15:18:09.70399+02	1	Simple problem	2	[{"changed": {"fields": ["Description photo"]}}]	9	1
8	2020-12-24 15:18:27.387093+02	1	Simple problem	2	[{"changed": {"fields": ["Description photo"]}}]	9	1
9	2020-12-24 15:36:18.691866+02	1	Simple problem	2	[{"changed": {"fields": ["Warning"]}}]	9	1
10	2020-12-25 16:00:39.995228+02	1	Simple problem - 1	1	[{"added": {}}]	12	1
11	2020-12-25 16:00:57.666271+02	2	Simple problem - 2	1	[{"added": {}}]	12	1
12	2020-12-25 16:01:37.735864+02	3	Simple problem - 3 - gcc 8.3.0	1	[{"added": {}}]	12	1
13	2020-12-25 16:01:56.949364+02	4	Simple problem - 4 - gcc 8.3.0	1	[{"added": {}}]	12	1
14	2020-12-25 18:26:10.930538+02	2	Error protection queue	1	[{"added": {}}]	9	1
15	2020-12-25 18:27:34.746606+02	2	Error protection queue	2	[{"changed": {"fields": ["Description"]}}]	9	1
16	2020-12-26 00:52:20.902142+02	2	Error protection queue	1	[{"added": {}}]	11	1
17	2020-12-26 00:53:13.070098+02	5	Error protection queue - 1 - gcc 8.3.0	1	[{"added": {}}]	12	1
18	2020-12-26 01:01:25.221025+02	5	Error protection queue - 1 - gcc 8.3.0	2	[{"changed": {"fields": ["Input data"]}}]	12	1
19	2020-12-26 01:01:33.999504+02	5	Error protection queue - 1 - gcc 8.3.0	2	[{"changed": {"fields": ["Input data"]}}]	12	1
20	2020-12-26 01:03:05.965726+02	5	Error protection queue - 1 - gcc 8.3.0	2	[]	12	1
21	2020-12-26 01:07:14.299835+02	5	Error protection queue - 1 - gcc 8.3.0	2	[]	12	1
22	2020-12-26 01:07:59.525337+02	5	Error protection queue - 1 - gcc 8.3.0	2	[{"changed": {"fields": ["Output data"]}}]	12	1
23	2020-12-26 01:08:27.213885+02	5	Error protection queue - 1 - gcc 8.3.0	2	[{"changed": {"fields": ["Output data"]}}]	12	1
24	2020-12-26 01:09:27.178076+02	5	Error protection queue - 1 - gcc 8.3.0	2	[{"changed": {"fields": ["Output data"]}}]	12	1
25	2020-12-26 13:30:06.808708+02	5	Error protection queue - 1 - gcc 8.3.0	2	[{"changed": {"fields": ["Output data"]}}]	12	1
26	2020-12-26 13:30:20.49626+02	5	Error protection queue - 1 - gcc 8.3.0	2	[{"changed": {"fields": ["Output data"]}}]	12	1
27	2020-12-26 13:48:47.183333+02	3	The area of a polygon	1	[{"added": {}}]	9	1
28	2020-12-26 13:49:18.291416+02	3	The area of a polygon	1	[{"added": {}}]	11	1
29	2020-12-26 13:49:48.515186+02	6	The area of a polygon - 1 - gcc 8.3.0	1	[{"added": {}}]	12	1
30	2021-01-13 12:20:17.920227+02	3	The area of a polygon	2	[{"changed": {"fields": ["Memory limit"]}}]	9	1
31	2021-01-13 13:27:39.525664+02	3	The area of a polygon	2	[{"changed": {"fields": ["Memory limit"]}}]	9	1
32	2021-01-13 17:37:07.031369+02	2	Error protection queue	2	[{"changed": {"fields": ["Sample input #", "Sample output #"]}}]	11	1
33	2021-01-13 17:37:33.678534+02	2	Error protection queue	2	[{"changed": {"fields": ["Sample input #", "Sample output #"]}}]	11	1
34	2021-01-13 17:38:22.301334+02	2	Error protection queue	2	[{"changed": {"fields": ["Sample input #", "Sample output #"]}}]	11	1
35	2021-01-13 17:39:41.127423+02	2	Error protection queue	2	[{"changed": {"fields": ["Sample input #", "Sample output #"]}}]	11	1
36	2021-01-14 15:14:14.056205+02	1	pro100moneyfarmer@gmail.com	2	[{"changed": {"fields": ["Username"]}}]	13	1
37	2021-01-15 23:31:47.360958+02	2	2	1	[{"added": {}}]	7	1
38	2021-01-16 02:23:19.520656+02	2	gcc 8.3.0	2	[{"changed": {"fields": ["Compile", "Execute"]}}]	6	1
39	2021-01-16 02:34:47.6795+02	2	gcc 8.3.0	2	[{"changed": {"fields": ["Compile"]}}]	6	1
40	2021-01-16 02:44:40.270889+02	2	gcc 8.3.0	2	[{"changed": {"fields": ["Compile"]}}]	6	1
41	2021-01-16 12:50:07.982327+02	1	Python 3.9.0	2	[{"changed": {"fields": ["Extension", "Compile", "Execute"]}}]	6	1
42	2021-01-16 13:10:14.670903+02	2	gcc 8.3.0	2	[]	6	1
43	2021-01-16 13:23:37.692775+02	7	Simple problem - 5 - gcc 8.3.0	1	[{"added": {}}]	12	1
44	2021-01-16 13:24:28.092064+02	7	Simple problem - 5 - gcc 8.3.0	3		12	1
45	2021-01-16 13:25:08.18116+02	8	Simple problem - 1 - Python 3.9.0	1	[{"added": {}}]	12	1
46	2021-01-16 13:25:27.745138+02	9	Simple problem - 2 - Python 3.9.0	1	[{"added": {}}]	12	1
47	2021-01-16 13:32:39.712273+02	1	Python 3.9.0	2	[{"changed": {"fields": ["Execute"]}}]	6	1
48	2021-01-16 13:35:10.195622+02	1	Python 3.9.0	2	[{"changed": {"fields": ["Execute"]}}]	6	1
49	2021-01-16 13:43:07.462886+02	1	Python 3.9.0	2	[{"changed": {"fields": ["Execute"]}}]	6	1
50	2021-01-16 14:16:32.088786+02	2	C++11	2	[{"changed": {"fields": ["Programming language", "Compile"]}}]	6	1
51	2021-01-16 14:17:53.103191+02	3	C++14	1	[{"added": {}}]	6	1
52	2021-01-16 14:18:17.02142+02	4	C++17	1	[{"added": {}}]	6	1
53	2021-01-16 14:22:16.428806+02	3	C++14	2	[{"changed": {"fields": ["Compile"]}}]	6	1
54	2021-01-16 14:31:10.48578+02	2	C++11	2	[{"changed": {"fields": ["Compile"]}}]	6	1
55	2021-01-16 14:31:26.177953+02	4	C++17	2	[{"changed": {"fields": ["Compile"]}}]	6	1
56	2021-01-16 14:31:50.421042+02	3	C++14	2	[{"changed": {"fields": ["Compile"]}}]	6	1
57	2021-01-16 14:37:58.316214+02	3	C++14	2	[{"changed": {"fields": ["Compile"]}}]	6	1
58	2021-01-16 14:38:05.639851+02	4	C++17	2	[]	6	1
59	2021-01-16 15:24:43.829874+02	10	Simple problem - 1 - C++14	1	[{"added": {}}]	12	1
60	2021-01-16 15:25:00.691432+02	11	Simple problem - 1 - C++17	1	[{"added": {}}]	12	1
61	2021-01-16 15:25:24.986766+02	2	C++11	2	[{"changed": {"fields": ["Compile"]}}]	6	1
62	2021-01-16 15:27:04.132922+02	4	C++17	2	[{"changed": {"fields": ["Compile"]}}]	6	1
63	2021-01-16 15:27:15.084471+02	3	C++14	2	[{"changed": {"fields": ["Compile"]}}]	6	1
64	2021-01-16 17:17:59.236522+02	11	Simple problem - 1	3		12	1
65	2021-01-16 17:17:59.244082+02	10	Simple problem - 1	3		12	1
66	2021-01-16 17:17:59.249216+02	9	Simple problem - 2	3		12	1
67	2021-01-16 17:17:59.253954+02	8	Simple problem - 1	3		12	1
68	2021-01-16 17:33:54.638551+02	76	76	3		7	1
69	2021-01-29 17:21:22.52147+02	1	Simple problem- sample	1	[{"added": {}}]	20	1
70	2021-01-29 17:21:35.238082+02	2	Simple problem- sample	1	[{"added": {}}]	20	1
71	2021-01-29 17:21:41.918008+02	1	Simple problem- sample	3		20	1
72	2021-02-02 15:36:25.789843+02	3	Error protection queue- sample	1	[{"added": {}}]	20	1
73	2021-02-02 15:37:19.766363+02	4	The area of a polygon- sample	1	[{"added": {}}]	20	1
74	2021-02-02 15:37:26.725968+02	4	The area of a polygon- sample	2	[{"changed": {"fields": ["Sample input #"]}}]	20	1
75	2021-02-02 15:37:35.839418+02	3	Error protection queue- sample	2	[{"changed": {"fields": ["Sample input #"]}}]	20	1
76	2021-02-08 21:21:44.263779+02	5	Test	3		23	1
77	2021-02-08 21:21:44.278306+02	4	Test	3		23	1
78	2021-02-08 21:21:44.28221+02	3	Test	3		23	1
79	2021-02-08 21:21:44.286153+02	2	Test	3		23	1
80	2021-02-08 21:21:44.290422+02	1	Test	3		23	1
81	2021-02-23 16:41:29.900277+02	2	Competition object (2)	3		21	1
82	2021-02-23 16:41:29.908206+02	1	Competition object (1)	3		21	1
83	2021-04-05 13:19:27.432579+03	5	GroupUser object (5)	1	[{"added": {}}]	22	1
84	2021-04-06 15:57:19.766634+03	2	user_compSimple problem	1	[{"added": {}}]	26	1
85	2021-04-06 16:26:45.884969+03	3	spring contest 2021 Simple problem	1	[{"added": {}}]	26	1
86	2021-04-08 17:32:01.92749+03	4	Simple problem	1	[{"added": {}}]	9	1
87	2021-04-08 17:58:31.953717+03	5	Simple problem- sample	1	[{"added": {}}]	20	1
88	2021-04-08 17:59:11.337987+03	12	Simple problem - 1	1	[{"added": {}}]	12	1
89	2021-04-08 17:59:54.93349+03	13	Simple problem - 2	1	[{"added": {}}]	12	1
90	2021-04-08 18:00:06.015184+03	14	Simple problem - 3	1	[{"added": {}}]	12	1
91	2021-04-08 18:00:29.458858+03	15	Simple problem - 4	1	[{"added": {}}]	12	1
92	2021-04-09 20:30:23.293448+03	6	Test group	2	[{"changed": {"fields": ["Description"]}}]	23	1
93	2021-04-09 20:35:32.265773+03	5	test_group_competition_v2: Simple problem	1	[{"added": {}}]	9	1
94	2021-04-09 20:36:09.663472+03	6	Simple problem- sample	1	[{"added": {}}]	20	1
95	2021-04-09 20:36:45.639023+03	16	Simple problem - 1	1	[{"added": {}}]	12	1
96	2021-04-09 20:36:55.994026+03	17	Simple problem - 2	1	[{"added": {}}]	12	1
97	2021-04-09 20:37:04.71339+03	18	Simple problem - 3	1	[{"added": {}}]	12	1
98	2021-04-09 20:37:14.990072+03	19	Simple problem - 4	1	[{"added": {}}]	12	1
99	2021-04-09 20:37:25.482307+03	20	Simple problem - 5	1	[{"added": {}}]	12	1
100	2021-04-10 09:46:39.040351+03	4	UserProblemStatus object (4)	3		28	1
101	2021-04-17 13:14:22.625156+03	6	test_group_competition_v2: Error protection queue	3		9	1
102	2021-04-17 13:19:43.49546+03	7	test_group_competition_v2: The area of a polygon	3		9	1
103	2021-04-17 13:29:33.740128+03	8	test_group_competition_v2: Error protection queue	3		9	1
104	2021-04-17 13:55:08.06534+03	5	test_group_competition_v2: Simple problem	3		9	1
105	2021-04-17 14:05:43.998698+03	18	adddddddae@gmail.com	3		13	1
106	2021-04-17 14:05:44.008421+03	17	pro100takvoin@gmail.com	3		13	1
107	2021-04-17 14:15:20.873661+03	19	pro100takvoin@gmail.com	3		13	1
108	2021-04-17 14:18:40.890344+03	20	pro100takvoin@gmail.com	3		13	1
109	2021-04-17 14:23:17.67391+03	21	pro100takvoin@gmail.com	3		13	1
110	2021-04-17 14:27:15.095736+03	22	pro100takvoin@gmail.com	3		13	1
111	2021-04-17 14:30:00.246253+03	23	pro100takvoin@gmail.com	3		13	1
112	2021-04-17 14:34:15.765217+03	24	pro100takvoin@gmail.com	3		13	1
113	2021-04-17 14:52:55.445208+03	25	besowone@choco.la	3		13	1
114	2021-04-17 16:14:38.479664+03	26	besowone@choco.la	3		13	1
115	2021-04-17 16:18:19.661428+03	27	pro100takvoin@gmail.com	3		13	1
116	2021-04-17 16:19:58.046724+03	28	pro100takvoin@gmail.com	3		13	1
117	2021-04-17 16:32:50.030312+03	29	pro100takvoin@gmail.com	3		13	1
118	2021-04-17 18:43:48.73217+03	31	besowone@choco.la	3		13	1
119	2021-04-19 18:37:43.642234+03	32	owlsawrap@simaenaga.com	3		13	1
120	2021-04-21 13:57:28.927893+03	4	user_comp: Simple problem	2	[{"changed": {"fields": ["Title [uk]", "Description [uk]", "Input [uk]", "Output [uk]", "Warning [uk]"]}}]	9	1
121	2021-04-21 14:25:56.00458+03	13	test_group_competition_v2: Проста задача	2	[{"changed": {"fields": ["Title [uk]", "Description [uk]", "Input [uk]", "Output [uk]", "Warning [uk]"]}}]	9	1
122	2021-04-21 14:28:04.859213+03	1	Проста задача	2	[{"changed": {"fields": ["Title [uk]", "Description [uk]", "Input [uk]", "Output [uk]", "Warning [uk]"]}}]	9	1
123	2021-04-21 14:39:48.07676+03	2	Черга з захистом від помилок	2	[{"changed": {"fields": ["Title [uk]", "Description [en]", "Description [uk]", "Input [uk]", "Output [uk]"]}}]	9	1
124	2021-04-21 14:44:58.543089+03	3	Площа многокутника	2	[{"changed": {"fields": ["Title [uk]", "Description [uk]", "Input [en]", "Input [uk]", "Output [uk]"]}}]	9	1
125	2021-04-21 20:45:08.247661+03	2	Черга з захистом від помилок	2	[{"changed": {"fields": ["Description [en]", "Description [uk]"]}}]	9	1
126	2021-04-21 20:47:15.478802+03	2	Черга з захистом від помилок	2	[{"changed": {"fields": ["Description [en]", "Description [uk]"]}}]	9	1
127	2021-04-24 14:52:04.239405+03	33	asdasd@fsdf.com	3		13	1
128	2021-04-24 22:26:17.123165+03	60551f	Url object (60551f)	3		30	1
129	2021-04-24 22:26:17.135153+03	2702ea	Url object (2702ea)	3		30	1
130	2021-04-24 22:26:17.142948+03	b14ef6	Url object (b14ef6)	3		30	1
131	2021-04-24 22:30:23.2518+03	34	besowone@choco.la	3		13	1
132	2021-04-24 22:30:23.267354+03	35	owlsawrap@simaenaga.com	3		13	1
133	2021-04-24 22:49:09.045939+03	36	beasowone@choco.la	3		13	1
134	2021-04-24 22:53:57.318756+03	37	besowone@choco.la	3		13	1
135	2021-04-28 17:59:48.88722+03	c747ce	Url object (c747ce)	3		30	1
136	2021-04-29 17:08:45.388191+03	11	GroupUser object (11)	1	[{"added": {}}]	22	1
137	2021-04-29 17:10:18.530886+03	12	GroupUser object (12)	1	[{"added": {}}]	22	1
138	2021-04-29 17:11:16.540151+03	13	GroupUser object (13)	1	[{"added": {}}]	22	1
139	2021-04-29 17:17:27.367178+03	14	GroupUser object (14)	1	[{"added": {}}]	22	1
140	2021-04-29 17:19:59.290639+03	15	GroupUser object (15)	1	[{"added": {}}]	22	1
141	2021-04-29 17:21:23.024763+03	16	GroupUser object (16)	1	[{"added": {}}]	22	1
142	2021-04-29 17:24:24.14418+03	17	GroupUser object (17)	1	[{"added": {}}]	22	1
143	2021-04-29 17:24:33.068172+03	18	GroupUser object (18)	1	[{"added": {}}]	22	1
144	2021-04-29 18:49:28.97799+03	11	test datepicker competition	3		27	1
145	2021-05-01 15:21:06.449312+03	1	Test article	1	[{"added": {}}]	29	1
146	2021-05-01 15:40:44.803905+03	2	ewrwqr	1	[{"added": {}}]	29	1
147	2021-05-01 15:59:41.037328+03	1	Test article	2	[{"changed": {"fields": ["Body [en]"]}}]	29	1
148	2021-05-01 16:48:46.457169+03	1	Test article	2	[{"changed": {"fields": ["Title [uk]"]}}]	29	1
149	2021-05-01 18:41:32.064029+03	12	may_contest	2	[{"changed": {"fields": ["Description", "Start date"]}}]	27	1
150	2021-05-01 18:45:02.767115+03	12	may_contest	3		27	1
151	2021-05-02 11:06:29.285712+03	38	besowone@choco.la	3		13	1
152	2021-05-03 00:05:18.760615+03	3	Площа многокутника	2	[{"changed": {"fields": ["Description [en]"]}}]	9	1
153	2021-05-03 00:07:25.198026+03	3	Площа многокутника	2	[{"changed": {"fields": ["Description [en]", "Description [uk]", "Input [en]"]}}]	9	1
154	2021-05-03 00:09:14.075019+03	3	Площа многокутника	2	[{"changed": {"fields": ["Input [en]"]}}]	9	1
155	2021-05-03 00:10:43.993977+03	3	Площа многокутника	2	[{"changed": {"fields": ["Description [en]", "Description [uk]"]}}]	9	1
156	2021-05-03 17:00:28.945247+03	39	besowone@choco.la	3		13	1
157	2021-05-03 17:00:28.984309+03	40	owlsawrap@simaenaga.com	3		13	1
158	2021-05-13 21:14:24.592761+03	15	еуіе	3		27	1
159	2021-05-17 15:26:44.508355+03	2	Планова зміна у конфігурації мов програмування	2	[{"changed": {"fields": ["Title [en]", "Title [uk]", "Body [en]", "Body [uk]"]}}]	29	1
160	2021-05-17 19:04:22.701395+03	17	middle of may contest	2	[{"changed": {"fields": ["Title", "Description", "Start date", "End date"]}}]	27	1
161	2021-05-17 19:05:11.736376+03	17	middle of may contest	2	[{"changed": {"fields": ["Start date", "End date"]}}]	27	1
162	2021-05-17 20:35:48.648202+03	6	Test group	2	[{"changed": {"fields": ["Group description"]}}]	23	1
163	2021-05-17 20:35:55.428825+03	6	Test group	2	[]	23	1
164	2021-05-20 17:24:52.111616+03	5	Go 1.16.4	1	[{"added": {}}]	6	1
165	2021-05-20 17:25:26.746646+03	5	Go 1.16.4	2	[{"changed": {"fields": ["Execute"]}}]	6	1
166	2021-05-20 17:33:32.120107+03	5	Go 1.16.4	2	[{"changed": {"fields": ["Compile", "Execute"]}}]	6	1
167	2021-05-20 17:34:11.42828+03	5	Go 1.16.4	2	[{"changed": {"fields": ["Execute"]}}]	6	1
168	2021-05-20 17:44:12.433432+03	5	Go 1.16.4	2	[{"changed": {"fields": ["Compile"]}}]	6	1
169	2021-05-20 17:45:54.06787+03	5	Go 1.16.4	2	[{"changed": {"fields": ["Execute"]}}]	6	1
170	2021-05-20 17:57:50.58982+03	6	Python 2.7.16	1	[{"added": {}}]	6	1
171	2021-05-20 17:58:04.765949+03	6	Python 2.7.16	2	[]	6	1
172	2021-05-20 17:58:22.392211+03	1	Python 3.9.0	2	[{"changed": {"fields": ["Execute"]}}]	6	1
173	2021-05-20 18:07:17.639013+03	1	Python 3.9.0	2	[{"changed": {"fields": ["Execute"]}}]	6	1
174	2021-05-20 22:25:03.712688+03	7	Java (openjdk 11.0.11)	1	[{"added": {}}]	6	1
175	2021-05-20 22:42:04.271221+03	7	Java (openjdk 11.0.11)	2	[{"changed": {"fields": ["Compile"]}}]	6	1
176	2021-05-20 22:42:25.967115+03	7	Java (openjdk 11.0.11)	2	[{"changed": {"fields": ["Execute"]}}]	6	1
177	2021-05-20 23:28:28.651368+03	7	Java (openjdk 11.0.11)	2	[{"changed": {"fields": ["Execute"]}}]	6	1
178	2021-06-03 17:17:54.19931+03	1	Test article	2	[{"changed": {"fields": ["Body [en]"]}}]	29	1
179	2021-06-04 18:30:19.124273+03	19	asdasd	3		27	1
180	2021-06-04 18:38:00.178131+03	20	asdas	3		27	1
181	2021-06-04 18:38:00.2085+03	21	213	3		27	1
182	2021-06-04 18:47:21.153971+03	22	asddasd	3		27	1
183	2021-06-19 14:48:12.553518+03	3	Lorem ipsum dolor sit amet.	1	[{"added": {}}]	29	1
184	2021-06-19 14:48:41.959915+03	4	Lorem, ipsum.	1	[{"added": {}}]	29	1
185	2021-06-19 14:49:15.852536+03	4	Lorem, ipsum.	2	[{"changed": {"fields": ["Body [en]"]}}]	29	1
186	2021-06-19 14:52:46.88473+03	26	All summer contest 2021	1	[{"added": {}}]	27	1
187	2021-06-19 15:01:11.437167+03	1	Simple problem	2	[{"changed": {"fields": ["Classification [en]", "Classification [uk]"]}}]	9	1
188	2021-06-19 15:01:28.056249+03	2	Error protection queue	2	[{"changed": {"fields": ["Classification [en]", "Classification [uk]"]}}]	9	1
189	2021-06-19 15:01:41.758723+03	3	The area of a polygon	2	[{"changed": {"fields": ["Classification [en]", "Classification [uk]"]}}]	9	1
190	2021-06-19 15:12:30.748924+03	30	Three states	1	[{"added": {}}]	9	1
191	2021-06-19 15:13:23.883483+03	75	Three states - 1	1	[{"added": {}}]	12	1
192	2021-06-19 15:14:13.061982+03	28	Three states- sample	1	[{"added": {}}]	20	1
193	2021-06-19 15:17:29.839528+03	30	Three states	2	[{"changed": {"fields": ["Input [uk]", "Output [uk]"]}}]	9	1
194	2021-06-19 15:23:36.839056+03	75	Three states - 1	2	[]	12	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	contenttypes	contenttype
5	sessions	session
6	judge	programminglanguage
7	judge	solution
8	judge	solutiontest
10	judge	taskcomment
11	judge	tasksamples
13	users	customuser
12	judge	problemtest
9	judge	problem
14	judge	competition
15	judge	competitionproblem
16	judge	group
17	judge	groupcompetition
18	judge	groupuser
19	judge	problemcomment
20	judge	problemsamples
21	groups	competition
22	groups	groupuser
23	groups	group
24	groups	groupcompetition
25	groups	competitionproblem
26	competitions	competitionproblem
27	competitions	competition
28	judge	userproblemstatus
29	news	article
30	urlshortening	url
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2020-12-23 15:40:09.582854+02
2	contenttypes	0002_remove_content_type_name	2020-12-23 15:40:09.606717+02
3	auth	0001_initial	2020-12-23 15:40:09.683587+02
4	auth	0002_alter_permission_name_max_length	2020-12-23 15:40:09.784339+02
5	auth	0003_alter_user_email_max_length	2020-12-23 15:40:09.811746+02
6	auth	0004_alter_user_username_opts	2020-12-23 15:40:09.832917+02
7	auth	0005_alter_user_last_login_null	2020-12-23 15:40:09.862267+02
8	auth	0006_require_contenttypes_0002	2020-12-23 15:40:09.873808+02
9	auth	0007_alter_validators_add_error_messages	2020-12-23 15:40:09.892905+02
10	auth	0008_alter_user_username_max_length	2020-12-23 15:40:09.920609+02
11	auth	0009_alter_user_last_name_max_length	2020-12-23 15:40:09.943541+02
12	auth	0010_alter_group_name_max_length	2020-12-23 15:40:09.963374+02
13	auth	0011_update_proxy_permissions	2020-12-23 15:40:09.990645+02
14	auth	0012_alter_user_first_name_max_length	2020-12-23 15:40:10.016241+02
15	users	0001_initial	2020-12-23 15:40:10.174897+02
16	admin	0001_initial	2020-12-23 15:40:10.273621+02
17	admin	0002_logentry_remove_auto_add	2020-12-23 15:40:10.311962+02
18	admin	0003_logentry_add_action_flag_choices	2020-12-23 15:40:10.34529+02
19	judge	0001_initial	2020-12-23 15:40:10.387857+02
20	judge	0002_auto_20201223_1516	2020-12-23 15:40:10.663225+02
21	sessions	0001_initial	2020-12-23 15:40:10.785117+02
22	users	0002_customuser_username	2020-12-23 15:40:10.832219+02
23	judge	0003_auto_20201224_1318	2020-12-24 13:18:39.560453+02
24	users	0003_auto_20201224_1318	2020-12-24 13:18:39.591326+02
25	judge	0004_auto_20201226_1342	2020-12-26 13:42:46.867693+02
26	judge	0005_auto_20210116_0033	2021-01-16 00:33:11.966693+02
27	judge	0006_auto_20210116_0216	2021-01-16 02:16:40.130675+02
28	judge	0007_auto_20210116_0217	2021-01-16 02:18:08.707208+02
29	judge	0008_remove_tasktest_language	2021-01-16 17:15:03.992325+02
30	judge	0009_auto_20210116_2251	2021-01-16 22:51:26.51274+02
31	judge	0010_auto_20210129_1716	2021-01-29 17:17:01.498343+02
32	judge	0011_auto_20210202_1131	2021-02-02 11:31:58.330773+02
33	judge	0012_auto_20210208_2047	2021-02-08 20:47:17.900797+02
34	groups	0001_initial	2021-02-08 21:19:10.222077+02
35	groups	0002_auto_20210208_2120	2021-02-08 21:20:42.7882+02
36	groups	0003_auto_20210223_1638	2021-02-23 16:38:47.158994+02
37	groups	0004_auto_20210223_1643	2021-02-23 16:43:13.764804+02
38	groups	0005_auto_20210311_1759	2021-03-11 18:00:02.646178+02
39	competitions	0001_initial	2021-03-11 18:00:02.770287+02
40	judge	0013_userproblemstatus	2021-03-27 15:43:55.305217+02
41	competitions	0002_delete_competitionproblem	2021-04-08 17:28:04.82641+03
42	judge	0014_problem_competition	2021-04-08 17:28:04.904389+03
43	judge	0015_auto_20210409_2033	2021-04-09 20:33:30.025154+03
44	judge	0016_auto_20210421_1334	2021-04-21 13:34:29.153121+03
45	judge	0017_auto_20210421_1352	2021-04-21 13:53:00.986572+03
46	judge	0018_auto_20210421_1358	2021-04-21 13:58:59.61477+03
47	groups	0006_auto_20210421_2036	2021-04-21 20:36:28.542639+03
48	judge	0019_auto_20210421_2036	2021-04-21 20:36:28.580162+03
49	competitions	0003_competition_description	2021-04-21 21:11:34.491106+03
50	competitions	0004_auto_20210421_2111	2021-04-21 21:11:55.73711+03
51	news	0001_initial	2021-04-22 12:30:11.442712+03
52	groups	0007_auto_20210424_1537	2021-04-24 15:37:57.101086+03
53	judge	0020_auto_20210424_1537	2021-04-24 15:37:57.289095+03
54	urlshortening	0001_initial	2021-04-24 15:37:57.328916+03
55	users	0004_auto_20210424_1537	2021-04-24 15:37:57.374098+03
56	groups	0008_auto_20210429_1731	2021-04-29 17:31:20.682021+03
57	judge	0021_auto_20210429_1731	2021-04-29 17:31:20.77584+03
58	judge	0002_auto_20210429_1912	2021-04-29 19:13:13.006499+03
59	users	0002_auto_20210429_1912	2021-04-29 19:13:13.049547+03
60	judge	0001_squashed_0021_auto_20210429_1731	2021-04-29 19:13:13.059156+03
61	users	0001_squashed_0004_auto_20210424_1537	2021-04-29 19:13:13.06558+03
62	groups	0001_squashed_0008_auto_20210429_1731	2021-04-29 19:13:13.071909+03
63	competitions	0001_squashed_0004_auto_20210421_2111	2021-04-29 19:13:13.081573+03
64	news	0002_auto_20210501_1520	2021-05-01 15:20:24.005366+03
65	competitions	0002_auto_20210605_0143	2021-06-05 01:43:28.954953+03
66	groups	0002_auto_20210605_0143	2021-06-05 01:43:29.002229+03
67	judge	0003_auto_20210605_0143	2021-06-05 01:43:29.102341+03
68	users	0003_customuser_avatar	2021-06-05 01:43:29.151888+03
69	judge	0004_auto_20210619_1459	2021-06-19 15:00:05.771449+03
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
x82teagu5aouu13r5u9uhkvh69rk262z	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ks4Qz:YcRfQXBIX6mniJvyzbghWc35hWxpvHoPJ4V5XFyf444	2021-01-06 15:44:09.140679+02
eb3dm8tdbtu2g8bwaxbrsalt27iyf514	e30:1lXi07:l2kMvTOTmXe8BlMVtqaej4OH4T7NtkF6b-QC8-QsXWA	2021-05-01 13:16:31.76606+03
n3l4dta4mfc2vmu2xy5odnyyl2vpnhks	e30:1l0P0l:kKldwuVClPq9Ri5J9KMjenlRyVP1jntKBbk_8Cw7Y-s	2021-01-29 15:19:31.999685+02
yy6i864v511xphn89bt62r82ny9sfopg	e30:1l0P1S:zWOkUUQWaOnQdCi4t7CXp5S3HbRgUh1teLwHjN-N7iE	2021-01-29 15:20:14.400622+02
d9rhqye0bj92hqq1x539brgoxgjkfrx8	e30:1l0P2G:pL9GI2bk1FvQdkWfPKtz7dBVYvEzPGYQj05eOqUDiKY	2021-01-29 15:21:04.630812+02
otrhcrmud96qc1rgcemykntia44jbhmn	e30:1l0P2b:Pc7OgeWDoGh5YK7UBQtfpTw63nkr43tXfEjZbXwSvHA	2021-01-29 15:21:25.812953+02
00j7qa9wcpkztj312p5p9t1v8xla40ph	.eJxVjM0OwiAQhN-FsyHC8rP16N1nIAtspWogKe3J-O62SQ96nPm-mbcItC4lrJ3nMGVxEcqL028ZKT257iQ_qN6bTK0u8xTlrsiDdnlrmV_Xw_07KNTLtmbN7kxARiFkTKgUbNGwd35kgOzBZ4uDG8F6pY2jGAe0YEgrMohJfL7thjce:1l0Ura:id72stjQ96Ro3o3oki0-RQq95zxmWkNz-bWwYFVWydM	2021-01-29 21:34:26.226751+02
26a1h42k9do3l7kxkkg79qwm0tziknds	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1l4nv6:OhkWw3DoRJtGkeKYU497he1EHreOBnlC3UdZqAmEHRo	2021-02-10 18:43:52.64191+02
kzvwkazubxwjldf7sypx8wxn43gxfx56	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1l5SQe:PedQ_STd9J12OgexUvNTeJei9yHNVwfBT53k9gGT1mM	2021-02-12 13:59:08.991184+02
4c3hnz2baeopt9e8g3yd9miuv6u3cbgy	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1l6s50:pTauku7EglNnZg0g-hkbiLs9uAjWGHTSiplQ6aHQjWU	2021-02-16 11:34:38.449178+02
ihi10o6gf5ms4c4p38j5n8b468vhd9yk	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1l6zxD:wlhMi8Mh30pr6IWLBrVU23TzrbMP2qbjD_N-dqXPJTc	2021-02-16 19:59:07.01263+02
fqwvmaqhah8azrhr1qg7obgfcetk18uk	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1l9BvA:9Lc5Pg4Jh0EdS8zIvJ8Zz_zLMSdmk-VQVUS5yyMGnU8	2021-02-22 21:10:04.818228+02
kmf1w45yj62ydq4x8emqt085jmvjhpjj	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lEYri:dEEB3KeTNxeB88t0FP5hKPOojyK_3_uuBqiGD1Y5ccs	2021-03-09 16:40:42.479994+02
bd2d0omdu0fb4vyijcchox5me9610hc1	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lKOJ9:uy8n7gjfmh8ayAXi6DsBxuKTOJXBB-yjtqMOtEPkHW0	2021-03-25 18:37:07.111125+02
cqutkpo5detwxww76550577lqkrtzy8f	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lPSG0:NJvJmdV6Ju8I6Jq99RHNb-Ejc8fZ8mjdmnj5MCALNiA	2021-04-08 18:50:48.766667+03
hkcy0d05gd59rl8lg4uwure8ovrjijkr	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lPSU9:zpropoLsTVQqtunKy-DdKeSeAADIa79J19yQOeOcr4Y	2021-04-08 19:05:25.319811+03
07w0wsuwwxakhn2qoqp3bxsnfrlub9m9	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lTliw:qlM-Zi9cBmllB-OFPVoSC98PrfBINXlCZyrSEhVuJ8c	2021-04-20 16:26:30.186018+03
tudyj9qzoahbo2ub40k167s0ecrhvj1c	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lU7Cy:heKomJ2iwsh4aekMTALp0yJrrlxSY-yL-8A7qyvHDT4	2021-04-21 15:22:56.100057+03
8q22okmmxv3vozpbm1vnjtas2nnmtv23	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lUruy:aoxdwhBRWfk4Vfm3FCOdaLXDkEgCzW7k8oGz5DYdLvs	2021-04-23 17:15:28.24212+03
pkk1gcb421ditbt4vu6pb3lll30lmhv9	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lV7SB:nY6_Ajp-4cKGybGwvuvNsK_8OX2inWYjcXY5ylLLLJ4	2021-04-24 09:50:47.548016+03
mlw7yqqpny1psytlptqu7t5oafqwhtam	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lX0I4:BMFomsXSZ8FuUTM_9Qfsy6ckgJ9gPnQ5Vae4gmePjAw	2021-04-29 14:36:08.843899+03
pkdiuoqae7kjh57hl2e4tzktxyva74m0	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lXKSk:PDDYzagAdEhTloMnDOgklBEr7ZemhQORyo2JUQtx47c	2021-04-30 12:08:30.251358+03
50x8ljcdirriu35gj0i5pv2un3j2gjmt	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lXKo1:iNkHDdu-3d9gqxaRk6seYUoYKWGTe4C2anrprWkMhPI	2021-04-30 12:30:29.355247+03
r3p9hl4j9nj2ffgr7edyqgexgdjm6eub	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lXMrH:sq03eZDkJClKEiTWx5dQxl3bhDZJvtc-RVOZtGbUWRA	2021-04-30 14:41:59.338513+03
ncn1zaia8tmb5vfi5veemdk4vjjvgz8q	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lXOiD:D53ak72BiF_KjMzlieg9D5fMcfoC49zkngi0xTUhnIM	2021-04-30 16:40:45.053939+03
3572pstpks2c5c6vet82am0y3hwyig4x	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lXPz3:JiKQLE1nWd9OYuDDMBgYyhZxQmODpRXRG67Eo0OvBLY	2021-04-30 18:02:13.465289+03
ey5083dy8jf9g98vndksi315lwioxftj	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lXRVS:dsogaQod7Yhnx8CsjN77FRtTygHKcuK8daujfWSYLcQ	2021-04-30 19:39:46.750826+03
66bhlpdb0kpe7ahm937x2hl3ebmfcd9s	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lXT0B:WgPoeQLILJSLf8NRjfWhHOmaIwPkRv8d1aZmIffkAOM	2021-04-30 21:15:35.999323+03
mfqet1j2mt7mu6sdnyg5ipn556en8p9w	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lXT0n:8EjIDIm1CiHxiTp8g1M5104Ijveugv1grexVQpFh2mc	2021-04-30 21:16:13.645092+03
kzt6lst9s322supr8eely1gkes1xzktw	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lZU2X:Xu46TZqg1nCThKGttL-zwpm1QwPET54Na-UAzw6h7Xg	2021-05-06 10:46:21.343938+03
64gtue9sg1roucx0pzivh5zt8g4nqw42	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lXgtL:RGfYlVkDhT76Tx96GGrxWZtquYUlvhqp5vS6xnzJrj0	2021-05-01 12:05:27.034044+03
5esta7jdlbfyfo4jjgbl3q42pg1eoig9	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lXgv0:7m_OU1dkOr93Wzrm8UOvDaiCxrrGjAQMpwixgakjQCc	2021-05-01 12:07:10.890006+03
f9e6isjtf0ho75fs0c2q51jb0ah7pmfy	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lZU43:qj_DUUsHi-jeJgaf4B9uj5ADIlEmDmlA6ZeM2yWx_HI	2021-05-06 10:47:55.464589+03
q1q2y34gsxe1kzvg6b7xu015qvk82zhk	e30:1lZU8p:ZwQIl1JpPC7Oo4Rmc2CxZbCvrJIyb_I2_ubQ6b1Hw88	2021-05-06 10:52:51.025322+03
zl55r01fef6ckapeu6nuh4v70mra45b9	e30:1lZU9N:ZhMACjtcRA8pw653ORFotJNusI1FcH0EsV05SBVCKhI	2021-05-06 10:53:25.827987+03
dglguk7bxi9o3wca8kejn7xs1ndnrcme	e30:1lZUA2:vkB5SeXTkFQIsqUYCdvZNjwcGM8duxp90tiXG4HqZ4w	2021-05-06 10:54:06.279387+03
sapqjei2odvnstepukyy32wlxf8ov9ah	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lZUAx:XmTD8S68-S8-vWKy7bBkSGMb8yJIIP8qKnDSty7m7Xo	2021-05-06 10:55:03.221639+03
kr0394at9jz3ij86urqxsxvbs5tdlsw4	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lYBZw:PdWzW6UFOiPb11QQagcY_x-G_ygohJ_wxrjK2jAtBUE	2021-05-02 20:51:28.834679+03
bv20n32r3sqjfo09fwz4p7gy249chmkw	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lYVxv:P1NCedIHNGzDzyhKyk2xPVLd-3eRP0iMX8Kx87hEGGU	2021-05-03 18:37:35.524575+03
wagg7hfuliybx7nvr2bldjd9h3p1ihvr	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lZUEu:KH9fvW-48BQiqY6fhzz9lA_m-hNy0Bk5qGG5a6Q45BI	2021-05-06 10:59:08.991733+03
77qy84d03poo1f17roxphi9h09bp2xyn	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lYm7R:VwVu0pHI1VDK3YGfxN_C9ZOenBMqSJnshlOGzFl2wRY	2021-05-04 11:52:29.913311+03
uk00ew0yutrtw96aeose647otq66cscl	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lZUGH:QLKjFth0S5E0plmpAuW1VTj6pix1MdtbZxmv5YEAf3U	2021-05-06 11:00:33.295731+03
wsndmb4uqpzegp9sx0ec21kgffoub5k5	.eJxVjsEOgyAQRP-Fc0NAQaDH3v0GsuwuamswET01_fdq4qG9zpt5mbeIsG9j3CuvcSJxF1rcfrME-OJyAnpCGRaJS9nWKcmzIi9aZb8Qz4-r-ycYoY7HWmVnNZrcKKVtCpaaxnKCjhVx8AZCl8GY1iH4AOh06nJLCQGJvWHyp3Q-Duww8KHjIj5f2JI-JQ:1lcsQi:Xy7rtFOjAhDCft-Y1SrxxJLPcKPpDP3sEshgcQEdB8k	2021-05-15 19:25:20.82934+03
z8xogl7jtr6t8ka56srtphz5qfmwg0p0	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ld76q:PoU860Z4hpfedERJ86CWJpojLmme8Sy1KFNbqZsybKU	2021-05-16 11:05:48.636367+03
i72pnhw69okxgz259icvp1axdxr5w1fb	.eJxVjsEOgyAQRP-Fc0MAQaHH3vsNZtld1GowETk1_fdq4qG9zpt5mbfooe5jXwtv_UTiLrS4_WYRcOZ8AnpBHlaJa963KcqzIi9a5HMlXh5X908wQhmPtUqd02iTUUq7GBwZ4zhCy4o4eAuhTWBt0yH4ANjp2KaGIgISe8vkT-lyHKgw8KGrs_h8AdjJPjI:1lZD1h:jcFZmJQQbTkxqV9WCD1JiOX-5mTa8dpmSsLzj8wHcp4	2021-05-05 16:36:21.28586+03
3xz1d2spycjag0jwvj1omt3jtrg9xlz1	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lc675:6r-eu8ToqDmKBsI-ikfu_zkwBGnq2P9g-BqnT_x3JEA	2021-05-13 15:49:51.986108+03
q7y1o0y4euehum5su4euu0pjgtp2rfow	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lc6Hn:lQ8-yqHccI5LSyBwu32cBPIKh2fikrOpunWpbY_4CTw	2021-05-13 16:00:55.979494+03
aqult9208lbqnpzt3zvpzhd8xd05sr2h	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lc6QY:bi3tpRwPl6tNWLWKTVpyoSYYw_33-cQoYST9Gncy0Ls	2021-05-13 16:09:58.366578+03
g7mc1knldxct0f6anlt2jxra0iq7uxmi	.eJxVjDsOgzAQBe_iOrJs8Ddl-pzBWu-ugYBAAlxFuXtAoqGdN_O-Ik0wdxU6Fk9RR_EQCerep7rxmgY6oL6zDDjyfA70OcpF4jLv65Dlqchr3eR7IZ5el3s76GHrj1oVbzWa0iilbY6WmsZyBseKOAYD0RUwpvUIIQJ6nV1pKSMgcTBMQfz-vp8-Mg:1lZGxH:uzUw2zpi8xEVsLGlg-onPUETDzPFZY46Qx_kObqM7OQ	2021-05-05 20:48:03.034922+03
2t17k2c2i45w9d0xnk1zr7bne60wkxg6	.eJxVjDsOgzAQBe_iOrJs8Ddl-pzBWu-ugYBAAlxFuXtAoqGdN_O-Ik0wdxU6Fk9RR_EQCerep7rxmgY6oL6zDDjyfA70OcpF4jLv65Dlqchr3eR7IZ5el3s76GHrj1oVbzWa0iilbY6WmsZyBseKOAYD0RUwpvUIIQJ6nV1pKSMgcTBMQfz-vp8-Mg:1lZU1q:aJOQHyfrUGeQC7-_bt8XRLsoaHgQfn5srXe0eI7FdLU	2021-05-06 10:45:38.515971+03
a2xznqo5r7shp17309jkxa73mj05ixwm	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lc7Kw:SISLDNDl9QLK4VFuEisUZp19rDrQVBEWnSUJ-pTjXA8	2021-05-13 17:08:14.310548+03
6lzbh1d0x5oa1tech7xel8hu9w7vlhiz	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lc9Nd:HtxIRj2e1vjrQKwLJdiRxRxvqhbYisWc646EAwUCu_w	2021-05-13 19:19:09.521368+03
sty9og1u4lib33pxc984f063eg0dl46f	.eJxVjsEOgyAQRP-Fc0MAQaHH3vsNZtld1GowETk1_fdq4qG9zpt5mbfooe5jXwtv_UTiLrS4_WYRcOZ8AnpBHlaJa963KcqzIi9a5HMlXh5X908wQhmPtUqd02iTUUq7GBwZ4zhCy4o4eAuhTWBt0yH4ANjp2KaGIgISe8vkT-lyHKgw8KGrs_h8AdjJPjI:1lcrc8:GOHPSAdvtbxcncl3r2dy-FwC0nfXU5ubbVM_xnRu0oU	2021-05-15 18:33:04.04511+03
7ezkwln83d384mqencxnbh5lp3k9hji1	.eJxVjsEOgyAQRP-Fc0MAQaHH3vsNZtld1GowETk1_fdq4qG9zpt5mbfooe5jXwtv_UTiLrS4_WYRcOZ8AnpBHlaJa963KcqzIi9a5HMlXh5X908wQhmPtUqd02iTUUq7GBwZ4zhCy4o4eAuhTWBt0yH4ANjp2KaGIgISe8vkT-lyHKgw8KGrs_h8AdjJPjI:1lcs3g:JCGiVMRBYxOn9NTUDUrAqMCfl61BMvyp0Ibs_gK8bj0	2021-05-15 19:01:32.384702+03
r1t2zwaf1r1wxz91c8c07teu34efvcul	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lojoy:ZGc9Ab9t6KIQv1jlpIVN2IgaXJ7ew6_-c91j6N2LwxE	2021-06-17 12:39:24.111977+03
v5zdu8jdqqmwuowixilo0amgvm2tozn3	.eJxVjsEOgyAQRP-Fc0MAQaHH3vsNZtld1GowETk1_fdq4qG9zpt5mbfooe5jXwtv_UTiLrS4_WYRcOZ8AnpBHlaJa963KcqzIi9a5HMlXh5X908wQhmPtUqd02iTUUq7GBwZ4zhCy4o4eAuhTWBt0yH4ANjp2KaGIgISe8vkT-lyHKgw8KGrs_h8AdjJPjI:1ld8dg:-foel4W6ch1xVei_L3gY5cqxVFJ7zjqZnGeXPrpJuMM	2021-05-16 12:43:48.175249+03
lbs52glzr3vjfehm9w7yd2vci84ef328	.eJxVjsEOgyAQRP-Fc0NAQaDH3v0GsuwuamswET01_fdq4qG9zpt5mbeIsG9j3CuvcSJxF1rcfrME-OJyAnpCGRaJS9nWKcmzIi9aZb8Qz4-r-ycYoY7HWmVnNZrcKKVtCpaaxnKCjhVx8AZCl8GY1iH4AOh06nJLCQGJvWHyp3Q-Duww8KHjIj5f2JI-JQ:1ld8ns:x9n8e0AUEpbPrvyCnWJU3dV2-hKzzXEDJl1ianKJFM0	2021-05-16 12:54:20.072215+03
pdk8xrz6bii47fwknmn18pkti5frftux	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ls28f:nBAtLkj5tRoCIdpbbHpq8SW-2CNB6-AvkUnx6Kodsqg	2021-06-26 14:49:21.671928+03
mpusxf3rkep9g9i6hopdq4vkoyxtuf9k	.eJxVjsEOgyAQRP-Fc0MAQaHH3vsNZtld1GowETk1_fdq4qG9zpt5mbfooe5jXwtv_UTiLrS4_WYRcOZ8AnpBHlaJa963KcqzIi9a5HMlXh5X908wQhmPtUqd02iTUUq7GBwZ4zhCy4o4eAuhTWBt0yH4ANjp2KaGIgISe8vkT-lyHKgw8KGrs_h8AdjJPjI:1ld8pW:B7uFP5HNJpfoNNxIbT0v7AlVxAJj0lcKFjyR-M3fwc4	2021-05-16 12:56:02.852875+03
tkvtya7e6u12yjra4sxeyk1s9eaq7miu	.eJxVjDsOgzAQBe_iOrJs8Ddl-pzBWu-ugYBAAlxFuXtAoqGdN_O-Ik0wdxU6Fk9RR_EQCerep7rxmgY6oL6zDDjyfA70OcpF4jLv65Dlqchr3eR7IZ5el3s76GHrj1oVbzWa0iilbY6WmsZyBseKOAYD0RUwpvUIIQJ6nV1pKSMgcTBMQfz-vp8-Mg:1lokCs:8RgLtVU6DEYev2KJAtNkrMDMavT1cpkLBAH4V5Cl1eo	2021-06-17 13:04:06.600371+03
x0b148xst1ihmhqnyyh0ihr0wjx67hry	.eJxVjsEOgyAQRP-Fc0MAQaHH3vsNZtld1GowETk1_fdq4qG9zpt5mbfooe5jXwtv_UTiLrS4_WYRcOZ8AnpBHlaJa963KcqzIi9a5HMlXh5X908wQhmPtUqd02iTUUq7GBwZ4zhCy4o4eAuhTWBt0yH4ANjp2KaGIgISe8vkT-lyHKgw8KGrs_h8AdjJPjI:1ldEIC:5b2-leSmqW2jV7r41lcz2_5kxp2yfxOvymz4NRqhp5M	2021-05-16 18:46:00.512416+03
bfzlnx7zm1c2xi3ywpfapj8t8t4k1orm	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ldESH:8B9T1U7CalMaabSYcgz11geFhxdAwxpfut78NR-gri8	2021-05-16 18:56:25.797769+03
onc3fwbr6xztiqx0f2s7txwskr2ugbwf	.eJxVjsEOgyAQRP-Fc0MAQaHH3vsNZtld1GowETk1_fdq4qG9zpt5mbfooe5jXwtv_UTiLrS4_WYRcOZ8AnpBHlaJa963KcqzIi9a5HMlXh5X908wQhmPtUqd02iTUUq7GBwZ4zhCy4o4eAuhTWBt0yH4ANjp2KaGIgISe8vkT-lyHKgw8KGrs_h8AdjJPjI:1lpWlR:vRf0FkeNdbkn3vLzBh5FQWu4-JqweQoMuzY_7km9pCg	2021-06-19 16:55:01.164361+03
tv44s6569o783157pzcvkneow0f4r34s	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ldIzh:BVfORb1lx9YVFOdsUTennBdY4zR38-JZXLsQy1Kn3x8	2021-05-16 23:47:13.804406+03
qbdke7b5cy5stuufg6xncz0m6kt41t1h	.eJxVjsEOgyAQRP-Fc0NAQaDH3v0GsuwuamswET01_fdq4qG9zpt5mbeIsG9j3CuvcSJxF1rcfrME-OJyAnpCGRaJS9nWKcmzIi9aZb8Qz4-r-ycYoY7HWmVnNZrcKKVtCpaaxnKCjhVx8AZCl8GY1iH4AOh06nJLCQGJvWHyp3Q-Duww8KHjIj5f2JI-JQ:1ldUKL:uHqBeyT_-DsjTE9ESEi7Syr1fXYm_J66A52FBODl7bU	2021-05-17 11:53:17.603623+03
vl4mftb0nc7s7t39hd2wl32zt92s2ih0	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ldW20:9dQdbh5qphS3sfEBApIpWaEf2HZL0pD0iPhxCG2i5sU	2021-05-17 13:42:28.762126+03
a4f3mlyacd9nv023qfghpydqi1zkb3ot	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ldWTn:-OwHQ0ORMT4JvxXif2SX01IEKGoUms0UeVySDGj5MwA	2021-05-17 14:11:11.583706+03
cz19gf3j5xueyncp6terz4a9j56bikan	eyJfbGFuZ3VhZ2UiOiJ1ayJ9:1lolfN:Rw3TvmbZHMPRpWtLMg3e16wutSns_RIVl69oqDbOdTI	2021-06-17 14:37:37.315068+03
o4qu3cms8o9usgx0fwgvx26g551xsdd9	.eJxVjDsOgzAQBe_iOrJs8Ddl-pzBWu-ugYBAAlxFuXtAoqGdN_O-Ik0wdxU6Fk9RR_EQCerep7rxmgY6oL6zDDjyfA70OcpF4jLv65Dlqchr3eR7IZ5el3s76GHrj1oVbzWa0iilbY6WmsZyBseKOAYD0RUwpvUIIQJ6nV1pKSMgcTBMQfz-vp8-Mg:1luaZG:VY9ii3OAbp7G8NiDlaETK5mtKMWxHm1LHXrdAqVr_Ls	2021-07-03 15:59:22.510153+03
klqwyrvqgin8pnl36940tmjluikbb0dj	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ldWxb:H1gvHFTlYP-dipmmZ5wfTXroBO-LfR1BddgM4CM8QVk	2021-05-17 14:41:59.820227+03
2aceqwzy1mb313lk02mutpvey78dzvre	.eJxVjsEOgyAQRP-Fc0MAQaHH3vsNZtld1GowETk1_fdq4qG9zpt5mbfooe5jXwtv_UTiLrS4_WYRcOZ8AnpBHlaJa963KcqzIi9a5HMlXh5X908wQhmPtUqd02iTUUq7GBwZ4zhCy4o4eAuhTWBt0yH4ANjp2KaGIgISe8vkT-lyHKgw8KGrs_h8AdjJPjI:1lowrT:6PkOXMQwSOuRb1rUkKwtpqVbSI__ieee3_MSCpgwIQM	2021-06-18 02:34:51.915935+03
ora951ct5qzaw3m8gtj7hjewih1ayzdy	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ldX0C:4j1z3In-cjpOS_sF4P6sY8OJQeVo1zs-Q3Qdt1TWW9M	2021-05-17 14:44:40.771996+03
zjq19e79ghj4uvk061m8t0p9536kb9lu	.eJxVjDsOwjAQBe_iGlks_lPScwZr7V3jALKlOKkQd4dIKaB9M_NeIuK61LgOnuNE4izAiMPvmDA_uG2E7thuXebelnlKclPkToe8duLnZXf_DiqO-q09oc7gC4SEZEoCtqxOFgsxGGfRa0feBZXBIgZQRwBOGFC7kA1YEu8PJNU4aQ:1lp5Cp:T_RA5qclRyOrd4GY0m-HXdk2F2HIEWxfZOKb-dZLolk	2021-06-18 11:29:27.375987+03
apxwkzmg2stgdf1hw0tc0o3gx9uvxgqv	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ldXPN:sdx-7Fhd1cyrpzI01Ux-MaE8PweJvAH5qH1eDpMDBlQ	2021-05-17 15:10:41.371516+03
h0iqfdd3z5z28rqu1k0f8bumtirs7xxm	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lp8Mk:4CcV27Q_Rl-v3YIAUldNt3uO5I1Z6b8UMXpDKoZctLg	2021-06-18 14:51:54.983214+03
tf3tuhsppxzmkfo7sk1qa6alzqv3yx80	.eJxVjM0OwiAQhN-FsyEgPwWP3n0GsssuUjU0Ke3J-O62SQ96m8z3zbxFgnWpae08p5HERWgnTr8lQn5y2wk9oN0nmae2zCPKXZEH7fI2Eb-uh_t3UKHXba0oFGM1RD9EGEqwihBQW8azy2gpBIhAoFk744tmysZYUi6T57Al8fkCGxI4vw:1ldYfs:LiAR2jE5SwzpBP1PKe8jFolKg8WgL6lm2gP6XAIBbhY	2021-05-17 16:31:48.409669+03
dkmnz77a56yqp3j142ewlcozn942xfq9	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lpACn:Y05QXVHzBEErHiKLN1-jFCNAnmQ16lyHHo-vA9Thv0s	2021-06-18 16:49:45.204195+03
3ea2m8kqgykow17y6nqkv5uhzcnyh3kh	.eJxVjDsOwjAQBe_iGlks_lPScwZr7V3jALKlOKkQd4dIKaB9M_NeIuK61LgOnuNE4izAiMPvmDA_uG2E7thuXebelnlKclPkToe8duLnZXf_DiqO-q09oc7gC4SEZEoCtqxOFgsxGGfRa0feBZXBIgZQRwBOGFC7kA1YEu8PJNU4aQ:1lhb8c:hdhZPlWVpiGHyTgRsvvSfA0biJypa7va52_RHaUBQIc	2021-05-28 19:58:10.637262+03
hidqexbe3832ebp2lwqogez7cjicny59	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lhfDu:nSMvj_wOWHsA8winX09zQHTyIvkYpp45JifgOn5HcUY	2021-05-29 00:19:54.527901+03
tstoj4cm37tqkhbjiqcon4xd0zkg27qd	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1lhfIL:UFQD59amJZpyyzfasFSZzJY_cPGfpTMUSNfiQjqnMik	2021-05-29 00:24:29.583885+03
w27smhkdynpa4fiby36eztf9a9rvc1xr	.eJxVjDsOgzAQBe_iOrJs8Ddl-pzBWu-ugYBAAlxFuXtAoqGdN_O-Ik0wdxU6Fk9RR_EQCerep7rxmgY6oL6zDDjyfA70OcpF4jLv65Dlqchr3eR7IZ5el3s76GHrj1oVbzWa0iilbY6WmsZyBseKOAYD0RUwpvUIIQJ6nV1pKSMgcTBMQfz-vp8-Mg:1liboE:BuMWSuO-Bo5qHLSuup99FYeTNc9vOS_vO4v-QscNXCM	2021-05-31 14:53:18.202367+03
gx92q0qsn2no8u2w8t3r7ee012qako8l	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ljIA0:oOKxqUghdqTpdem-g0xb5eCozLuHkA8lWaZw1ZmsYc8	2021-06-02 12:06:36.40287+03
vkuezmubg050h58e6k3fgsrt4cht28fj	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ljecO:djglnXwol_vKjKdVvTtc9UrgzzmH49I8aO2p1nP5B3I	2021-06-03 12:05:24.900049+03
eox9jg2b6pv9mwe5m7cllmb9ah7l3qfo	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ljeyQ:kRuw2r3sCguyhY3UQd2OQDoSZJoL9tf6OnFfoUf6u_w	2021-06-03 12:28:10.198613+03
wouk58udgbswm2b3qxvucagzh5y0jf5l	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ljfCg:pr65LV0hYHzmzHq2IVFRw7F98Qd0j0GsT8PoPZNeWZY	2021-06-03 12:42:54.198869+03
4uia3jwywbswygtug9pc7uy67jig3khh	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ljgMr:qfPegIEmWciW7v6cEf8K0LbrLd8v65EE5kv9XI9iA-w	2021-06-03 13:57:29.686922+03
gtx19xezxqugcyfe79orrux9599a70th	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1ljhxO:uRZGNOZzT9QCdk0EhdtFdUbMBI8Oi5NXitY4iwMo__A	2021-06-03 15:39:18.173557+03
4auie2swvl7eo7xzlj328sf9k24quw7q	.eJxVjsEOgyAQRP-Fc0MAQaHH3vsNZtld1GowETk1_fdq4qG9zpt5mbfooe5jXwtv_UTiLrS4_WYRcOZ8AnpBHlaJa963KcqzIi9a5HMlXh5X908wQhmPtUqd02iTUUq7GBwZ4zhCy4o4eAuhTWBt0yH4ANjp2KaGIgISe8vkT-lyHKgw8KGrs_h8AdjJPjI:1loQHl:QhdHfr-SuVJv6JZTj_ZNop9aL2dnS8wE40w8IHlwCxo	2021-06-16 15:47:49.121875+03
3qyfiihdb0rgn92yg8tffdq4c7de4eh0	.eJxVjsEOgyAQRP-Fc0NAQaDH3v0GsuwuamswET01_fdq4qG9zpt5mbeIsG9j3CuvcSJxF1rcfrME-OJyAnpCGRaJS9nWKcmzIi9aZb8Qz4-r-ycYoY7HWmVnNZrcKKVtCpaaxnKCjhVx8AZCl8GY1iH4AOh06nJLCQGJvWHyp3Q-Duww8KHjIj5f2JI-JQ:1loeGp:XOEOnipK-Tw3l7ltODd37-n62-XrDpLm4AXmkujz9mA	2021-06-17 06:43:47.862897+03
2iw2w3na979a5q9r1mve2iahcu3r61hx	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1loeLk:lO080y2GyPY2nebLBmnz9SjIjfeQ6HFVOUbu6nj6X3Q	2021-06-17 06:48:52.368389+03
dpxl92722de8nlpt0yba5lwlmup7zds9	.eJxVjEEOwiAQRe_C2hCgUMCle8_QDDODVA0kpV0Z765NutDtf-_9l5hgW8u0dV6mmcRZaHH63RLgg-sO6A711iS2ui5zkrsiD9rltRE_L4f7d1Cgl2-tsncabTZKaZeiI2McJxhZEcdgIY4ZrB08QoiAXqcxD5QQkDhYpiDeH-TOOME:1logEl:C-DBQgRU6skZeqeUfJkQHcPmX4HLbR19dgjrRenZW3s	2021-06-17 08:49:47.951611+03
\.


--
-- Data for Name: groups_group; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.groups_group (id, name, description) FROM stdin;
7	Test group2	swdasd
8	Test group3	swdasd
9	Test created group	description of test created group
6	Test group	Test group, within which test competitions are held to test functionality
10	SAmple group	Lorem ipsum, dolor sit amet consectetur adipisicing elit. Non quibusdam maiores alias voluptas, ratione aperiam nulla quidem quo saepe culpa unde autem quis beatae quaerat voluptate id esse consequuntur tempora reprehenderit, dignissimos molestiae, voluptatibus quisquam numquam accusamus. Ducimus, et maxime!
\.


--
-- Data for Name: groups_groupuser; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.groups_groupuser (id, role, group_id, user_id) FROM stdin;
2	TE	6	1
4	TE	9	1
17	SD	9	15
25	TE	10	1
24	TE	6	15
\.


--
-- Data for Name: judge_problem; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.judge_problem (id, number, title, description, description_photo, difficulty, classification, input_condition, output_condition, special_warning, is_active, memory_limit, time_limit, competition_id, classification_en, classification_uk, description_en, description_uk, difficulty_en, difficulty_uk, input_condition_en, input_condition_uk, output_condition_en, output_condition_uk, special_warning_en, special_warning_uk, title_en, title_uk) FROM stdin;
1	1	Simple problem	Program reads two-digit number and prints every digit, separated by a space.		EA	BG	One integer from 10 to 99 including.	Two digits separated by a space.	<strong>Important!</strong> In case you have any troubles solving this problem, please check out examples on Help page.	t	128	1	\N	BG	BG	Program reads two-digit number and prints every digit, separated by a space.	Програма зчитує двоцифрове число і виводить через пропуск кожну цифру окремо.	EA	EA	One integer from 10 to 99 including.	Натуральне число на проміжку від 10 до 99 включно.	Two digits separated by a space.	Спочатку першу цифру числа і через пропуск другу.	<strong>Important!</strong> In case you have any troubles solving this problem, please check out examples on Help page.	<strong>Увага!</strong> У випадку виникнення проблем зі здачею цієї задачі зверніться на сторінку допомоги.	Simple problem	Проста задача
4	A	Simple problem	Program reads two-digit number and prints every digit, separated by a space.		EA	CB	One integer from 10 to 99 including.	Two digits separated by a space.	<strong>Important!</strong> In case you have any troubles solving this problem, please check out examples on Help page.	t	128	1	2	CB	CB	Program reads two-digit number and prints every digit, separated by a space.	Програма зчитує двоцифрове число і виводить через пропуск кожну цифру окремо.	EA	EA	One integer from 10 to 99 including.	Натуральне число на проміжку від 10 до 99 включно.g.	Two digits separated by a space.	Спочатку першу цифру числа і через пропуск другу.	<strong>Important!</strong> In case you have any troubles solving this problem, please check out examples on Help page.	<strong>Увага!</strong> У випадку виникнення проблем зі здачею цієї задачі зверніться на сторінку допомоги.	Simple problem	Проста задача
21	14_1	Проста задача	Програма зчитує двоцифрове число і виводить через пропуск кожну цифру окремо.		EA	CB	Натуральне число на проміжку від 10 до 99 включно.	Спочатку першу цифру числа і через пропуск другу.	<strong>Увага!</strong> У випадку виникнення проблем зі здачею цієї задачі зверніться на сторінку допомоги.	t	128	1	14	CB	CB	Program reads two-digit number and prints every digit, separated by a space.	Програма зчитує двоцифрове число і виводить через пропуск кожну цифру окремо.	EA	EA	One integer from 10 to 99 including.	Натуральне число на проміжку від 10 до 99 включно.	Two digits separated by a space.	Спочатку першу цифру числа і через пропуск другу.	<strong>Important!</strong> In case you have any troubles solving this problem, please check out examples on Help page.	<strong>Увага!</strong> У випадку виникнення проблем зі здачею цієї задачі зверніться на сторінку допомоги.	Simple problem	Проста задача
9	10_2	Error protection queue	Реализуйте структуру данных "очередь". Напишите программу, содержащую описание очереди и моделирующую работу очереди, реализовав все указанные здесь методы. Программа считывает последовательность команд и в зависимости от команды выполняет ту или иную операцию. После выполнения каждой команды программа должна вывести одну строчку. Возможные команды для программы: </br>\r\n\r\n<strong>   push n</strong></br>\r\n\r\nДобавить в очередь число n (значение n задается после команды). Программа должна вывести ok.\r\n\r\npop\r\n\r\nУдалить из очереди первый элемент. Программа должна вывести его значение.\r\n\r\nfront\r\n\r\nПрограмма должна вывести значение первого элемента, не удаляя его из очереди.\r\n\r\nsize\r\n\r\nПрограмма должна вывести количество элементов в очереди.\r\n\r\nclear\r\n\r\nПрограмма должна очистить очередь и вывести ok.\r\n\r\nexit\r\n\r\nПрограмма должна вывести bye и завершить работу.\r\n\r\nПеред исполнением операций front и pop программа должна проверять, содержится ли в очереди хотя бы один элемент. Если во входных данных встречается операция frontили pop, и при этом очередь пуста, то программа должна вместо числового значения вывести строку error.		EA	CB	Описаны в условии. См. также пример входных данных.	Описаны в условии. См. также пример выходных данных.	\N	t	64	1	10	CB	CB	Реализуйте структуру данных "очередь". Напишите программу, содержащую описание очереди и моделирующую работу очереди, реализовав все указанные здесь методы. Программа считывает последовательность команд и в зависимости от команды выполняет ту или иную операцию. После выполнения каждой команды программа должна вывести одну строчку. Возможные команды для программы: </br>\r\n\r\n<strong>   push n</strong></br>\r\n\r\nДобавить в очередь число n (значение n задается после команды). Программа должна вывести ok.\r\n\r\npop\r\n\r\nУдалить из очереди первый элемент. Программа должна вывести его значение.\r\n\r\nfront\r\n\r\nПрограмма должна вывести значение первого элемента, не удаляя его из очереди.\r\n\r\nsize\r\n\r\nПрограмма должна вывести количество элементов в очереди.\r\n\r\nclear\r\n\r\nПрограмма должна очистить очередь и вывести ok.\r\n\r\nexit\r\n\r\nПрограмма должна вывести bye и завершить работу.\r\n\r\nПеред исполнением операций front и pop программа должна проверять, содержится ли в очереди хотя бы один элемент. Если во входных данных встречается операция frontили pop, и при этом очередь пуста, то программа должна вместо числового значения вывести строку error.	Реализуйте структуру данных "очередь". Напишите программу, содержащую описание очереди и моделирующую работу очереди, реализовав все указанные здесь методы. Программа считывает последовательность команд и в зависимости от команды выполняет ту или иную операцию. После выполнения каждой команды программа должна вывести одну строчку. Возможные команды для программы: </br>\r\n\r\n<strong>   push n</strong></br>\r\n\r\nДобавить в очередь число n (значение n задается после команды). Программа должна вывести ok.\r\n\r\npop\r\n\r\nУдалить из очереди первый элемент. Программа должна вывести его значение.\r\n\r\nfront\r\n\r\nПрограмма должна вывести значение первого элемента, не удаляя его из очереди.\r\n\r\nsize\r\n\r\nПрограмма должна вывести количество элементов в очереди.\r\n\r\nclear\r\n\r\nПрограмма должна очистить очередь и вывести ok.\r\n\r\nexit\r\n\r\nПрограмма должна вывести bye и завершить работу.\r\n\r\nПеред исполнением операций front и pop программа должна проверять, содержится ли в очереди хотя бы один элемент. Если во входных данных встречается операция frontили pop, и при этом очередь пуста, то программа должна вместо числового значения вывести строку error.	EA	EA	Описаны в условии. См. также пример входных данных.	Описаны в условии. См. также пример входных данных.	Описаны в условии. См. также пример выходных данных.	Описаны в условии. См. также пример выходных данных.	\N	\N	Error protection queue	Error protection queue
3	3	The area of a polygon	Polygon is defined on the plane with integer coordinates of its <strong>n</strong> vertices in Cartesian coordinate system. Find the area of a polygon. The polygon is simple (it is a closed polygonal chain of line segments in the plane which do not have points in common other than the common vertices of pairs of consecutive segments).		EA	BG	The first line is the number <strong>n (3 ≤ n ≤ 50 000)</strong>. The next <strong>n</strong> lines contains the pairs of numbers - the points coordinates. If you connect the points in this manner, as well as the first and the last point, we obtain the polygon. It is known that the coordinates of the vertices are integers and by the absolute value do not exceed <strong>20000</strong>.	Print a single number - the area of a polygon. It should be rounded to the nearest number with one digit after the decimal point.	\N	t	64	1	\N	BG	BG	Polygon is defined on the plane with integer coordinates of its <strong>n</strong> vertices in Cartesian coordinate system. Find the area of a polygon. The polygon is simple (it is a closed polygonal chain of line segments in the plane which do not have points in common other than the common vertices of pairs of consecutive segments).	Многокутник на площині задано цілочисельними координатами своїх <strong>n</strong> вершин у декартовій системі координат. Потрібно знайти площу многокутника. Сторони многокутника не дотикаються (за виключенням сусідніх - у вершинах) і не перетинаються.	EA	EA	The first line is the number <strong>n (3 ≤ n ≤ 50 000)</strong>. The next <strong>n</strong> lines contains the pairs of numbers - the points coordinates. If you connect the points in this manner, as well as the first and the last point, we obtain the polygon. It is known that the coordinates of the vertices are integers and by the absolute value do not exceed <strong>20000</strong>.	У першому рядку знаходиться число <strong>n (3 ≤ n ≤ 50 000)</strong>. У наступних <strong>n</strong> рядках знаходяться пари чисел - координати точок. Якщо з'єднати точки у заданому порядку, а також першу і останню точки, отримаємо заданий многокутник. Відомо, що координати вершин цілі та за модулем не перевищують <strong>20000</strong>.	Print a single number - the area of a polygon. It should be rounded to the nearest number with one digit after the decimal point.	Вивести одне число - площу многокутника. Його потрібно округлити до найближчого числа з однією цифрою після десяткової крапки.	\N	\N	The area of a polygon	Площа многокутника
10	10_3	The area of a polygon	Polygon is defined on the plane with integer coordinates of its n vertices in Cartesian coordinate system. Find the area of a polygon. The polygon is simple (it is a closed polygonal chain of line segments in the plane which do not have points in common other than the common vertices of pairs of consecutive segments).		EA	CB	The first line is the number n (3 ≤ n ≤ 50 000). The next n lines contains the pairs of numbers - the points coordinates. If you connect the points in this manner, as well as the first and the last point, we obtain the polygon. It is known that the coordinates of the vertices are integers and by the absolute value do not exceed 20 000.	Print a single number - the area of a polygon. It should be rounded to the nearest number with one digit after the decimal point.	\N	t	64	1	10	CB	CB	Polygon is defined on the plane with integer coordinates of its n vertices in Cartesian coordinate system. Find the area of a polygon. The polygon is simple (it is a closed polygonal chain of line segments in the plane which do not have points in common other than the common vertices of pairs of consecutive segments).	Polygon is defined on the plane with integer coordinates of its n vertices in Cartesian coordinate system. Find the area of a polygon. The polygon is simple (it is a closed polygonal chain of line segments in the plane which do not have points in common other than the common vertices of pairs of consecutive segments).	EA	EA	The first line is the number n (3 ≤ n ≤ 50 000). The next n lines contains the pairs of numbers - the points coordinates. If you connect the points in this manner, as well as the first and the last point, we obtain the polygon. It is known that the coordinates of the vertices are integers and by the absolute value do not exceed 20 000.	The first line is the number n (3 ≤ n ≤ 50 000). The next n lines contains the pairs of numbers - the points coordinates. If you connect the points in this manner, as well as the first and the last point, we obtain the polygon. It is known that the coordinates of the vertices are integers and by the absolute value do not exceed 20 000.	Print a single number - the area of a polygon. It should be rounded to the nearest number with one digit after the decimal point.	Print a single number - the area of a polygon. It should be rounded to the nearest number with one digit after the decimal point.	\N	\N	The area of a polygon	The area of a polygon
15	10_1	Simple problem	Program reads two-digit number and prints every digit, separated by a space.		EA	CB	One integer from 10 to 99 including.	Two digits separated by a space.	<strong>Important!</strong> In case you have any troubles solving this problem, please check out examples on Help page.	t	128	1	10	CB	\N	Program reads two-digit number and prints every digit, separated by a space.	\N	EA	\N	One integer from 10 to 99 including.	\N	Two digits separated by a space.	\N	<strong>Important!</strong> In case you have any troubles solving this problem, please check out examples on Help page.	\N	Simple problem	\N
18	13_3	Площа многокутника	Многокутник на площині задано цілочисельними координатами своїх <strong>n</strong> вершин у декартовій системі координат. Потрібно знайти площу многокутника. Сторони многокутника не дотикаються (за виключенням сусідніх - у вершинах) і не перетинаються.		EA	CB	У першому рядку знаходиться число <strong>n (3 ≤ n ≤ 50 000)</strong>. У наступних <strong>n</strong> рядках знаходяться пари чисел - координати точок. Якщо з'єднати точки у заданому порядку, а також першу і останню точки, отримаємо заданий многокутник. Відомо, що координати вершин цілі та за модулем не перевищують <strong>20000</strong>.	Вивести одне число - площу многокутника. Його потрібно округлити до найближчого числа з однією цифрою після десяткової крапки.	\N	t	64	1	13	\N	CB	\N	Многокутник на площині задано цілочисельними координатами своїх <strong>n</strong> вершин у декартовій системі координат. Потрібно знайти площу многокутника. Сторони многокутника не дотикаються (за виключенням сусідніх - у вершинах) і не перетинаються.	\N	EA	\N	У першому рядку знаходиться число <strong>n (3 ≤ n ≤ 50 000)</strong>. У наступних <strong>n</strong> рядках знаходяться пари чисел - координати точок. Якщо з'єднати точки у заданому порядку, а також першу і останню точки, отримаємо заданий многокутник. Відомо, що координати вершин цілі та за модулем не перевищують <strong>20000</strong>.	\N	Вивести одне число - площу многокутника. Його потрібно округлити до найближчого числа з однією цифрою після десяткової крапки.	\N	\N	\N	Площа многокутника
19	13_2	Черга з захистом від помилок	Реалізуйте структуру даних "черга". Напишіть програму, яка містить опис черги та моделює роботу черги, реалізувавши усі вказані тут методи. Програма зчиує послвдовнвсть команд і у залежності від команди виконує ту чи іншу операцію. Після виконання кожної команди програма повинна вивести один рядок. Можливі команди для програми:</br></br>\r\n\r\n<strong>   push n</strong></br></br>\r\n\r\nДодати у чергу число <strong>n</strong> (значение <strong>n</strong> задается после команды). Программа должна вывести <strong>ok</strong>.</br></br>\r\n\r\n<strong>pop</strong></br></br>\r\n\r\nВидалити з черги перший елемент. Програма повинна вивести його значення.</br></br>\r\n\r\n<strong>front</strong></br></br>\r\n\r\nПрограма повинна вивести значення першого елемента, не видаляючи його з черги.</br></br>\r\n\r\n<strong>size</strong></br></br>\r\n\r\nПрограма повинна вивести кількість елементів у черзі.</br></br>\r\n\r\n<strong>clear</strong></br></br>\r\n\r\nграма повинна очистити чергу і вивести <strong>ok</strong>.</br></br>\r\n\r\n<strong>exit</strong></br></br>\r\n\r\nПрограма повинна вивести <strong>bye</strong> і завершити роботу.</br></br>\r\nПеред виконанням операцій <strong>front</strong> та <strong>pop</strong> рограма повинна перевіряти, чи міститься у черзі хоча б один елемент. Якщо у вхідних даних зустрічається операція <strong>front</strong> \r\n чи <strong>pop</strong>, і при цьому черга порожня, то програма повинна замість числового значення вивести рядок <strong>error</strong>.		EA	CB	Описані в умові. Див. також приклад вхідних даних.	Описані в умові. Див. також приклад вихідних даних.	\N	t	64	1	13	\N	CB	\N	Реалізуйте структуру даних "черга". Напишіть програму, яка містить опис черги та моделює роботу черги, реалізувавши усі вказані тут методи. Програма зчиує послвдовнвсть команд і у залежності від команди виконує ту чи іншу операцію. Після виконання кожної команди програма повинна вивести один рядок. Можливі команди для програми:</br></br>\r\n\r\n<strong>   push n</strong></br></br>\r\n\r\nДодати у чергу число <strong>n</strong> (значение <strong>n</strong> задается после команды). Программа должна вывести <strong>ok</strong>.</br></br>\r\n\r\n<strong>pop</strong></br></br>\r\n\r\nВидалити з черги перший елемент. Програма повинна вивести його значення.</br></br>\r\n\r\n<strong>front</strong></br></br>\r\n\r\nПрограма повинна вивести значення першого елемента, не видаляючи його з черги.</br></br>\r\n\r\n<strong>size</strong></br></br>\r\n\r\nПрограма повинна вивести кількість елементів у черзі.</br></br>\r\n\r\n<strong>clear</strong></br></br>\r\n\r\nграма повинна очистити чергу і вивести <strong>ok</strong>.</br></br>\r\n\r\n<strong>exit</strong></br></br>\r\n\r\nПрограма повинна вивести <strong>bye</strong> і завершити роботу.</br></br>\r\nПеред виконанням операцій <strong>front</strong> та <strong>pop</strong> рограма повинна перевіряти, чи міститься у черзі хоча б один елемент. Якщо у вхідних даних зустрічається операція <strong>front</strong> \r\n чи <strong>pop</strong>, і при цьому черга порожня, то програма повинна замість числового значення вивести рядок <strong>error</strong>.	\N	EA	\N	Описані в умові. Див. також приклад вхідних даних.	\N	Описані в умові. Див. також приклад вихідних даних.	\N	\N	\N	Черга з захистом від помилок
20	13_1	Проста задача	Програма зчитує двоцифрове число і виводить через пропуск кожну цифру окремо.		EA	CB	Натуральне число на проміжку від 10 до 99 включно.	Спочатку першу цифру числа і через пропуск другу.	<strong>Увага!</strong> У випадку виникнення проблем зі здачею цієї задачі зверніться на сторінку допомоги.	t	128	1	13	\N	CB	\N	Програма зчитує двоцифрове число і виводить через пропуск кожну цифру окремо.	\N	EA	\N	Натуральне число на проміжку від 10 до 99 включно.	\N	Спочатку першу цифру числа і через пропуск другу.	\N	<strong>Увага!</strong> У випадку виникнення проблем зі здачею цієї задачі зверніться на сторінку допомоги.	\N	Проста задача
24	17_1	Simple problem	Program reads two-digit number and prints every digit, separated by a space.		EA	CB	One integer from 10 to 99 including.	Two digits separated by a space.	<strong>Important!</strong> In case you have any troubles solving this problem, please check out examples on Help page.	t	128	1	17	CB	CB	Program reads two-digit number and prints every digit, separated by a space.	Програма зчитує двоцифрове число і виводить через пропуск кожну цифру окремо.	EA	EA	One integer from 10 to 99 including.	Натуральне число на проміжку від 10 до 99 включно.	Two digits separated by a space.	Спочатку першу цифру числа і через пропуск другу.	<strong>Important!</strong> In case you have any troubles solving this problem, please check out examples on Help page.	<strong>Увага!</strong> У випадку виникнення проблем зі здачею цієї задачі зверніться на сторінку допомоги.	Simple problem	Проста задача
25	17_2	Error protection queue	Реализуйте структуру данных "очередь". Напишите программу, содержащую описание очереди и моделирующую работу очереди, реализовав все указанные здесь методы. Программа считывает последовательность команд и в зависимости от команды выполняет ту или иную операцию. После выполнения каждой команды программа должна вывести одну строчку. Возможные команды для программы: </br></br>\r\n\r\n<strong>   push n</strong></br></br>\r\n\r\nДобавить в очередь число <strong>n</strong> (значение <strong>n</strong> задается после команды). Программа должна вывести <strong>ok</strong>.</br></br>\r\n\r\n<strong>pop</strong></br></br>\r\n\r\nУдалить из очереди первый элемент. Программа должна вывести его значение.</br></br>\r\n\r\n<strong>front</strong></br></br>\r\n\r\nПрограмма должна вывести значение первого элемента, не удаляя его из очереди.</br></br>\r\n\r\n<strong>size</strong></br></br>\r\n\r\nПрограмма должна вывести количество элементов в очереди.</br></br>\r\n\r\n<strong>clear</strong></br></br>\r\n\r\nПрограмма должна очистить очередь и вывести <strong>ok</strong>.</br></br>\r\n\r\n<strong>exit</strong></br></br>\r\n\r\nПрограмма должна вывести <strong>bye</strong> и завершить работу.</br></br>\r\n\r\nПеред исполнением операций <strong>front</strong> и  <strong>pop</strong> программа должна проверять, содержится ли в очереди хотя бы один элемент. Если во входных данных встречается операция <strong>front</strong> или <strong>pop</strong>числового значения вывести строку <strong>error</strong>.		EA	CB	Описаны в условии. См. также пример входных данных.	Описаны в условии. См. также пример выходных данных.	\N	t	64	1	17	CB	CB	Реализуйте структуру данных "очередь". Напишите программу, содержащую описание очереди и моделирующую работу очереди, реализовав все указанные здесь методы. Программа считывает последовательность команд и в зависимости от команды выполняет ту или иную операцию. После выполнения каждой команды программа должна вывести одну строчку. Возможные команды для программы: </br></br>\r\n\r\n<strong>   push n</strong></br></br>\r\n\r\nДобавить в очередь число <strong>n</strong> (значение <strong>n</strong> задается после команды). Программа должна вывести <strong>ok</strong>.</br></br>\r\n\r\n<strong>pop</strong></br></br>\r\n\r\nУдалить из очереди первый элемент. Программа должна вывести его значение.</br></br>\r\n\r\n<strong>front</strong></br></br>\r\n\r\nПрограмма должна вывести значение первого элемента, не удаляя его из очереди.</br></br>\r\n\r\n<strong>size</strong></br></br>\r\n\r\nПрограмма должна вывести количество элементов в очереди.</br></br>\r\n\r\n<strong>clear</strong></br></br>\r\n\r\nПрограмма должна очистить очередь и вывести <strong>ok</strong>.</br></br>\r\n\r\n<strong>exit</strong></br></br>\r\n\r\nПрограмма должна вывести <strong>bye</strong> и завершить работу.</br></br>\r\n\r\nПеред исполнением операций <strong>front</strong> и  <strong>pop</strong> программа должна проверять, содержится ли в очереди хотя бы один элемент. Если во входных данных встречается операция <strong>front</strong> или <strong>pop</strong>числового значения вывести строку <strong>error</strong>.	Реалізуйте структуру даних "черга". Напишіть програму, яка містить опис черги та моделює роботу черги, реалізувавши усі вказані тут методи. Програма зчиує послвдовнвсть команд і у залежності від команди виконує ту чи іншу операцію. Після виконання кожної команди програма повинна вивести один рядок. Можливі команди для програми:</br></br>\r\n\r\n<strong>   push n</strong></br></br>\r\n\r\nДодати у чергу число <strong>n</strong> (значение <strong>n</strong> задается после команды). Программа должна вывести <strong>ok</strong>.</br></br>\r\n\r\n<strong>pop</strong></br></br>\r\n\r\nВидалити з черги перший елемент. Програма повинна вивести його значення.</br></br>\r\n\r\n<strong>front</strong></br></br>\r\n\r\nПрограма повинна вивести значення першого елемента, не видаляючи його з черги.</br></br>\r\n\r\n<strong>size</strong></br></br>\r\n\r\nПрограма повинна вивести кількість елементів у черзі.</br></br>\r\n\r\n<strong>clear</strong></br></br>\r\n\r\nграма повинна очистити чергу і вивести <strong>ok</strong>.</br></br>\r\n\r\n<strong>exit</strong></br></br>\r\n\r\nПрограма повинна вивести <strong>bye</strong> і завершити роботу.</br></br>\r\nПеред виконанням операцій <strong>front</strong> та <strong>pop</strong> рограма повинна перевіряти, чи міститься у черзі хоча б один елемент. Якщо у вхідних даних зустрічається операція <strong>front</strong> \r\n чи <strong>pop</strong>, і при цьому черга порожня, то програма повинна замість числового значення вивести рядок <strong>error</strong>.	EA	EA	Описаны в условии. См. также пример входных данных.	Описані в умові. Див. також приклад вхідних даних.	Описаны в условии. См. также пример выходных данных.	Описані в умові. Див. також приклад вихідних даних.	\N	\N	Error protection queue	Черга з захистом від помилок
26	17_3	The area of a polygon	Polygon is defined on the plane with integer coordinates of its <strong>n</strong> vertices in Cartesian coordinate system. Find the area of a polygon. The polygon is simple (it is a closed polygonal chain of line segments in the plane which do not have points in common other than the common vertices of pairs of consecutive segments).		EA	CB	The first line is the number <strong>n (3 ≤ n ≤ 50 000)</strong>. The next <strong>n</strong> lines contains the pairs of numbers - the points coordinates. If you connect the points in this manner, as well as the first and the last point, we obtain the polygon. It is known that the coordinates of the vertices are integers and by the absolute value do not exceed <strong>20000</strong>.	Print a single number - the area of a polygon. It should be rounded to the nearest number with one digit after the decimal point.	\N	t	64	1	17	CB	CB	Polygon is defined on the plane with integer coordinates of its <strong>n</strong> vertices in Cartesian coordinate system. Find the area of a polygon. The polygon is simple (it is a closed polygonal chain of line segments in the plane which do not have points in common other than the common vertices of pairs of consecutive segments).	Многокутник на площині задано цілочисельними координатами своїх <strong>n</strong> вершин у декартовій системі координат. Потрібно знайти площу многокутника. Сторони многокутника не дотикаються (за виключенням сусідніх - у вершинах) і не перетинаються.	EA	EA	The first line is the number <strong>n (3 ≤ n ≤ 50 000)</strong>. The next <strong>n</strong> lines contains the pairs of numbers - the points coordinates. If you connect the points in this manner, as well as the first and the last point, we obtain the polygon. It is known that the coordinates of the vertices are integers and by the absolute value do not exceed <strong>20000</strong>.	У першому рядку знаходиться число <strong>n (3 ≤ n ≤ 50 000)</strong>. У наступних <strong>n</strong> рядках знаходяться пари чисел - координати точок. Якщо з'єднати точки у заданому порядку, а також першу і останню точки, отримаємо заданий многокутник. Відомо, що координати вершин цілі та за модулем не перевищують <strong>20000</strong>.	Print a single number - the area of a polygon. It should be rounded to the nearest number with one digit after the decimal point.	Вивести одне число - площу многокутника. Його потрібно округлити до найближчого числа з однією цифрою після десяткової крапки.	\N	\N	The area of a polygon	Площа многокутника
27	18_3	The area of a polygon	Polygon is defined on the plane with integer coordinates of its <strong>n</strong> vertices in Cartesian coordinate system. Find the area of a polygon. The polygon is simple (it is a closed polygonal chain of line segments in the plane which do not have points in common other than the common vertices of pairs of consecutive segments).		EA	CB	The first line is the number <strong>n (3 ≤ n ≤ 50 000)</strong>. The next <strong>n</strong> lines contains the pairs of numbers - the points coordinates. If you connect the points in this manner, as well as the first and the last point, we obtain the polygon. It is known that the coordinates of the vertices are integers and by the absolute value do not exceed <strong>20000</strong>.	Print a single number - the area of a polygon. It should be rounded to the nearest number with one digit after the decimal point.	\N	t	64	1	18	CB	CB	Polygon is defined on the plane with integer coordinates of its <strong>n</strong> vertices in Cartesian coordinate system. Find the area of a polygon. The polygon is simple (it is a closed polygonal chain of line segments in the plane which do not have points in common other than the common vertices of pairs of consecutive segments).	Многокутник на площині задано цілочисельними координатами своїх <strong>n</strong> вершин у декартовій системі координат. Потрібно знайти площу многокутника. Сторони многокутника не дотикаються (за виключенням сусідніх - у вершинах) і не перетинаються.	EA	EA	The first line is the number <strong>n (3 ≤ n ≤ 50 000)</strong>. The next <strong>n</strong> lines contains the pairs of numbers - the points coordinates. If you connect the points in this manner, as well as the first and the last point, we obtain the polygon. It is known that the coordinates of the vertices are integers and by the absolute value do not exceed <strong>20000</strong>.	У першому рядку знаходиться число <strong>n (3 ≤ n ≤ 50 000)</strong>. У наступних <strong>n</strong> рядках знаходяться пари чисел - координати точок. Якщо з'єднати точки у заданому порядку, а також першу і останню точки, отримаємо заданий многокутник. Відомо, що координати вершин цілі та за модулем не перевищують <strong>20000</strong>.	Print a single number - the area of a polygon. It should be rounded to the nearest number with one digit after the decimal point.	Вивести одне число - площу многокутника. Його потрібно округлити до найближчого числа з однією цифрою після десяткової крапки.	\N	\N	The area of a polygon	Площа многокутника
2	2	Error protection queue	Реализуйте структуру данных "очередь". Напишите программу, содержащую описание очереди и моделирующую работу очереди, реализовав все указанные здесь методы. Программа считывает последовательность команд и в зависимости от команды выполняет ту или иную операцию. После выполнения каждой команды программа должна вывести одну строчку. Возможные команды для программы: </br></br>\r\n\r\n<strong>   push n</strong></br></br>\r\n\r\nДобавить в очередь число <strong>n</strong> (значение <strong>n</strong> задается после команды). Программа должна вывести <strong>ok</strong>.</br></br>\r\n\r\n<strong>pop</strong></br></br>\r\n\r\nУдалить из очереди первый элемент. Программа должна вывести его значение.</br></br>\r\n\r\n<strong>front</strong></br></br>\r\n\r\nПрограмма должна вывести значение первого элемента, не удаляя его из очереди.</br></br>\r\n\r\n<strong>size</strong></br></br>\r\n\r\nПрограмма должна вывести количество элементов в очереди.</br></br>\r\n\r\n<strong>clear</strong></br></br>\r\n\r\nПрограмма должна очистить очередь и вывести <strong>ok</strong>.</br></br>\r\n\r\n<strong>exit</strong></br></br>\r\n\r\nПрограмма должна вывести <strong>bye</strong> и завершить работу.</br></br>\r\n\r\nПеред исполнением операций <strong>front</strong> и  <strong>pop</strong> программа должна проверять, содержится ли в очереди хотя бы один элемент. Если во входных данных встречается операция <strong>front</strong> или <strong>pop</strong>числового значения вывести строку <strong>error</strong>.		EA	BG	Описаны в условии. См. также пример входных данных.	Описаны в условии. См. также пример выходных данных.	\N	t	64	1	\N	BG	BG	Реализуйте структуру данных "очередь". Напишите программу, содержащую описание очереди и моделирующую работу очереди, реализовав все указанные здесь методы. Программа считывает последовательность команд и в зависимости от команды выполняет ту или иную операцию. После выполнения каждой команды программа должна вывести одну строчку. Возможные команды для программы: </br></br>\r\n\r\n<strong>   push n</strong></br></br>\r\n\r\nДобавить в очередь число <strong>n</strong> (значение <strong>n</strong> задается после команды). Программа должна вывести <strong>ok</strong>.</br></br>\r\n\r\n<strong>pop</strong></br></br>\r\n\r\nУдалить из очереди первый элемент. Программа должна вывести его значение.</br></br>\r\n\r\n<strong>front</strong></br></br>\r\n\r\nПрограмма должна вывести значение первого элемента, не удаляя его из очереди.</br></br>\r\n\r\n<strong>size</strong></br></br>\r\n\r\nПрограмма должна вывести количество элементов в очереди.</br></br>\r\n\r\n<strong>clear</strong></br></br>\r\n\r\nПрограмма должна очистить очередь и вывести <strong>ok</strong>.</br></br>\r\n\r\n<strong>exit</strong></br></br>\r\n\r\nПрограмма должна вывести <strong>bye</strong> и завершить работу.</br></br>\r\n\r\nПеред исполнением операций <strong>front</strong> и  <strong>pop</strong> программа должна проверять, содержится ли в очереди хотя бы один элемент. Если во входных данных встречается операция <strong>front</strong> или <strong>pop</strong>числового значения вывести строку <strong>error</strong>.	Реалізуйте структуру даних "черга". Напишіть програму, яка містить опис черги та моделює роботу черги, реалізувавши усі вказані тут методи. Програма зчиує послвдовнвсть команд і у залежності від команди виконує ту чи іншу операцію. Після виконання кожної команди програма повинна вивести один рядок. Можливі команди для програми:</br></br>\r\n\r\n<strong>   push n</strong></br></br>\r\n\r\nДодати у чергу число <strong>n</strong> (значение <strong>n</strong> задается после команды). Программа должна вывести <strong>ok</strong>.</br></br>\r\n\r\n<strong>pop</strong></br></br>\r\n\r\nВидалити з черги перший елемент. Програма повинна вивести його значення.</br></br>\r\n\r\n<strong>front</strong></br></br>\r\n\r\nПрограма повинна вивести значення першого елемента, не видаляючи його з черги.</br></br>\r\n\r\n<strong>size</strong></br></br>\r\n\r\nПрограма повинна вивести кількість елементів у черзі.</br></br>\r\n\r\n<strong>clear</strong></br></br>\r\n\r\nграма повинна очистити чергу і вивести <strong>ok</strong>.</br></br>\r\n\r\n<strong>exit</strong></br></br>\r\n\r\nПрограма повинна вивести <strong>bye</strong> і завершити роботу.</br></br>\r\nПеред виконанням операцій <strong>front</strong> та <strong>pop</strong> рограма повинна перевіряти, чи міститься у черзі хоча б один елемент. Якщо у вхідних даних зустрічається операція <strong>front</strong> \r\n чи <strong>pop</strong>, і при цьому черга порожня, то програма повинна замість числового значення вивести рядок <strong>error</strong>.	EA	EA	Описаны в условии. См. также пример входных данных.	Описані в умові. Див. також приклад вхідних даних.	Описаны в условии. См. также пример выходных данных.	Описані в умові. Див. також приклад вихідних даних.	\N	\N	Error protection queue	Черга з захистом від помилок
30	4	Three states	<p>Three states are located on a rectangular map of size n * m. From any cell of any state, you can go to any cell of the same state, moving only along its cells horizontally or vertically. The cells of each state are marked with one of the numbers (1, 2 or 3).</p>\r\n\r\n<p>There are passable (".") and impassable ("#") cells on the map.</p>\r\n\r\n<p>Build roads on the smallest number of passable cells so that you can go from any cell of one state to any cell of another state. You can freely move around the cells of any state. You can only move along the map horizontally or vertically.</p>		MD	BS	First line contains the size of the map n and m <strong>(1 ≤ n, m ≤ 1000)</strong>. Each of the next n lines contains m symbols:<ul><li>1, 2, 3 - cells that belong to the states;</li><li>"." - passable cell, here you can build a road;</li><li>"#" - impassable cell, here you cannot build a road;</li></ul>	Print the smallest number of cells in which roads should be built so that all cells of all states will be connected. If it is impossible to do this, print <strong>-1</strong>.	\N	t	128	1	\N	BS	BS	<p>Three states are located on a rectangular map of size n * m. From any cell of any state, you can go to any cell of the same state, moving only along its cells horizontally or vertically. The cells of each state are marked with one of the numbers (1, 2 or 3).</p>\r\n\r\n<p>There are passable (".") and impassable ("#") cells on the map.</p>\r\n\r\n<p>Build roads on the smallest number of passable cells so that you can go from any cell of one state to any cell of another state. You can freely move around the cells of any state. You can only move along the map horizontally or vertically.</p>	<p>Три держави розміщені на прямокутній карті розміром n * m. Із будь-якої клітинки будь-якої держави можна добратися до будь-якої клітинки цієї держави, переміщаючись тільки по його клітинкам по горизонталі или вертикалі. Клітинки кожної держави позначені однією з цифр (1, 2 или 3).</p>\r\n\r\n<p>На карті присутні прохідніе (".") і непрохідні ("#") клітки.</p>\r\n\r\n<p>Побудуйте дороги на найменій кількості прохідних клітинок так, щоб можна було пройти з будь-якої клітинки однієї держави до будь-якої клітинки другогї держави. По клітинкам будь-якої держави можна безперешкодно переміщатися. Переміщатися по карті можна тільки по горизонталі та вертикалі.</p>	MD	MD	First line contains the size of the map n and m <strong>(1 ≤ n, m ≤ 1000)</strong>. Each of the next n lines contains m symbols:<ul><li>1, 2, 3 - cells that belong to the states;</li><li>"." - passable cell, here you can build a road;</li><li>"#" - impassable cell, here you cannot build a road;</li></ul>	Перший рядок містить розмір карти <strong>n</strong>і <strong>m</strong> <strong>(1 ≤ n, m ≤ 1000)</strong>. Наступні <strong>n</strong> рядків містить по <strong>m</strong> символів: <ul><li><strong>1,2,3</strong> - клітинки що належать державам;</li><li>"." - прохідна клітка, на ній можна будувати дорогу;</li><li>"#" - непрохідна клітка, на ній неможна будувати дорогу;</li></ul>	Print the smallest number of cells in which roads should be built so that all cells of all states will be connected. If it is impossible to do this, print <strong>-1</strong>.	Виведіть найменшу кількість клітинок, в яких варто побудувати дороги так, щоб були з'єднані все клітинки всіх государств. Якщо цього зробити не можна, то виведіть <strong>-1</strong>.	\N	\N	Three states	Три держави
\.


--
-- Data for Name: judge_problemcomment; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.judge_problemcomment (id, content, publication_date, author_id, problem_id) FROM stdin;
\.


--
-- Data for Name: judge_problemsamples; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.judge_problemsamples (id, sample_input, sample_output, problem_id, sample_input_en, sample_input_uk, sample_output_en, sample_output_uk) FROM stdin;
24	4</br>\r\n5 0</br>\r\n0 5</br>\r\n-5 0</br>\r\n0 -5	50.0	26	4</br>\r\n5 0</br>\r\n0 5</br>\r\n-5 0</br>\r\n0 -5	\N	50.0	\N
25	4</br>\r\n5 0</br>\r\n0 5</br>\r\n-5 0</br>\r\n0 -5	50.0	27	4</br>\r\n5 0</br>\r\n0 5</br>\r\n-5 0</br>\r\n0 -5	\N	50.0	\N
28	6 6\r\n11..#.\r\n1111..\r\n11...#\r\n....22\r\n33....\r\n3333##	3	30	6 6\r\n11..#.\r\n1111..\r\n11...#\r\n....22\r\n33....\r\n3333##		3	
2	10	1 0	1	10	10	1 0	1 0
4	4</br>\r\n5 0</br>\r\n0 5</br>\r\n-5 0</br>\r\n0 -5	50.0	3	4</br>\r\n5 0</br>\r\n0 5</br>\r\n-5 0</br>\r\n0 -5	4</br>\r\n5 0</br>\r\n0 5</br>\r\n-5 0</br>\r\n0 -5	50.0	50.0
3	push 2</br>\r\nback</br>\r\npop</br>\r\nsize</br>\r\npop</br>\r\npush 1</br>\r\nsize</br>\r\nexit	ok</br>\r\n2</br>\r\n2</br>\r\n0</br>\r\nerror</br>\r\nok</br>\r\n1</br>\r\nbye</br>	2	push 2</br>\r\nback</br>\r\npop</br>\r\nsize</br>\r\npop</br>\r\npush 1</br>\r\nsize</br>\r\nexit	push 2</br>\r\nback</br>\r\npop</br>\r\nsize</br>\r\npop</br>\r\npush 1</br>\r\nsize</br>\r\nexit	ok</br>\r\n2</br>\r\n2</br>\r\n0</br>\r\nerror</br>\r\nok</br>\r\n1</br>\r\nbye</br>	ok</br>\r\n2</br>\r\n2</br>\r\n0</br>\r\nerror</br>\r\nok</br>\r\n1</br>\r\nbye</br>
5	10	1 0	4	10	10	1 0	1 0
8	push 2</br>\r\nback</br>\r\npop</br>\r\nsize</br>\r\npop</br>\r\npush 1</br>\r\nsize</br>\r\nexit	ok</br>\r\n2</br>\r\n2</br>\r\n0</br>\r\nerror</br>\r\nok</br>\r\n1</br>\r\nbye</br>	9	push 2</br>\r\nback</br>\r\npop</br>\r\nsize</br>\r\npop</br>\r\npush 1</br>\r\nsize</br>\r\nexit	push 2</br>\r\nback</br>\r\npop</br>\r\nsize</br>\r\npop</br>\r\npush 1</br>\r\nsize</br>\r\nexit	ok</br>\r\n2</br>\r\n2</br>\r\n0</br>\r\nerror</br>\r\nok</br>\r\n1</br>\r\nbye</br>	ok</br>\r\n2</br>\r\n2</br>\r\n0</br>\r\nerror</br>\r\nok</br>\r\n1</br>\r\nbye</br>
9	4</br>\r\n5 0</br>\r\n0 5</br>\r\n-5 0</br>\r\n0 -5	50.0	10	4</br>\r\n5 0</br>\r\n0 5</br>\r\n-5 0</br>\r\n0 -5	4</br>\r\n5 0</br>\r\n0 5</br>\r\n-5 0</br>\r\n0 -5	50.0	50.0
13	10	1 0	15	10	\N	1 0	\N
16	4</br>\r\n5 0</br>\r\n0 5</br>\r\n-5 0</br>\r\n0 -5	50.0	18	\N	4</br>\r\n5 0</br>\r\n0 5</br>\r\n-5 0</br>\r\n0 -5	\N	50.0
17	push 2</br>\r\nback</br>\r\npop</br>\r\nsize</br>\r\npop</br>\r\npush 1</br>\r\nsize</br>\r\nexit	ok</br>\r\n2</br>\r\n2</br>\r\n0</br>\r\nerror</br>\r\nok</br>\r\n1</br>\r\nbye</br>	19	\N	push 2</br>\r\nback</br>\r\npop</br>\r\nsize</br>\r\npop</br>\r\npush 1</br>\r\nsize</br>\r\nexit	\N	ok</br>\r\n2</br>\r\n2</br>\r\n0</br>\r\nerror</br>\r\nok</br>\r\n1</br>\r\nbye</br>
18	10	1 0	20	\N	10	\N	1 0
19	10	1 0	21	\N	10	\N	1 0
22	10	1 0	24	10	\N	1 0	\N
23	push 2</br>\r\nback</br>\r\npop</br>\r\nsize</br>\r\npop</br>\r\npush 1</br>\r\nsize</br>\r\nexit	ok</br>\r\n2</br>\r\n2</br>\r\n0</br>\r\nerror</br>\r\nok</br>\r\n1</br>\r\nbye</br>	25	push 2</br>\r\nback</br>\r\npop</br>\r\nsize</br>\r\npop</br>\r\npush 1</br>\r\nsize</br>\r\nexit	\N	ok</br>\r\n2</br>\r\n2</br>\r\n0</br>\r\nerror</br>\r\nok</br>\r\n1</br>\r\nbye</br>	\N
\.


--
-- Data for Name: judge_problemtest; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.judge_problemtest (id, test_number, input_data, output_data, problem_id) FROM stdin;
1	1	23	2 3	1
2	2	99	9 9	1
3	3	45	4 5	1
4	4	40	4 0	1
5	1	push 1\r\nfront\r\nexit	ok\r\n1\r\nbye\n	2
6	1	4\r\n5 0\r\n0 5\r\n-5 0\r\n0 -5	50.0	3
12	1	23	2 3	4
13	2	99	9 9	4
14	3	45	4 5	4
15	4	40	4 0	4
22	1	push 1\r\nfront\r\nexit	ok\r\n1\r\nbye\n	9
23	1	4\r\n5 0\r\n0 5\r\n-5 0\r\n0 -5	50.0	10
36	1	23	2 3	15
37	2	99	9 9	15
38	3	45	4 5	15
39	4	40	4 0	15
48	1	4\r\n5 0\r\n0 5\r\n-5 0\r\n0 -5	50.0	18
49	1	push 1\r\nfront\r\nexit	ok\r\n1\r\nbye\n	19
50	1	23	2 3	20
51	2	99	9 9	20
52	3	45	4 5	20
53	4	40	4 0	20
54	1	23	2 3	21
55	2	99	9 9	21
56	3	45	4 5	21
57	4	40	4 0	21
66	1	23	2 3	24
67	2	99	9 9	24
68	3	45	4 5	24
69	4	40	4 0	24
70	1	push 1\r\nfront\r\nexit	ok\r\n1\r\nbye\n	25
71	1	4\r\n5 0\r\n0 5\r\n-5 0\r\n0 -5	50.0	26
72	1	4\r\n5 0\r\n0 5\r\n-5 0\r\n0 -5	50.0	27
75	1	6 6\r\n11..#.\r\n1111..\r\n11...#\r\n....22\r\n33....\r\n3333##	3	30
\.


--
-- Data for Name: judge_programminglanguage; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.judge_programminglanguage (id, name, compile, execute, extension) FROM stdin;
2	C++11	/usr/bin/g++ -std=c++11 -o [codefilename] [codefilename].cpp	[codefilename]	cpp
4	C++17	/usr/bin/g++  -std=c++17 -o [codefilename] [codefilename].cpp	[codefilename]	cpp
3	C++14	/usr/bin/g++  -std=c++14 -o [codefilename] [codefilename].cpp	[codefilename]	cpp
5	Go 1.16.4	go build -o [codefilename] [codefilename].go	[codefilename]	go
6	Python 2.7.16	-	python2 -m [codefilename]	py
1	Python 3.9.0	-	python3 [codefilename].py	py
7	Java (openjdk 11.0.11)	javac [codefilefolder]/[codefilename].java	java -cp [codefilefolder] [codefilename]	java
\.


--
-- Data for Name: judge_solution; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.judge_solution (id, solving_date, status, program_code, avg_memory_usage, avg_time_usage, language_id, problem_id, user_id) FROM stdin;
2	2021-01-15 23:31:47.347118+02	AC	sadasdasd	1	1	2	1	1
3	2021-01-15 23:40:28.661396+02	CE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	0	2	1	1
4	2021-01-15 23:56:58.534282+02	CE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	0	2	1	1
12	2021-01-16 01:46:37.432523+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	0.01	2	1	1
13	2021-01-16 01:55:42.080267+02	TO	int main(){\r\nwhile(1){\r\nint a[1000];\r\n}\r\nreturn 0;\r\n}	0	1.0	2	1	1
14	2021-01-16 01:57:22.098576+02	TO	int main(){\r\nwhile(1){\r\nint a[1000];\r\n}\r\nreturn 0;\r\n}	0	1001.65	2	1	1
19	2021-01-16 02:53:19.84265+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	39.56	2	1	1
21	2021-01-16 11:34:18.38611+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	1.99	2	1	1
22	2021-01-16 11:34:55.292465+02	CE	wqewqewqe	0	0	2	1	1
25	2021-01-16 13:17:56.82138+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	4.15	2	1	1
27	2021-01-16 13:19:55.060234+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	4.27	2	1	1
28	2021-01-16 13:20:09.255767+02	CE	adsasdasd	0	0	2	1	1
29	2021-01-16 13:22:32.438113+02	WA	int main(){\r\nreturn 0;\r\n}	0	11.6	2	1	1
30	2021-01-16 13:24:15.639367+02	WA	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	5.16	2	1	1
31	2021-01-16 13:26:05.404824+02	WA	str = input()\r\na, b = (int(i) for i in list(str))\r\nprint(f'{a} {b}')	0	112.34	1	1	1
32	2021-01-16 13:30:45.512298+02	WA	str = input()\r\na, b = (int(i) for i in list(str))\r\nprint(f'{a} {b}')	0	167.47	1	1	1
33	2021-01-16 13:33:31.090245+02	WA	str = input()\r\na, b = (int(i) for i in list(str))\r\nprint(f'{a} {b}')	0	174.88	1	1	1
34	2021-01-16 13:36:00.044952+02	WA	str = input()\r\na, b = (int(i) for i in list(str))\r\nprint(f'{a} {b}')	0	128.66	1	1	1
35	2021-01-16 13:43:43.501759+02	WA	str = input()\r\na, b = (int(i) for i in list(str))\r\nprint(f'{a} {b}')	0	53.58	1	1	1
37	2021-01-16 13:46:04.42036+02	WA	str = input()\r\na, b = (int(i) for i in list(str))\r\nprint(f'{a} {b}')	0	135.61	1	1	1
38	2021-01-16 13:50:28.066189+02	AC	str = input()\r\na, b = (int(i) for i in list(str))\r\nprint(f'{a} {b}', end='')	0	47.53	1	1	1
39	2021-01-16 13:51:47.800764+02	TO	while 1:\r\n    a = [10000, 1000, 1000]	0	1001.36	1	1	1
40	2021-01-16 13:52:55.194099+02	CE	print(dsadsadasd)	0	0	2	1	1
41	2021-01-16 14:12:39.442054+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	4.06	2	1	1
47	2021-01-16 14:28:17.091549+02	CE	yguyufyutfytf	0	0	3	1	1
50	2021-01-16 14:34:29.567187+02	WA	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	185.09	1	1	1
51	2021-01-16 14:35:38.860406+02	AC	str = input()\r\na, b = (int(i) for i in list(str))\r\nprint(f'{a} {b}', end='')	0	138.75	1	1	1
52	2021-01-16 14:36:19.68001+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	9.79	2	1	1
55	2021-01-16 14:37:31.328034+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	6.97	2	1	1
58	2021-01-16 14:41:29.747601+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	13.82	2	1	1
60	2021-01-16 14:50:28.212338+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	3.02	2	1	1
62	2021-01-16 14:52:23.814978+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	8.02	2	1	1
63	2021-01-16 14:59:04.280512+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	7.2	2	1	1
65	2021-01-16 15:02:32.784046+02	NT	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	0	3	1	1
66	2021-01-16 15:03:22.571247+02	NT	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	0	3	1	1
68	2021-01-16 15:26:38.683398+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	13.36	2	1	1
69	2021-01-16 15:27:53.005135+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	9.25	4	1	1
70	2021-01-16 15:58:58.644042+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	8.17	3	1	1
71	2021-01-16 16:01:20.589962+02	CE	kbnhvhk	0	0	3	1	1
73	2021-01-16 16:08:08.47028+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	5.52	2	1	1
74	2021-01-16 16:09:21.584436+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	4.89	4	1	1
75	2021-01-16 16:14:12.413415+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	9.3	4	1	1
77	2021-01-16 17:32:50.828532+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	12.13	4	1	1
78	2021-01-16 17:33:11.505219+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	7.13	4	1	1
79	2021-01-16 17:33:29.750557+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	7.03	2	1	1
84	2021-01-16 22:31:25.446171+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	3.75	4	1	1
85	2021-01-16 22:35:21.060205+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	2.67	2	1	1
86	2021-01-16 22:36:36.008046+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	5.13	4	1	1
87	2021-01-16 22:42:30.26563+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	13.84	3	1	1
88	2021-01-16 22:46:25.33512+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	5.45	4	1	1
89	2021-01-16 22:52:48.509064+02	AC	str = input()\r\na, b = (int(i) for i in list(str))\r\nprint(f'{a} {b}', end='')	0	71.28	1	1	1
90	2021-01-16 23:04:30.357314+02	AC	str = input()\r\na, b = (int(i) for i in list(str))\r\nprint(f'{a} {b}', end='')	0	114.84	1	1	1
92	2021-01-16 23:42:03.095077+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	5.58	4	1	1
93	2021-01-16 23:42:36.177882+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	11.0	4	1	1
94	2021-01-16 23:54:40.965107+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	1.83	4	1	1
98	2021-01-17 00:48:59.810656+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	10.66	4	1	1
99	2021-01-17 00:48:59.959175+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	8.77	4	1	1
102	2021-01-17 00:59:41.944275+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	3.77	4	1	1
103	2021-01-17 01:02:19.546601+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	8.07	4	1	1
104	2021-01-18 14:33:17.836274+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	14.98	4	1	1
105	2021-01-18 14:40:34.260556+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	19.92	4	1	1
106	2021-01-27 18:57:27.691355+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	5.91	2	1	1
107	2021-01-27 18:57:27.796273+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	5.31	2	1	1
108	2021-01-27 18:57:30.331961+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	16.11	2	1	1
109	2021-01-27 18:57:30.759846+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	19.54	2	1	1
110	2021-01-27 18:57:32.403447+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	19.94	2	1	1
111	2021-01-27 18:57:32.865443+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	18.52	2	1	1
112	2021-01-27 18:57:34.075351+02	CE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 \r\n}	0	0	2	1	1
113	2021-01-27 18:57:34.487577+02	CE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 \r\n}	0	0	2	1	1
114	2021-01-27 18:57:35.392457+02	CE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 \r\n}	0	0	2	1	1
115	2021-01-28 15:31:05.946773+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	7.84	2	1	1
116	2021-01-28 15:31:30.641317+02	CE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 \r\n}	0	0	2	1	1
117	2021-01-28 15:48:55.892675+02	CE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 \r\n}	0	0	2	1	1
118	2021-01-28 15:49:14.051001+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	8.52	2	1	1
119	2021-01-28 15:50:06.979517+02	CE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	0	2	1	1
120	2021-01-28 15:51:59.821361+02	CE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	0	2	1	1
121	2021-01-28 15:52:24.117637+02	CE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	0	2	1	1
122	2021-01-28 15:53:44.048711+02	CE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	0	2	1	1
123	2021-01-28 15:54:48.032091+02	CE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	0	2	1	1
124	2021-01-28 15:55:07.847774+02	CE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	0	2	1	1
126	2021-01-28 15:58:04.220248+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	6.05	2	1	1
127	2021-01-28 16:00:11.771699+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	11.6	2	1	1
128	2021-01-28 16:00:58.501806+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	10.48	2	1	1
129	2021-01-28 16:04:41.383019+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	33.96	2	1	1
130	2021-01-28 16:05:54.986422+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	25.97	2	1	1
131	2021-01-28 16:10:44.39066+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	18.2	2	1	1
132	2021-01-28 16:11:26.025677+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	29.35	2	1	1
133	2021-01-28 16:21:19.707478+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	25.5	2	1	1
134	2021-01-28 16:23:30.128373+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0; \r\n}	0	22.02	2	1	1
136	2021-01-29 17:24:28.793578+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	14.87	2	1	1
137	2021-02-02 19:59:35.160034+02	AC	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	31.78	2	3	1
138	2021-02-02 20:07:14.227252+02	WA	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	5.87	2	3	1
139	2021-02-02 20:08:12.040968+02	WA	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	5.37	2	3	1
140	2021-02-02 20:08:48.47103+02	WA	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	5.23	2	3	1
141	2021-02-02 20:10:39.536342+02	WA	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	2.65	2	3	1
142	2021-02-02 20:12:27.439118+02	AC	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	9.32	2	3	1
143	2021-02-02 20:17:06.834452+02	AC	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	1.91	2	3	1
144	2021-02-02 20:17:15.641267+02	AC	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	11.97	2	3	1
145	2021-02-03 12:13:10.597993+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	1.71	2	1	1
146	2021-02-03 12:13:48.478873+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 1;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	3.62	2	1	1
147	2021-02-03 12:14:41.232109+02	AC	#include <iostream>\r\nusing namespace std;\r\nint b[10];\r\nint main(){\r\nb[11] = 1;\r\nint a;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	1.78	2	1	1
148	2021-02-03 12:16:57.616153+02	AC	a,b = tuple(input())\r\nprint(f'{a} {b}', end='')	0	97.35	1	1	1
149	2021-02-03 12:17:33.7562+02	AC	while True:\r\n   a,b = tuple(input())\r\n   print(f'{a} {b}', end='')	0	90.03	1	1	1
150	2021-02-03 12:18:42.036134+02	AC	while True:\r\n   a,b = tuple(input())\r\n   print(f'{a} {b}', end='')	0	86.41	1	1	1
151	2021-02-03 12:20:32.401395+02	WA	int main(){\r\nint b[10];\r\nb[11] = "111";\r\nreturn 0;\r\n}	0	72.33	1	1	1
152	2021-02-03 12:21:15.664844+02	CE	int main(){\r\nint b[10];\r\nb[11] = "111";\r\nreturn 0;\r\n}	0	0	2	1	1
153	2021-02-03 12:21:42.572717+02	WA	int main(){\r\nint b[10];\r\nb[11] = 111;\r\nreturn 0;\r\n}	0	3.26	2	1	1
154	2021-02-03 12:22:03.493416+02	WA	int main(){\r\nint b[10];\r\nb[11] = 111;\r\nreturn 0;\r\n}	0	3.49	4	1	1
155	2021-02-03 12:22:37.064646+02	WA	int main(){\r\nint b[10];\r\nb[11] = 111;\r\nreturn 0;\r\n}	0	13.87	3	1	1
156	2021-02-03 12:23:19.135488+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	6.36	3	1	1
157	2021-02-03 12:23:46.658643+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	3.02	4	1	1
160	2021-02-03 21:12:58.884682+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	7.66	4	1	1
161	2021-02-03 21:14:43.655027+02	WA	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	98.06	1	1	1
164	2021-02-08 20:41:57.154294+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	3.37	2	1	1
166	2021-03-27 15:48:58.296732+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	8.9	2	1	1
167	2021-03-27 15:52:40.610474+02	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	3.17	2	1	1
184	2021-04-17 13:36:03.479374+03	AC	#include <iostream>\r\n#include<queue>\r\n#include<string>\r\nusing namespace std;\r\nint main() {\r\n\tqueue<int>a;\r\n\tstring str1;\r\n\tint b;\r\n\tcin >> str1;\r\n\tfor (; str1 != "exit";) {\r\n\r\n\r\n\t\tif (str1 == "push") {\r\n\t\t\tcin >> b;\r\n\t\t\ta.push(b);\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\t\tif ((str1 == "front") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t}\r\n\t\telse if ((str1 == "front") && (a.size()==0)) \r\n\t\t\tcout << "error" << endl;\r\n\t\t\tif ((str1 == "pop") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t\ta.pop();\r\n\t\t}\r\n\t\t\telse if ((str1 == "pop") && (a.size() == 0))\r\n\t\t\t\tcout << "error" << endl;\r\n\t\tif (str1 == "size") {\r\n\t\t\tcout << a.size() << endl;\r\n\t\t}\r\n\t\tif (str1 == "clear") {\r\n\t\t\twhile (a.size() != 0) { a.pop(); }\r\n\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\r\n\r\n\t\tcin >> str1;\r\n\t\tif (str1 == "exit") break; {}\r\n\t}cout << "bye" << endl;\r\n\r\n}	0	14.96	4	9	1
170	2021-03-27 15:58:12.278661+02	RE	dsad	0	97.5	1	2	1
171	2021-03-30 16:12:44.685824+03	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	15.45	2	1	1
172	2021-03-30 16:13:38.937718+03	RE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	246.87	1	1	1
177	2021-04-08 18:08:37.765731+03	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	10.13	2	4	1
178	2021-04-08 23:52:54.696457+03	RE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	72.85	1	4	15
179	2021-04-08 23:53:00.140862+03	RE	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	105.65	1	4	15
180	2021-04-08 23:53:12.119536+03	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	6.62	2	4	15
189	2021-04-20 17:47:50.165181+03	AC	#include <iostream>\r\n#include<queue>\r\n#include<string>\r\nusing namespace std;\r\nint main() {\r\n\tqueue<int>a;\r\n\tstring str1;\r\n\tint b;\r\n\tcin >> str1;\r\n\tfor (; str1 != "exit";) {\r\n\r\n\r\n\t\tif (str1 == "push") {\r\n\t\t\tcin >> b;\r\n\t\t\ta.push(b);\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\t\tif ((str1 == "front") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t}\r\n\t\telse if ((str1 == "front") && (a.size()==0)) \r\n\t\t\tcout << "error" << endl;\r\n\t\t\tif ((str1 == "pop") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t\ta.pop();\r\n\t\t}\r\n\t\t\telse if ((str1 == "pop") && (a.size() == 0))\r\n\t\t\t\tcout << "error" << endl;\r\n\t\tif (str1 == "size") {\r\n\t\t\tcout << a.size() << endl;\r\n\t\t}\r\n\t\tif (str1 == "clear") {\r\n\t\t\twhile (a.size() != 0) { a.pop(); }\r\n\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\r\n\r\n\t\tcin >> str1;\r\n\t\tif (str1 == "exit") break; {}\r\n\t}cout << "bye" << endl;\r\n\r\n}	0	9.97	2	9	15
249	2021-05-20 23:34:56.200962+03	AC	import java.util.Scanner;\r\n\r\nclass VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	415.96	7	1	1
187	2021-04-18 09:50:22.971955+03	WA	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	3.21	2	9	15
188	2021-04-20 17:47:08.636498+03	PD	#include <iostream>\r\n#include<queue>\r\n#include<string>\r\nusing namespace std;\r\nint main() {\r\n\tqueue<int>a;\r\n\tstring str1;\r\n\tint b;\r\n\tcin >> str1;\r\n\tfor (; str1 != "exit";) {\r\n\r\n\r\n\t\tif (str1 == "push") {\r\n\t\t\tcin >> b;\r\n\t\t\ta.push(b);\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\t\tif ((str1 == "front") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t}\r\n\t\telse if ((str1 == "front") && (a.size()==0)) \r\n\t\t\tcout << "error" << endl;\r\n\t\t\tif ((str1 == "pop") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t\ta.pop();\r\n\t\t}\r\n\t\t\telse if ((str1 == "pop") && (a.size() == 0))\r\n\t\t\t\tcout << "error" << endl;\r\n\t\tif (str1 == "size") {\r\n\t\t\tcout << a.size() << endl;\r\n\t\t}\r\n\t\tif (str1 == "clear") {\r\n\t\t\twhile (a.size() != 0) { a.pop(); }\r\n\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\r\n\r\n\t\tcin >> str1;\r\n\t\tif (str1 == "exit") break; {}\r\n\t}cout << "bye" << endl;\r\n\r\n}	0	0	2	9	15
191	2021-04-20 17:49:52.119554+03	AC	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	1.89	4	10	15
192	2021-04-20 17:50:47.215018+03	AC	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	4.5	4	10	1
193	2021-04-24 14:20:41.332513+03	WA	string = input()\r\nprint(f'{string[0]} {string[1]}')	0	44.8	1	1	1
194	2021-04-24 14:22:55.661128+03	WA	string = input()\r\nprint(f'{string[0]} {string[1]}')	0	45.41	1	1	1
195	2021-04-24 14:25:12.884199+03	AC	string = input()\r\nprint(f'{string[0]} {string[1]}', end='')	0	50.25	1	1	1
197	2021-05-01 18:11:51.105914+03	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	2.28	2	1	1
247	2021-05-20 23:29:00.213377+03	AC	import java.util.Scanner;\r\n\r\nclass VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	395.22	7	1	1
251	2021-05-20 23:36:49.166063+03	AC	import java.util.Scanner;\r\n\r\nclass VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	339.13	7	1	1
198	2021-05-01 20:42:36.250244+03	AC	#include <iostream>\r\n#include<queue>\r\n#include<string>\r\nusing namespace std;\r\nint main() {\r\n\tqueue<int>a;\r\n\tstring str1;\r\n\tint b;\r\n\tcin >> str1;\r\n\tfor (; str1 != "exit";) {\r\n\r\n\r\n\t\tif (str1 == "push") {\r\n\t\t\tcin >> b;\r\n\t\t\ta.push(b);\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\t\tif ((str1 == "front") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t}\r\n\t\telse if ((str1 == "front") && (a.size()==0)) \r\n\t\t\tcout << "error" << endl;\r\n\t\t\tif ((str1 == "pop") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t\ta.pop();\r\n\t\t}\r\n\t\t\telse if ((str1 == "pop") && (a.size() == 0))\r\n\t\t\t\tcout << "error" << endl;\r\n\t\tif (str1 == "size") {\r\n\t\t\tcout << a.size() << endl;\r\n\t\t}\r\n\t\tif (str1 == "clear") {\r\n\t\t\twhile (a.size() != 0) { a.pop(); }\r\n\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\r\n\r\n\t\tcin >> str1;\r\n\t\tif (str1 == "exit") break; {}\r\n\t}cout << "bye" << endl;\r\n\r\n}	0	8.39	2	2	1
199	2021-05-01 20:43:15.002489+03	AC	#include <iostream>\r\n#include<queue>\r\n#include<string>\r\nusing namespace std;\r\nint main() {\r\n\tqueue<int>a;\r\n\tstring str1;\r\n\tint b;\r\n\tcin >> str1;\r\n\tfor (; str1 != "exit";) {\r\n\r\n\r\n\t\tif (str1 == "push") {\r\n\t\t\tcin >> b;\r\n\t\t\ta.push(b);\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\t\tif ((str1 == "front") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t}\r\n\t\telse if ((str1 == "front") && (a.size()==0)) \r\n\t\t\tcout << "error" << endl;\r\n\t\t\tif ((str1 == "pop") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t\ta.pop();\r\n\t\t}\r\n\t\t\telse if ((str1 == "pop") && (a.size() == 0))\r\n\t\t\t\tcout << "error" << endl;\r\n\t\tif (str1 == "size") {\r\n\t\t\tcout << a.size() << endl;\r\n\t\t}\r\n\t\tif (str1 == "clear") {\r\n\t\t\twhile (a.size() != 0) { a.pop(); }\r\n\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\r\n\r\n\t\tcin >> str1;\r\n\t\tif (str1 == "exit") break; {}\r\n\t}cout << "bye" << endl;\r\n\r\n}	0	23.44	4	2	15
200	2021-05-02 12:56:58.45774+03	RE	s = input()\r\nprint(f'{s[0] s[1]}', end='')	0	32.13	1	1	1
201	2021-05-02 12:57:34.279322+03	AC	s = input()\r\nprint(f'{s[0]} {s[1]}', end='')	0	54.35	1	1	1
202	2021-05-02 12:59:08.37989+03	TO	while 1:\r\n   pass	0	1001.98	1	1	1
203	2021-05-03 00:31:12.204476+03	WA	s = input()\r\nprint(s[0] + ' ' + s[1], end=' ')	0	132.58	1	1	1
204	2021-05-03 00:31:41.211793+03	WA	s = input()\r\nprint(s[0] + ' ' + s[1], end=' ')	0	121.91	1	1	1
205	2021-05-03 00:32:22.987809+03	WA	s = input()\r\nprint(f'{s[0]}  {s[1]}', end='')	0	132.41	1	1	1
206	2021-05-03 00:34:12.122894+03	AC	s = input()\r\nprint(s[0] + ' ' + s[1], end='')	0	135.84	1	1	1
207	2021-05-03 11:09:42.626053+03	AC	#include <iostream>\r\n#include<queue>\r\n#include<string>\r\nusing namespace std;\r\nint main() {\r\n\tqueue<int>a;\r\n\tstring str1;\r\n\tint b;\r\n\tcin >> str1;\r\n\tfor (; str1 != "exit";) {\r\n\r\n\r\n\t\tif (str1 == "push") {\r\n\t\t\tcin >> b;\r\n\t\t\ta.push(b);\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\t\tif ((str1 == "front") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t}\r\n\t\telse if ((str1 == "front") && (a.size()==0)) \r\n\t\t\tcout << "error" << endl;\r\n\t\t\tif ((str1 == "pop") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t\ta.pop();\r\n\t\t}\r\n\t\t\telse if ((str1 == "pop") && (a.size() == 0))\r\n\t\t\t\tcout << "error" << endl;\r\n\t\tif (str1 == "size") {\r\n\t\t\tcout << a.size() << endl;\r\n\t\t}\r\n\t\tif (str1 == "clear") {\r\n\t\t\twhile (a.size() != 0) { a.pop(); }\r\n\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\r\n\r\n\t\tcin >> str1;\r\n\t\tif (str1 == "exit") break; {}\r\n\t}cout << "bye" << endl;\r\n\r\n}	0	14.92	2	2	1
208	2021-05-03 11:38:00.928154+03	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	11.11	2	20	1
209	2021-05-03 16:30:51.372519+03	AC	s = input()\r\nprint(f'{s[0]} {s[1]}', end='')	0	128.68	1	21	1
210	2021-05-03 16:33:28.98639+03	AC	def solve(string:str):\r\n print(f'{string[0]} {string[1]}', end='')\r\nsolve(input())	0	122.95	1	21	15
211	2021-05-14 10:24:07.958586+03	WA	print('A')	0	38.65	1	3	1
212	2021-05-17 16:51:23.869132+03	AC	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	19.93	2	3	1
213	2021-05-17 19:06:50.425335+03	AC	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	4.8	2	26	1
214	2021-05-17 19:07:28.649193+03	AC	#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint b[10];\r\nb[11] = 111;\r\n int a ;\r\ncin >> a;\r\nif ((a<100) && (a>9)){cout << a/10 <<" "<< a%10;\r\n\r\n\r\n}return 0 ;\r\n}	0	5.38	2	24	1
215	2021-05-17 19:08:27.836819+03	AC	#include <iostream>\r\n#include<queue>\r\n#include<string>\r\nusing namespace std;\r\nint main() {\r\n\tqueue<int>a;\r\n\tstring str1;\r\n\tint b;\r\n\tcin >> str1;\r\n\tfor (; str1 != "exit";) {\r\n\r\n\r\n\t\tif (str1 == "push") {\r\n\t\t\tcin >> b;\r\n\t\t\ta.push(b);\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\t\tif ((str1 == "front") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t}\r\n\t\telse if ((str1 == "front") && (a.size()==0)) \r\n\t\t\tcout << "error" << endl;\r\n\t\t\tif ((str1 == "pop") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t\ta.pop();\r\n\t\t}\r\n\t\t\telse if ((str1 == "pop") && (a.size() == 0))\r\n\t\t\t\tcout << "error" << endl;\r\n\t\tif (str1 == "size") {\r\n\t\t\tcout << a.size() << endl;\r\n\t\t}\r\n\t\tif (str1 == "clear") {\r\n\t\t\twhile (a.size() != 0) { a.pop(); }\r\n\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\r\n\r\n\t\tcin >> str1;\r\n\t\tif (str1 == "exit") break; {}\r\n\t}cout << "bye" << endl;\r\n\r\n}	0	6.21	2	25	1
248	2021-05-20 23:32:27.08105+03	AC	import java.util.Scanner;\r\n\r\nclass VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	178.14	7	1	1
250	2021-05-20 23:36:04.941898+03	AC	import java.util.Scanner;\r\n\r\nclass VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	442.05	7	1	1
252	2021-05-20 23:37:51.454965+03	AC	import java.util.Scanner;\r\n\r\nclass VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	406.82	7	1	1
253	2021-05-20 23:38:17.74347+03	AC	import java.util.Scanner;\r\n\r\nclass VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	433.33	7	1	1
216	2021-05-17 19:13:44.934429+03	AC	#include <iostream>\r\n#include<queue>\r\n#include<string>\r\nusing namespace std;\r\nint main() {\r\n\tqueue<int>a;\r\n\tstring str1;\r\n\tint b;\r\n\tcin >> str1;\r\n\tfor (; str1 != "exit";) {\r\n\r\n\r\n\t\tif (str1 == "push") {\r\n\t\t\tcin >> b;\r\n\t\t\ta.push(b);\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\t\tif ((str1 == "front") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t}\r\n\t\telse if ((str1 == "front") && (a.size()==0)) \r\n\t\t\tcout << "error" << endl;\r\n\t\t\tif ((str1 == "pop") && (a.size()>0)) {\r\n\t\t\tcout << a.front() << endl;\r\n\t\t\ta.pop();\r\n\t\t}\r\n\t\t\telse if ((str1 == "pop") && (a.size() == 0))\r\n\t\t\t\tcout << "error" << endl;\r\n\t\tif (str1 == "size") {\r\n\t\t\tcout << a.size() << endl;\r\n\t\t}\r\n\t\tif (str1 == "clear") {\r\n\t\t\twhile (a.size() != 0) { a.pop(); }\r\n\r\n\t\t\tcout << "ok" << endl;\r\n\t\t}\r\n\r\n\r\n\t\tcin >> str1;\r\n\t\tif (str1 == "exit") break; {}\r\n\t}cout << "bye" << endl;\r\n\r\n}	0	2.16	2	25	15
217	2021-05-20 17:36:04.947877+03	PD	package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n  var v int\r\n  fmt.Scanf("%d", &v)\r\n  fmt.Printf("%d %d\\n", v / 10, v % 10)\r\n}	0	0	5	1	1
218	2021-05-20 17:40:03.945865+03	PD	package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n  var v int\r\n  fmt.Scanf("%d", &v)\r\n  fmt.Printf("%d %d\\n", v / 10, v % 10)\r\n}	0	0	5	1	1
219	2021-05-20 17:41:34.969879+03	PD	package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n  var v int\r\n  fmt.Scanf("%d", &v)\r\n  fmt.Printf("%d %d\\n", v / 10, v % 10)\r\n}	0	0	5	1	1
220	2021-05-20 17:44:29.722945+03	PD	package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n  var v int\r\n  fmt.Scanf("%d", &v)\r\n  fmt.Printf("%d %d\\n", v / 10, v % 10)\r\n}	0	0	5	1	1
221	2021-05-20 17:45:23.251464+03	PD	package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n  var v int\r\n  fmt.Scanf("%d", &v)\r\n  fmt.Printf("%d %d\\n", v / 10, v % 10)\r\n}	0	0	5	1	1
222	2021-05-20 17:46:05.744981+03	WA	package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n  var v int\r\n  fmt.Scanf("%d", &v)\r\n  fmt.Printf("%d %d\\n", v / 10, v % 10)\r\n}	0	14.76	5	1	1
223	2021-05-20 17:46:26.625971+03	AC	package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n  var v int\r\n  fmt.Scanf("%d", &v)\r\n  fmt.Printf("%d %d", v / 10, v % 10)\r\n}	0	18.29	5	1	1
224	2021-05-20 17:50:23.663424+03	WA	package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n  var v int\r\n  fmt.Scanf("%d", &v)\r\n  fmt.Printf("%d %d\\n", v / 10, v % 10)\r\n}	0	14.65	5	1	1
225	2021-05-20 17:50:41.693931+03	AC	package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n  var v int\r\n  fmt.Scanf("%d", &v)\r\n  fmt.Printf("%d %d\\n", v / 10, v % 10)\r\n}	0	4.11	5	1	1
226	2021-05-20 17:50:58.264692+03	AC	package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n  var v int\r\n  fmt.Scanf("%d", &v)\r\n  fmt.Printf("%d %d", v / 10, v % 10)\r\n}	0	6.45	5	1	1
227	2021-05-20 17:59:15.841338+03	RE	s = input()\r\nprint s[0] + ' ' + s[1]	0	41.27	6	1	1
228	2021-05-20 18:00:02.320884+03	AC	s = str(input())\r\nprint s[0] + ' ' + s[1]	0	32.12	6	1	1
229	2021-05-20 18:00:57.721036+03	WA	s = str(input())\r\nprint s[0] + s[1]	0	25.77	6	1	1
230	2021-05-20 18:01:36.073164+03	AC	s = str(input())\r\nprint s[0] + ' ' + s[1]	0	63.14	6	1	1
231	2021-05-20 18:02:19.572413+03	RE	s = input()\r\nprint(s[0] + ' ' + s[1])	0	101.37	1	1	1
232	2021-05-20 18:04:12.037529+03	RE	s = input()\r\nprint(s[0] + ' ' + s[1])	0	123.14	1	1	1
233	2021-05-20 18:08:58.374346+03	AC	s = str(input())\r\nprint s[0] + ' ' + s[1]	0	52.42	6	1	1
234	2021-05-20 18:09:31.005668+03	AC	s = input()\r\nprint(s[0] + ' ' + s[1])	0	39.23	1	1	1
235	2021-05-20 22:29:25.819001+03	CE	import java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	0	7	1	1
236	2021-05-20 22:34:34.638942+03	CE	import java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	0	7	1	1
237	2021-05-20 22:37:42.552703+03	CE	import java.util.Scanner;\r\n\r\npublic class VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	0	7	1	1
238	2021-05-20 22:39:37.528991+03	CE	import java.util.Scanner;\r\n\r\npublic class VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	0	7	1	1
239	2021-05-20 22:40:41.103773+03	RE	import java.util.Scanner;\r\n\r\nclass VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	187.22	7	1	1
240	2021-05-20 22:53:31.865057+03	CE	import java.util.Scanner;\r\n\r\nclass VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	0	7	1	1
241	2021-05-20 23:05:03.528014+03	CE	import java.util.Scanner;\r\n\r\nclass VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	0	7	1	1
242	2021-05-20 23:06:39.432928+03	CE	import java.util.Scanner;\r\n\r\nclass VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	0	7	1	1
243	2021-05-20 23:08:26.157834+03	CE	import java.util.Scanner;\r\n\r\nclass VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	0	7	1	1
244	2021-05-20 23:08:56.586994+03	PD	import java.util.Scanner;\r\n\r\nclass VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	0	7	1	1
245	2021-05-20 23:13:39.985005+03	CE	import java.util.Scanner;\r\n\r\nclass VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	0	7	1	1
246	2021-05-20 23:17:54.331356+03	RE	import java.util.Scanner;\r\n\r\nclass VVV {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	352.53	7	1	1
254	2021-06-04 19:44:43.764398+03	PD	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	0	2	27	1
255	2021-06-04 19:46:18.46494+03	PD	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	0	2	27	1
256	2021-06-04 19:48:22.952274+03	PD	import java.util.Scanner;\r\n\r\nclass VVV {\r\npublic static void main(String[] args) {\r\nScanner in = new Scanner(System.in);\r\nint number = in.nextInt();\r\nSystem.out.printf("%d %d\\n", number/10, number%10);\r\n}\r\n}	0	0	7	1	1
257	2021-06-04 19:51:55.123572+03	AC	import java.util.Scanner;\r\n\r\nclass VVV {\r\npublic static void main(String[] args) {\r\nScanner in = new Scanner(System.in);\r\nint number = in.nextInt();\r\nSystem.out.printf("%d %d\\n", number/10, number%10);\r\n}\r\n}	0	705.96	7	1	1
258	2021-06-04 19:54:04.411796+03	AC	#include<stdio.h>\r\n\r\nint main() {\r\n   int a = 0;\r\n   scanf("%d", &a);\r\n   printf("%d %d\\n", a/10, a%10);\r\n   return 0;\r\n}	0	7.2	2	1	1
259	2021-06-04 19:54:31.45125+03	AC	#include<stdio.h>\r\n\r\nint main() {\r\n   int a = 0;\r\n   scanf("%d", &a);\r\n   printf("%d %d\\n", a/10, a%10);\r\n   return 0;\r\n}	0	9.91	4	1	1
260	2021-06-04 19:54:50.749603+03	AC	#include<stdio.h>\r\n\r\nint main() {\r\n   int a = 0;\r\n   scanf("%d", &a);\r\n   printf("%d %d\\n", a/10, a%10);\r\n   return 0;\r\n}	0	9.93	3	1	1
261	2021-06-04 19:55:28.548812+03	WA	def solve(number):\r\n    print ("%d %d\\n" % (number/10, number%10))\r\n\r\nsolve(int(input()))	0	86.41	1	1	1
262	2021-06-04 19:56:33.014064+03	AC	s = input()\r\nprint(f'{s[0]} {s[1]}')	0	73.58	1	1	1
263	2021-06-04 19:56:59.494781+03	WA	s = input()\r\nprint(f'{s[0]} {s[1]}\\n')	0	72.36	1	1	1
264	2021-06-04 19:57:47.694647+03	RE	s = input()\r\ns = s[0] + ' ' + s[1]\r\nprint s	0	47.14	1	1	1
265	2021-06-04 19:58:17.599422+03	RE	s = input()\r\ns = s[0] + ' ' + s[1]\r\nprint s	0	100.64	6	1	1
266	2021-06-04 19:58:47.402576+03	AC	s = str(input())\r\ns = s[0] + ' ' + s[1]\r\nprint s	0	63.57	6	1	1
267	2021-06-04 19:59:33.006868+03	AC	package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n  var v int\r\n  fmt.Scanf("%d", &v)\r\n  fmt.Printf("%d %d", v / 10, v % 10)\r\n}	0	3.52	5	1	1
268	2021-06-04 20:00:15.759313+03	AC	import java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	222.18	7	1	1
269	2021-06-04 20:02:51.275213+03	AC	import java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	212.04	7	1	1
270	2021-06-04 20:04:42.325104+03	AC	import java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	220.24	7	1	1
271	2021-06-04 20:11:14.233874+03	AC	import java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	225.62	7	1	1
272	2021-06-04 20:12:03.402926+03	AC	import java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	635.09	7	1	1
273	2021-06-04 20:12:37.64338+03	AC	import java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	278.27	7	1	1
274	2021-06-04 20:14:13.898247+03	CE	mport java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	0	7	27	1
275	2021-06-04 20:15:09.759518+03	WA	import java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int number = in.nextInt();\r\n        System.out.printf("%d %d\\n", number/10, number%10);\r\n    }\r\n}	0	202.44	7	27	1
276	2021-06-04 20:19:42.97899+03	AC	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	4.27	3	27	1
277	2021-06-05 11:14:53.174097+03	AC	#include<stdio.h>\r\n\r\nint main() {\r\n   int a = 0;\r\n   scanf("%d", &a);\r\n   printf("%d %d\\n", a/10, a%10);\r\n   return 0;\r\n}	0	5.54	2	1	15
278	2021-06-05 11:15:30.147487+03	CE	ackage main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n  var v int\r\n  fmt.Scanf("%d", &v)\r\n  fmt.Printf("%d %d\\n", v / 10, v % 10)\r\n}	0	0	5	1	15
279	2021-06-05 11:16:08.104024+03	AC	package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n  var v int\r\n  fmt.Scanf("%d", &v)\r\n  fmt.Printf("%d %d\\n", v / 10, v % 10)\r\n}	0	3.71	5	1	15
280	2021-06-05 11:16:47.901611+03	WA	def solve(number):\r\n    print ("%d %d\\n" % (number/10, number%10))\r\n\r\nsolve(int(input()))	0	67.58	1	1	15
281	2021-06-05 11:18:07.405484+03	WA	def solve(number):\r\n    print ("%d %d\\n" % (number/10, number%10))\r\n\r\nsolve(int(input()))	0	130.79	1	1	15
283	2021-06-05 11:20:51.738628+03	AC	def solve(number):\r\n    print ("%d %d\\n" % (number/10, number%10))\r\n\r\nsolve(int(input()))	0	91.36	1	1	15
282	2021-06-05 11:20:51.85749+03	AC	def solve(number):\r\n    print ("%d %d\\n" % (number/10, number%10))\r\n\r\nsolve(int(input()))	0	117.55	1	1	15
284	2021-06-05 11:21:32.774132+03	AC	#include<stdio.h>\r\n\r\nint main() {\r\n   int a = 0;\r\n   scanf("%d", &a);\r\n   printf("%d %d\\n", a/10, a%10);\r\n   return 0;\r\n}	0	4.12	2	1	15
285	2021-06-05 11:21:56.535201+03	AC	#include<stdio.h>\r\n\r\nint main() {\r\n   int a = 0;\r\n   scanf("%d", &a);\r\n   printf("%d %d", a/10, a%10);\r\n   return 0;\r\n}	0	3.73	2	1	15
286	2021-06-05 11:26:20.055427+03	AC	#include<stdio.h>\r\n\r\nint main() {\r\n   int a = 0;\r\n   scanf("%d", &a);\r\n   printf("%d %d\\n", a/10, a%10);\r\n   return 0;\r\n}	0	9.16	4	1	15
287	2021-06-05 16:55:49.625848+03	AC	s = input()\r\nprint(f'{s[0]} {s[1]}')	0	76.6	1	1	1
288	2021-06-12 14:53:02.855165+03	AC	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n,first, second,x,y;\r\n\tdouble s = 0.0;\r\n\tscanf("%d", &n);\r\n\tscanf("%d %d", &first, &second);\r\n\tscanf("%d %d", &x, &y);\r\n\ts += (double)(y + second)*(first-x);\r\n\tint i=3;\r\nwhile(i<=n)\r\n{\r\n    int x1, y1;\r\n    scanf("%d %d", &x1, &y1);\r\n    s += (y1 + y) * (x-x1);\r\n    y=y1;\r\n    x=x1;\r\n    i++;\r\n}\r\n\ts+=(y + second)*(x-first);\r\n\ts/=2;\r\n\ts=abs(s);\r\n\tprintf("%.1lf", s);\r\n\treturn 0;\r\n}	0	11.27	3	3	1
289	2021-06-19 15:18:15.266643+03	WA	#include <iostream>\r\n#include <stack>\r\nusing namespace std;\r\n\r\nchar g[35][35];\r\nint visited[35][35];\r\nstack <int> st;\r\n\r\nint check(int i, int j)\r\n{\r\n\tint empty = 0;\r\n\tif (!visited[i][j])\r\n\t{\r\n\t\tif(g[i+1][j] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i+1][j])\r\n\t\t\t{\r\n\t\t\t\tst.push(i+1);\r\n\t\t\t\tst.push(j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(g[i-1][j] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i-1][j])\r\n\t\t\t{\r\n\t\t\t\tst.push(i-1);\r\n\t\t\t\tst.push(j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(g[i][j+1] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i][j+1])\r\n\t\t\t{\r\n\t\t\t\tst.push(i);\r\n\t\t\t\tst.push(j+1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(g[i][j-1] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i][j-1])\r\n\t\t\t{\r\n\t\t\t\tst.push(i);\r\n\t\t\t\tst.push(j-1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvisited[i][j]=1;\r\n\t\treturn 4-empty;\r\n\t}\r\n\treturn 0;\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tfor(int i(0);i<n;i++)\r\n\t{\r\n\t\tfor(int j(0);j<n;j++)\r\n\t\t{\r\n\t\tvisited[i][j]=0;\r\n\t\t\tcin >> g[i][j];\r\n\t\t}\t\r\n\t}\r\n\tst.push(0);\r\n\tst.push(0);\r\n\tint walls=0;\r\n\twhile(!st.empty())\r\n\t{\r\n\t\tint col = st.top();\r\n\t\tst.pop();\r\n\t\tint row = st.top();\r\n\t\tst.pop();\r\n\t\twalls +=check(row,col);\r\n\t\tif(!visited[n-1][n-1])\r\n\t\t{\r\n\t\t\tst.push(n-1);\r\n\t\t\tst.push(n-1);\r\n\t\t\twhile(!st.empty())\r\n\t\t\t{\r\n\t\t\t\tcol=st.top();\r\n\t\t\t\tst.pop();\r\n\t\t\t\trow = st.top();\r\n\t\t\t\tst.pop();\r\n\t\t\t\twalls+=check(row,col);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\twalls-=4;\r\n\t\r\n\tcout << walls*9;\r\n\treturn 0;\r\n}	0	3.95	2	30	1
290	2021-06-19 15:22:23.342029+03	WA	#include <iostream>\r\n#include <stack>\r\nusing namespace std;\r\n\r\nchar g[35][35];\r\nint visited[35][35];\r\nstack <int> st;\r\n\r\nint check(int i, int j)\r\n{\r\n\tint empty = 0;\r\n\tif (!visited[i][j])\r\n\t{\r\n\t\tif(g[i+1][j] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i+1][j])\r\n\t\t\t{\r\n\t\t\t\tst.push(i+1);\r\n\t\t\t\tst.push(j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(g[i-1][j] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i-1][j])\r\n\t\t\t{\r\n\t\t\t\tst.push(i-1);\r\n\t\t\t\tst.push(j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(g[i][j+1] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i][j+1])\r\n\t\t\t{\r\n\t\t\t\tst.push(i);\r\n\t\t\t\tst.push(j+1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(g[i][j-1] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i][j-1])\r\n\t\t\t{\r\n\t\t\t\tst.push(i);\r\n\t\t\t\tst.push(j-1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvisited[i][j]=1;\r\n\t\treturn 4-empty;\r\n\t}\r\n\treturn 0;\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tfor(int i(0);i<n;i++)\r\n\t{\r\n\t\tfor(int j(0);j<n;j++)\r\n\t\t{\r\n\t\tvisited[i][j]=0;\r\n\t\t\tcin >> g[i][j];\r\n\t\t}\t\r\n\t}\r\n\tst.push(0);\r\n\tst.push(0);\r\n\tint walls=0;\r\n\twhile(!st.empty())\r\n\t{\r\n\t\tint col = st.top();\r\n\t\tst.pop();\r\n\t\tint row = st.top();\r\n\t\tst.pop();\r\n\t\twalls +=check(row,col);\r\n\t\tif(!visited[n-1][n-1])\r\n\t\t{\r\n\t\t\tst.push(n-1);\r\n\t\t\tst.push(n-1);\r\n\t\t\twhile(!st.empty())\r\n\t\t\t{\r\n\t\t\t\tcol=st.top();\r\n\t\t\t\tst.pop();\r\n\t\t\t\trow = st.top();\r\n\t\t\t\tst.pop();\r\n\t\t\t\twalls+=check(row,col);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\twalls-=4;\r\n\t\r\n\tcout << walls*9;\r\n\treturn 0;\r\n}	0	4.86	2	30	1
291	2021-06-19 15:23:57.857641+03	WA	#include <iostream>\r\n#include <stack>\r\nusing namespace std;\r\n\r\nchar g[35][35];\r\nint visited[35][35];\r\nstack <int> st;\r\n\r\nint check(int i, int j)\r\n{\r\n\tint empty = 0;\r\n\tif (!visited[i][j])\r\n\t{\r\n\t\tif(g[i+1][j] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i+1][j])\r\n\t\t\t{\r\n\t\t\t\tst.push(i+1);\r\n\t\t\t\tst.push(j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(g[i-1][j] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i-1][j])\r\n\t\t\t{\r\n\t\t\t\tst.push(i-1);\r\n\t\t\t\tst.push(j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(g[i][j+1] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i][j+1])\r\n\t\t\t{\r\n\t\t\t\tst.push(i);\r\n\t\t\t\tst.push(j+1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(g[i][j-1] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i][j-1])\r\n\t\t\t{\r\n\t\t\t\tst.push(i);\r\n\t\t\t\tst.push(j-1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvisited[i][j]=1;\r\n\t\treturn 4-empty;\r\n\t}\r\n\treturn 0;\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tfor(int i(0);i<n;i++)\r\n\t{\r\n\t\tfor(int j(0);j<n;j++)\r\n\t\t{\r\n\t\tvisited[i][j]=0;\r\n\t\t\tcin >> g[i][j];\r\n\t\t}\t\r\n\t}\r\n\tst.push(0);\r\n\tst.push(0);\r\n\tint walls=0;\r\n\twhile(!st.empty())\r\n\t{\r\n\t\tint col = st.top();\r\n\t\tst.pop();\r\n\t\tint row = st.top();\r\n\t\tst.pop();\r\n\t\twalls +=check(row,col);\r\n\t\tif(!visited[n-1][n-1])\r\n\t\t{\r\n\t\t\tst.push(n-1);\r\n\t\t\tst.push(n-1);\r\n\t\t\twhile(!st.empty())\r\n\t\t\t{\r\n\t\t\t\tcol=st.top();\r\n\t\t\t\tst.pop();\r\n\t\t\t\trow = st.top();\r\n\t\t\t\tst.pop();\r\n\t\t\t\twalls+=check(row,col);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\twalls-=4;\r\n\t\r\n\tcout << walls*9;\r\n\treturn 0;\r\n}	0	8.23	2	30	1
292	2021-06-19 15:25:24.988142+03	AC	#include <iostream>\r\n#include <stack>\r\nusing namespace std;\r\n\r\nchar g[35][35];\r\nint visited[35][35];\r\nstack <int> st;\r\n\r\nint check(int i, int j)\r\n{\r\n\tint empty = 0;\r\n\tif (!visited[i][j])\r\n\t{\r\n\t\tif(g[i+1][j] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i+1][j])\r\n\t\t\t{\r\n\t\t\t\tst.push(i+1);\r\n\t\t\t\tst.push(j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(g[i-1][j] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i-1][j])\r\n\t\t\t{\r\n\t\t\t\tst.push(i-1);\r\n\t\t\t\tst.push(j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(g[i][j+1] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i][j+1])\r\n\t\t\t{\r\n\t\t\t\tst.push(i);\r\n\t\t\t\tst.push(j+1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(g[i][j-1] == '.')\r\n\t\t{\r\n\t\t\tempty++;\r\n\t\t\tif(!visited[i][j-1])\r\n\t\t\t{\r\n\t\t\t\tst.push(i);\r\n\t\t\t\tst.push(j-1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvisited[i][j]=1;\r\n\t\treturn 4-empty;\r\n\t}\r\n\treturn 0;\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tfor(int i(0);i<n;i++)\r\n\t{\r\n\t\tfor(int j(0);j<n;j++)\r\n\t\t{\r\n\t\tvisited[i][j]=0;\r\n\t\t\tcin >> g[i][j];\r\n\t\t}\t\r\n\t}\r\n\tst.push(0);\r\n\tst.push(0);\r\n\tint walls=0;\r\n\twhile(!st.empty())\r\n\t{\r\n\t\tint col = st.top();\r\n\t\tst.pop();\r\n\t\tint row = st.top();\r\n\t\tst.pop();\r\n\t\twalls +=check(row,col);\r\n\t\tif(!visited[n-1][n-1])\r\n\t\t{\r\n\t\t\tst.push(n-1);\r\n\t\t\tst.push(n-1);\r\n\t\t\twhile(!st.empty())\r\n\t\t\t{\r\n\t\t\t\tcol=st.top();\r\n\t\t\t\tst.pop();\r\n\t\t\t\trow = st.top();\r\n\t\t\t\tst.pop();\r\n\t\t\t\twalls+=check(row,col);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\twalls=1;\r\n\t\r\n\tcout << walls*3;\r\n\treturn 0;\r\n}	0	6.99	2	30	1
293	2021-06-19 15:30:55.499257+03	WA	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\nint n,first, second,x,y;\r\ndouble s = 0.0;\r\nscanf("%d", &n);\r\nscanf("%d %d", &first, &second);\r\nscanf("%d %d", &x, &y);\r\ns += (double)(y + second)*(first-x);\r\nint i=3;\r\nwhile(i<=n)\r\n{\r\nint x1, y1;\r\nscanf("%d %d", &x1, &y1);\r\ns += (y1 + y) * (x-x1);\r\ny=y1;\r\nx=x1;\r\ni++;\r\n}\r\ns+=(y + second)*(x-first);\r\ns/=2;\r\ns=abs(s);\r\nprintf("ww%.1lf", s);\r\nreturn 0;\r\n}	0	4.86	2	27	15
294	2021-06-19 15:49:18.322338+03	AC	s = input()\r\nprint(f'{s[0]} {s[1]}')	0	72.97	1	1	1
295	2021-06-19 15:50:02.431678+03	CE	s = input()\r\nprint(f'{s[0]} {s[1]}')	0	0	2	1	1
296	2021-06-19 15:52:43.190171+03	AC	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\nint n,first, second,x,y;\r\ndouble s = 0.0;\r\nscanf("%d", &n);\r\nscanf("%d %d", &first, &second);\r\nscanf("%d %d", &x, &y);\r\ns += (double)(y + second)*(first-x);\r\nint i=3;\r\nwhile(i<=n)\r\n{\r\nint x1, y1;\r\nscanf("%d %d", &x1, &y1);\r\ns += (y1 + y) * (x-x1);\r\ny=y1;\r\nx=x1;\r\ni++;\r\n}\r\ns+=(y + second)*(x-first);\r\ns/=2;\r\ns=abs(s);\r\nprintf("%.1lf", s);\r\nreturn 0;\r\n}	0	4.17	2	27	1
297	2021-06-19 15:58:31.673079+03	AC	s = input()\r\nprint(f'{s[0]} {s[1]}')	0	66.4	1	1	1
298	2021-06-19 16:01:04.074277+03	AC	#include <cstdio>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\nint n,first, second,x,y;\r\ndouble s = 0.0;\r\nscanf("%d", &n);\r\nscanf("%d %d", &first, &second);\r\nscanf("%d %d", &x, &y);\r\ns += (double)(y + second)*(first-x);\r\nint i=3;\r\nwhile(i<=n)\r\n{\r\nint x1, y1;\r\nscanf("%d %d", &x1, &y1);\r\ns += (y1 + y) * (x-x1);\r\ny=y1;\r\nx=x1;\r\ni++;\r\n}\r\ns+=(y + second)*(x-first);\r\ns/=2;\r\ns=abs(s);\r\nprintf("%.1lf", s);\r\nreturn 0;\r\n}	0	25.39	2	27	1
\.


--
-- Data for Name: judge_solutiontest; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.judge_solutiontest (id, memory_usage, time_usage, status, solution_id, problem_test_id) FROM stdin;
1	1	0.0	AC	12	1
2	1	0.0	AC	12	2
3	1	0.01	AC	12	3
4	1	0.01	AC	12	4
5	1	1.0	TO	13	1
6	1	1.0	TO	13	2
7	1	1.0	TO	13	3
8	1	1.0	TO	13	4
9	1	1001.95	TO	14	1
10	1	1001.76	TO	14	2
11	1	1001.3	TO	14	3
12	1	1001.57	TO	14	4
13	1	77.62	AC	19	1
14	1	27.48	AC	19	2
15	1	34.13	AC	19	3
16	1	18.99	AC	19	4
17	1	1.87	AC	21	1
18	1	1.86	AC	21	2
19	1	1.73	AC	21	3
20	1	2.48	AC	21	4
21	1	3.92	AC	25	1
22	1	4.87	AC	25	2
23	1	4.0	AC	25	3
24	1	3.81	AC	25	4
25	1	4.56	AC	27	1
26	1	2.95	AC	27	2
27	1	4.42	AC	27	3
28	1	5.15	AC	27	4
29	1	21.07	WA	29	1
30	1	8.06	WA	29	2
31	1	8.06	WA	29	3
32	1	9.22	WA	29	4
33	1	4.58	AC	30	1
34	1	6.57	AC	30	2
35	1	5.94	AC	30	3
36	1	4.22	AC	30	4
56	1	2.69	AC	41	1
57	1	2.03	AC	41	2
58	1	3.17	AC	41	3
59	1	8.36	AC	41	4
64	1	2.18	AC	52	1
65	1	8.53	AC	52	2
66	1	14.01	AC	52	3
67	1	14.46	AC	52	4
68	1	3.78	AC	55	1
69	1	2.27	AC	55	2
70	1	10.93	AC	55	3
71	1	10.92	AC	55	4
72	1	9.29	AC	58	1
73	1	23.05	AC	58	2
74	1	3.02	AC	58	3
75	1	19.9	AC	58	4
76	1	2.18	AC	60	1
77	1	5.47	AC	60	2
78	1	2.51	AC	60	3
79	1	1.9	AC	60	4
80	1	4.4	AC	62	1
81	1	2.14	AC	62	2
82	1	9.68	AC	62	3
83	1	15.85	AC	62	4
84	1	10.83	AC	63	1
85	1	10.38	AC	63	2
86	1	1.86	AC	63	3
87	1	5.73	AC	63	4
88	1	12.03	AC	68	1
89	1	17.18	AC	68	2
90	1	15.45	AC	68	3
91	1	8.77	AC	68	4
94	1	2.06	AC	73	1
95	1	11.2	AC	73	2
96	1	1.83	AC	73	3
97	1	6.98	AC	73	4
100	1	17.56	AC	77	1
101	1	9.7	AC	77	2
102	1	16.29	AC	77	3
103	1	4.98	AC	77	4
104	1	5.49	AC	78	1
105	1	10.12	AC	78	2
106	1	3.64	AC	78	3
107	1	9.29	AC	78	4
108	1	2.12	AC	79	1
109	1	4.83	AC	79	2
110	1	12.69	AC	79	3
111	1	8.48	AC	79	4
112	1	2.52	AC	84	1
113	1	2.22	AC	84	2
114	1	1.74	AC	84	3
115	1	8.51	AC	84	4
116	1	2.55	AC	85	1
117	1	1.81	AC	85	2
118	1	1.84	AC	85	3
119	1	4.49	AC	85	4
120	1	4.52	AC	86	1
121	1	1.68	AC	86	2
122	1	4.3	AC	86	3
123	1	10.02	AC	86	4
124	1	2.06	AC	87	1
125	1	9.58	AC	87	2
126	1	37.87	AC	87	3
127	1	5.86	AC	87	4
128	1	9.08	AC	88	1
129	1	3.78	AC	88	2
130	1	1.8	AC	88	3
131	1	7.14	AC	88	4
132	1	49.39	AC	89	1
133	1	80.67	AC	89	2
134	1	69.48	AC	89	3
135	1	85.58	AC	89	4
136	1	147.64	AC	90	1
137	1	136.39	AC	90	2
138	1	97.3	AC	90	3
139	1	78.02	AC	90	4
140	1	4.72	AC	92	1
141	1	4.33	AC	92	2
142	1	3.4	AC	92	3
143	1	9.87	AC	92	4
144	1	12.11	AC	93	1
145	1	10.93	AC	93	2
146	1	15.01	AC	93	3
147	1	5.95	AC	93	4
148	1	2.64	AC	94	1
149	1	2.25	AC	94	2
150	1	0.57	AC	94	3
151	1	1.87	AC	94	4
152	1	5.91	AC	98	1
153	1	2.47	AC	98	2
154	1	14.2	AC	98	3
155	1	20.08	AC	98	4
156	1	2.51	AC	99	1
157	1	3.77	AC	99	2
158	1	22.89	AC	99	3
159	1	5.89	AC	99	4
160	1	1.39	AC	102	1
161	1	2.52	AC	102	2
162	1	4.55	AC	102	3
163	1	6.61	AC	102	4
164	1	4.39	AC	103	1
165	1	7.36	AC	103	2
166	1	9.91	AC	103	3
167	1	10.62	AC	103	4
168	1	2.97	AC	104	1
169	1	2.8	AC	104	2
170	1	2.88	AC	104	3
171	1	51.27	AC	104	4
172	1	11.04	AC	105	1
173	1	20.85	AC	105	2
174	1	46.23	AC	105	3
175	1	1.56	AC	105	4
176	1	6.67	AC	106	1
177	1	12.39	AC	106	2
178	1	11.29	AC	107	1
179	1	2.73	AC	106	3
180	1	3.81	AC	107	2
181	1	1.83	AC	106	4
182	1	1.84	AC	107	3
183	1	4.32	AC	107	4
184	1	6.6	AC	108	1
185	1	32.86	AC	108	2
186	1	15.93	AC	108	3
187	1	9.06	AC	108	4
188	1	29.85	AC	109	1
189	1	17.65	AC	109	2
190	1	4.49	AC	109	3
191	1	26.16	AC	109	4
192	1	15.54	AC	110	1
193	1	15.11	AC	110	2
194	1	12.6	AC	110	3
195	1	36.49	AC	110	4
196	1	14.28	AC	111	1
197	1	10.66	AC	111	2
198	1	24.78	AC	111	3
199	1	24.37	AC	111	4
200	1	10.72	AC	115	1
201	1	7.3	AC	115	2
202	1	8.71	AC	115	3
203	1	4.61	AC	115	4
204	1	8.25	AC	118	1
205	1	14.41	AC	118	2
206	1	9.49	AC	118	3
207	1	1.91	AC	118	4
208	1	9.0	AC	126	1
209	1	5.17	AC	126	2
210	1	2.36	AC	126	3
211	1	7.69	AC	126	4
212	1	12.63	AC	127	1
213	1	10.97	AC	127	2
214	1	11.0	AC	127	3
215	1	11.8	AC	127	4
216	1	14.73	AC	128	1
217	1	11.41	AC	128	2
218	1	3.38	AC	128	3
219	1	12.4	AC	128	4
220	1	16.64	AC	129	1
221	1	33.12	AC	129	2
222	1	39.84	AC	129	3
223	1	46.25	AC	129	4
224	1	22.44	AC	130	1
225	1	28.97	AC	130	2
226	1	16.98	AC	130	3
227	1	35.5	AC	130	4
228	1	16.85	AC	131	1
229	1	18.85	AC	131	2
230	1	18.87	AC	131	3
231	1	18.23	AC	131	4
232	1	5.73	AC	132	1
233	1	19.42	AC	132	2
234	1	58.37	AC	132	3
235	1	33.89	AC	132	4
236	1	21.0	AC	133	1
237	1	25.2	AC	133	2
238	1	24.6	AC	133	3
239	1	31.21	AC	133	4
240	1	28.14	AC	134	1
241	1	25.1	AC	134	2
242	1	19.08	AC	134	3
243	1	15.76	AC	134	4
244	1	22.77	AC	136	1
245	1	11.55	AC	136	2
246	1	12.47	AC	136	3
247	1	12.67	AC	136	4
248	1	31.78	AC	137	6
249	1	5.87	WA	138	6
250	1	5.37	WA	139	6
251	1	5.23	WA	140	6
252	1	2.65	WA	141	6
253	1	9.32	AC	142	6
254	1	1.91	AC	143	6
255	1	11.97	AC	144	6
256	1	1.56	AC	145	1
257	1	1.87	AC	145	2
258	1	0.56	AC	145	3
259	1	2.84	AC	145	4
260	1	2.7	AC	146	1
261	1	2.42	AC	146	2
262	1	3.25	AC	146	3
263	1	6.09	AC	146	4
264	1	1.73	AC	147	1
265	1	1.21	AC	147	2
266	1	2.15	AC	147	3
267	1	2.02	AC	147	4
268	1	82.23	AC	148	1
269	1	65.0	AC	148	2
270	1	168.37	AC	148	3
271	1	73.81	AC	148	4
272	1	78.06	AC	149	1
273	1	93.52	AC	149	2
274	1	125.23	AC	149	3
275	1	63.32	AC	149	4
276	1	73.62	AC	150	1
277	1	109.73	AC	150	2
278	1	51.98	AC	150	3
279	1	110.29	AC	150	4
280	1	52.46	WA	151	1
281	1	30.32	WA	151	2
282	1	146.16	WA	151	3
283	1	60.4	WA	151	4
284	1	4.5	WA	153	1
285	1	3.83	WA	153	2
286	1	1.9	WA	153	3
287	1	2.8	WA	153	4
288	1	5.03	WA	154	1
289	1	2.87	WA	154	2
290	1	2.87	WA	154	3
291	1	3.18	WA	154	4
292	1	5.86	WA	155	1
293	1	5.86	WA	155	2
294	1	21.88	WA	155	3
295	1	21.88	WA	155	4
296	1	5.28	AC	156	1
297	1	5.78	AC	156	2
298	1	8.88	AC	156	3
299	1	5.48	AC	156	4
300	1	1.74	AC	157	1
301	1	3.98	AC	157	2
302	1	2.61	AC	157	3
303	1	3.74	AC	157	4
304	1	8.05	AC	160	1
305	1	10.89	AC	160	2
306	1	6.27	AC	160	3
307	1	5.44	AC	160	4
308	1	81.65	WA	161	1
309	1	90.32	WA	161	2
310	1	116.21	WA	161	3
311	1	104.05	WA	161	4
312	1	2.09	AC	164	1
313	1	2.28	AC	164	2
314	1	4.9	AC	164	3
315	1	4.22	AC	164	4
320	1	8.74	AC	166	1
321	1	10.23	AC	166	2
322	1	5.53	AC	166	3
323	1	11.11	AC	166	4
324	1	5.48	AC	167	1
325	1	2.44	AC	167	2
326	1	2.59	AC	167	3
327	1	2.15	AC	167	4
330	1	97.5	RE	170	5
331	1	14.18	AC	171	1
332	1	14.45	AC	171	2
333	1	19.71	AC	171	3
334	1	13.46	AC	171	4
335	1	199.09	RE	172	1
336	1	169.61	RE	172	2
337	1	321.34	RE	172	3
338	1	297.45	RE	172	4
339	1	10.4	AC	177	12
340	1	5.56	AC	177	13
341	1	20.47	AC	177	14
342	1	4.09	AC	177	15
343	1	64.11	RE	178	12
344	1	30.11	RE	178	13
345	1	120.4	RE	178	14
346	1	76.79	RE	178	15
347	1	64.54	RE	179	12
348	1	109.12	RE	179	13
349	1	70.87	RE	179	14
350	1	178.06	RE	179	15
351	1	6.49	AC	180	12
352	1	5.99	AC	180	13
353	1	7.82	AC	180	14
354	1	6.17	AC	180	15
370	1	14.96	AC	184	22
375	1	3.21	WA	187	22
376	1	9.97	AC	189	22
381	1	1.89	AC	191	23
382	1	4.5	AC	192	23
383	1	31.89	WA	193	1
384	1	80.28	WA	193	2
385	1	40.54	WA	193	3
386	1	26.5	WA	193	4
387	1	39.73	WA	194	1
388	1	31.75	WA	194	2
389	1	48.89	WA	194	3
390	1	61.29	WA	194	4
391	1	38.93	AC	195	1
392	1	49.99	AC	195	2
393	1	58.25	AC	195	3
394	1	53.81	AC	195	4
399	1	2.06	AC	197	1
400	1	2.19	AC	197	2
401	1	2.12	AC	197	3
402	1	2.75	AC	197	4
403	1	8.39	AC	198	5
404	1	23.44	AC	199	5
405	1	47.35	RE	200	1
406	1	27.98	RE	200	2
407	1	26.02	RE	200	3
408	1	27.18	RE	200	4
409	1	31.48	AC	201	1
410	1	60.74	AC	201	2
411	1	88.27	AC	201	3
412	1	36.9	AC	201	4
413	1	1003.64	TO	202	1
414	1	1001.7	TO	202	2
415	1	1000.68	TO	202	3
416	1	1001.91	TO	202	4
417	1	217.39	WA	203	1
418	1	121.65	WA	203	2
419	1	99.94	WA	203	3
420	1	91.33	WA	203	4
421	1	105.41	WA	204	1
422	1	235.89	WA	204	2
423	1	66.23	WA	204	3
424	1	80.1	WA	204	4
425	1	152.16	WA	205	1
426	1	165.85	WA	205	2
427	1	102.17	WA	205	3
428	1	109.47	WA	205	4
429	1	123.78	AC	206	1
430	1	224.68	AC	206	2
431	1	99.44	AC	206	3
432	1	95.48	AC	206	4
433	1	14.92	AC	207	5
434	1	20.73	AC	208	50
435	1	16.93	AC	208	51
436	1	3.23	AC	208	52
437	1	3.54	AC	208	53
438	1	168.69	AC	209	54
439	1	147.48	AC	209	55
440	1	104.4	AC	209	56
441	1	94.16	AC	209	57
442	1	126.96	AC	210	54
443	1	123.76	AC	210	55
444	1	120.4	AC	210	56
445	1	120.69	AC	210	57
446	1	38.65	WA	211	6
447	1	19.93	AC	212	6
448	1	4.8	AC	213	71
449	1	9.81	AC	214	66
450	1	5.57	AC	214	67
451	1	4.85	AC	214	68
452	1	1.27	AC	214	69
453	1	6.21	AC	215	70
454	1	2.16	AC	216	70
455	1	14.87	WA	222	1
456	1	13.15	WA	222	2
457	1	15.0	WA	222	3
458	1	16.04	WA	222	4
459	1	32.66	AC	223	1
460	1	23.98	AC	223	2
461	1	9.45	AC	223	3
462	1	7.07	AC	223	4
463	1	22.67	WA	224	1
464	1	14.92	WA	224	2
465	1	6.21	WA	224	3
466	1	14.78	WA	224	4
467	1	6.8	AC	225	1
468	1	3.0	AC	225	2
469	1	3.54	AC	225	3
470	1	3.09	AC	225	4
471	1	5.04	AC	226	1
472	1	3.26	AC	226	2
473	1	14.87	AC	226	3
474	1	2.64	AC	226	4
475	1	34.26	RE	227	1
476	1	57.33	RE	227	2
477	1	41.84	RE	227	3
478	1	31.64	RE	227	4
479	1	34.02	AC	228	1
480	1	35.29	AC	228	2
481	1	24.98	AC	228	3
482	1	34.2	AC	228	4
483	1	30.79	WA	229	1
484	1	23.23	WA	229	2
485	1	23.19	WA	229	3
486	1	25.86	WA	229	4
487	1	40.42	AC	230	1
488	1	46.79	AC	230	2
489	1	89.64	AC	230	3
490	1	75.69	AC	230	4
491	1	99.17	RE	231	1
492	1	97.4	RE	231	2
493	1	115.03	RE	231	3
494	1	93.88	RE	231	4
495	1	100.47	RE	232	1
496	1	150.85	RE	232	2
497	1	103.71	RE	232	3
498	1	137.54	RE	232	4
499	1	49.45	AC	233	1
500	1	68.97	AC	233	2
501	1	49.73	AC	233	3
502	1	41.52	AC	233	4
503	1	41.48	AC	234	1
504	1	32.99	AC	234	2
505	1	39.58	AC	234	3
506	1	42.88	AC	234	4
507	1	128.17	RE	239	1
508	1	129.35	RE	239	2
509	1	221.75	RE	239	3
510	1	269.63	RE	239	4
511	1	338.0	RE	246	1
512	1	436.28	RE	246	2
513	1	309.27	RE	246	3
514	1	326.59	RE	246	4
515	1	495.55	AC	247	1
516	1	249.31	AC	247	2
517	1	303.32	AC	247	3
518	1	532.69	AC	247	4
519	1	187.87	AC	248	1
520	1	166.1	AC	248	2
521	1	184.72	AC	248	3
522	1	173.87	AC	248	4
523	1	467.09	AC	249	1
524	1	426.08	AC	249	2
525	1	464.45	AC	249	3
526	1	306.22	AC	249	4
527	1	380.04	AC	250	1
528	1	693.67	AC	250	2
529	1	500.33	AC	250	3
530	1	194.16	AC	250	4
531	1	330.72	AC	251	1
532	1	509.37	AC	251	2
533	1	331.4	AC	251	3
534	1	185.05	AC	251	4
535	1	589.66	AC	252	1
536	1	458.97	AC	252	2
537	1	404.34	AC	252	3
538	1	174.31	AC	252	4
539	1	534.33	AC	253	1
540	1	427.12	AC	253	2
541	1	516.38	AC	253	3
542	1	255.51	AC	253	4
543	1	499.55	AC	257	1
544	1	786.55	AC	257	2
545	1	911.17	AC	257	3
546	1	626.58	AC	257	4
547	1	7.64	AC	258	1
548	1	4.76	AC	258	2
549	1	4.19	AC	258	3
550	1	12.22	AC	258	4
551	1	12.15	AC	259	1
552	1	16.53	AC	259	2
553	1	6.29	AC	259	3
554	1	4.67	AC	259	4
555	1	8.59	AC	260	1
556	1	15.08	AC	260	2
557	1	6.22	AC	260	3
558	1	9.81	AC	260	4
559	1	70.92	WA	261	1
560	1	80.42	WA	261	2
561	1	105.3	WA	261	3
562	1	89.0	WA	261	4
563	1	60.52	AC	262	1
564	1	74.32	AC	262	2
565	1	85.92	AC	262	3
566	1	73.57	AC	262	4
567	1	67.68	WA	263	1
568	1	111.49	WA	263	2
569	1	52.45	WA	263	3
570	1	57.81	WA	263	4
571	1	43.27	RE	264	1
572	1	42.63	RE	264	2
573	1	50.1	RE	264	3
574	1	52.57	RE	264	4
575	1	188.56	RE	265	1
576	1	47.46	RE	265	2
577	1	59.78	RE	265	3
578	1	106.74	RE	265	4
579	1	62.74	AC	266	1
580	1	64.11	AC	266	2
581	1	68.5	AC	266	3
582	1	58.93	AC	266	4
583	1	7.02	AC	267	1
584	1	3.49	AC	267	2
585	1	0.88	AC	267	3
586	1	2.7	AC	267	4
587	1	203.02	AC	268	1
588	1	238.58	AC	268	2
589	1	200.46	AC	268	3
590	1	246.65	AC	268	4
591	1	193.84	AC	269	1
592	1	214.92	AC	269	2
593	1	213.21	AC	269	3
594	1	226.18	AC	269	4
595	1	218.01	AC	270	1
596	1	207.69	AC	270	2
597	1	235.33	AC	270	3
598	1	219.92	AC	270	4
599	1	215.99	AC	271	1
600	1	192.92	AC	271	2
601	1	244.44	AC	271	3
602	1	249.15	AC	271	4
603	1	338.02	AC	272	1
604	1	663.99	AC	272	2
605	1	771.09	AC	272	3
606	1	767.24	AC	272	4
607	1	296.63	AC	273	1
608	1	282.2	AC	273	2
609	1	266.8	AC	273	3
610	1	267.44	AC	273	4
611	1	202.44	WA	275	72
612	1	4.27	AC	276	72
613	1	5.98	AC	277	1
614	1	5.11	AC	277	2
615	1	4.6	AC	277	3
616	1	6.45	AC	277	4
617	1	5.15	AC	279	1
618	1	2.24	AC	279	2
619	1	3.59	AC	279	3
620	1	3.88	AC	279	4
621	1	134.76	WA	280	1
622	1	57.97	WA	280	2
623	1	35.18	WA	280	3
624	1	42.41	WA	280	4
625	1	76.88	WA	281	1
626	1	159.7	WA	281	2
627	1	157.66	WA	281	3
628	1	128.91	WA	281	4
629	1	160.32	AC	282	1
630	1	143.47	AC	283	1
631	1	110.14	AC	282	2
632	1	100.34	AC	283	2
633	1	75.27	AC	283	3
634	1	95.69	AC	282	3
635	1	46.35	AC	283	4
636	1	104.04	AC	282	4
637	1	6.97	AC	284	1
638	1	2.48	AC	284	2
639	1	4.27	AC	284	3
640	1	2.77	AC	284	4
641	1	6.65	AC	285	1
642	1	2.09	AC	285	2
643	1	0.83	AC	285	3
644	1	5.33	AC	285	4
645	1	20.58	AC	286	1
646	1	4.94	AC	286	2
647	1	5.82	AC	286	3
648	1	5.28	AC	286	4
649	1	69.09	AC	287	1
650	1	64.52	AC	287	2
651	1	66.53	AC	287	3
652	1	106.25	AC	287	4
653	1	11.27	AC	288	6
654	1	3.95	WA	289	75
655	1	4.86	WA	290	75
656	1	8.23	WA	291	75
657	1	6.99	AC	292	75
658	1	4.86	WA	293	72
659	1	50.72	AC	294	1
660	1	64.63	AC	294	2
661	1	82.2	AC	294	3
662	1	94.32	AC	294	4
663	1	4.17	AC	296	72
664	1	66.32	AC	297	1
665	1	60.75	AC	297	2
666	1	90.35	AC	297	3
667	1	48.19	AC	297	4
668	1	25.39	AC	298	72
\.


--
-- Data for Name: judge_userproblemstatus; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.judge_userproblemstatus (id, status, problem_id, user_id) FROM stdin;
1	AC	1	1
3	AC	4	1
7	AC	9	1
10	AC	9	15
12	AC	10	15
13	AC	10	1
2	AC	2	1
15	AC	2	15
16	AC	20	1
17	AC	21	1
18	AC	21	15
19	AC	3	1
20	AC	26	1
21	AC	24	1
22	AC	25	1
23	AC	25	15
24	AC	27	1
25	AC	1	15
26	AC	30	1
27	WA	27	15
\.


--
-- Data for Name: news_article; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.news_article (id, title, body, publication_date, body_en, body_uk, title_en, title_uk) FROM stdin;
2	Планова зміна у конфігурації мов програмування	Ми оновили конфігурацію мов програмування на сервері. Python 2.6 змінено на python2.7, python3.8 змінено на python 3.9.0. Дякуємо за увагу та бажаємо вдачі у розв'язувані задач!	2021-05-17 15:26:44.407216+03	We update programming languages configurations on server. Python 2.6 bump to python2.7, python3.8 bump to python 3.9.0. Thanks for understanding and good luck!	Ми оновили конфігурацію мов програмування на сервері. Python 2.6 змінено на python2.7, python3.8 змінено на python 3.9.0. Дякуємо за увагу та бажаємо вдачі у розв'язувані задач!	Planned change to languages config	Планова зміна у конфігурації мов програмування
1	Test article	Body of test article</br>\r\n<a href ="http://127.0.0.1:8000/en/competitions/list/"> Competition list</a>	2021-06-03 17:17:54.174396+03	Body of test article</br>\r\n<a href ="http://127.0.0.1:8000/en/competitions/list/"> Competition list</a>		Test article	Тестова стаття
3	Lorem ipsum dolor sit amet.	Lorem ipsum dolor sit amet consectetur adipisicing elit. Perferendis suscipit molestias consequuntur quaerat deleniti culpa fugiat saepe debitis. Vitae dolorem tempora veniam aspernatur laboriosam est accusantium ratione in consequatur, iusto, nostrum quis non illo dolore suscipit totam pariatur quaerat, qui aperiam at enim! Voluptatum itaque quod deleniti, rem perferendis blanditiis!	2021-06-19 14:48:12.516873+03	Lorem ipsum dolor sit amet consectetur adipisicing elit. Perferendis suscipit molestias consequuntur quaerat deleniti culpa fugiat saepe debitis. Vitae dolorem tempora veniam aspernatur laboriosam est accusantium ratione in consequatur, iusto, nostrum quis non illo dolore suscipit totam pariatur quaerat, qui aperiam at enim! Voluptatum itaque quod deleniti, rem perferendis blanditiis!		Lorem ipsum dolor sit amet.	\N
4	Lorem, ipsum.	Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quis corporis qui doloremque dolor earum sint pariatur officiis itaque dolore in quibusdam tenetur consequatur vero necessitatibus non, repudiandae, omnis neque cumque culpa esse at aperiam aliquam quaerat. Atque inventore quasi quisquam autem sequi at officiis nam velit. Quasi corporis sit ducimus!	2021-06-19 14:49:15.821394+03	Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quis corporis qui doloremque dolor earum sint pariatur officiis itaque dolore in quibusdam tenetur consequatur vero necessitatibus non, repudiandae, omnis neque cumque culpa esse at aperiam aliquam quaerat. Atque inventore quasi quisquam autem sequi at officiis nam velit. Quasi corporis sit ducimus!		Lorem, ipsum.	\N
\.


--
-- Data for Name: urlshortening_url; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.urlshortening_url (short_id, url, pub_date, is_expired, redirect_count) FROM stdin;
76e6bf	http://127.0.0.1:8080/uk/groups/9/confirm_joining/	2021-04-28 17:59:53.562909+03	f	0
7a58a6	http://127.0.0.1:8080/uk/groups/6/confirm_joining/	2021-04-28 18:01:19.872681+03	f	0
83721c	http://127.0.0.1:8080/en/groups/9/confirm_joining/	2021-05-01 18:12:34.124331+03	f	0
a935f4	http://127.0.0.1:8080/en/groups/6/confirm_joining/	2021-05-01 18:30:46.640977+03	f	0
24ed6b	http://127.0.0.1:8000/uk/groups/6/confirm_joining/	2021-06-03 06:43:20.723+03	f	0
0bd28c	http://127.0.0.1:8000/en/groups/9/confirm_joining/	2021-06-03 09:13:23.525175+03	f	0
1bcac4	http://127.0.0.1:8000/uk/groups/10/confirm_joining/	2021-06-04 17:31:41.334538+03	f	0
9cdbea	http://127.0.0.1:8000/en/groups/6/confirm_joining/	2021-06-05 01:24:29.421314+03	f	0
\.


--
-- Data for Name: users_customuser; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.users_customuser (id, password, last_login, is_superuser, first_name, last_name, is_staff, is_active, date_joined, email, username, avatar) FROM stdin;
30	pbkdf2_sha256$216000$bjomq4rqsizP$/TTqjruhqWdRvA0RdlYxkKtWepvZPsUEOGa/s+t0K8c=	\N	f			f	t	2021-04-17 18:37:41.664332+03	pro100takvoin@gmail.com	user_check	\N
15	pbkdf2_sha256$216000$HlHCavKVIGkM$Qu8Atpl3SN1yDcMmiHmiYAOMlIX6Ed558nJU1FFazyg=	2021-06-19 15:30:16.243347+03	f	Андрій	Мошко	f	t	2021-01-15 15:06:39.392061+02	andrew.moshko@gmail.com	last1war	uploads/2021/06-05/fsnhf_gallery_0.jpg
1	pbkdf2_sha256$216000$2fcgDyaCeY79$PAvPGilUAvzK0NNHwac0D3Qzs5ooTlJrTSF88zdmwVM=	2021-06-19 15:56:36.541749+03	t	Administrator		t	t	2020-12-23 15:43:42.309646+02	pro100moneyfarmer@gmail.com	admin	uploads/2021/06-12/fsnhf_gallery_3.jpg
\.


--
-- Data for Name: users_customuser_groups; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.users_customuser_groups (id, customuser_id, group_id) FROM stdin;
\.


--
-- Data for Name: users_customuser_user_permissions; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.users_customuser_user_permissions (id, customuser_id, permission_id) FROM stdin;
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 128, true);


--
-- Name: competitions_competition_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.competitions_competition_id_seq', 26, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 194, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 30, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 69, true);


--
-- Name: groups_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.groups_group_id_seq', 10, true);


--
-- Name: groups_groupuser_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.groups_groupuser_id_seq', 25, true);


--
-- Name: judge_problemcomment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.judge_problemcomment_id_seq', 1, false);


--
-- Name: judge_problemsamples_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.judge_problemsamples_id_seq', 28, true);


--
-- Name: judge_programminglanguage_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.judge_programminglanguage_id_seq', 7, true);


--
-- Name: judge_solution_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.judge_solution_id_seq', 298, true);


--
-- Name: judge_solutiontest_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.judge_solutiontest_id_seq', 668, true);


--
-- Name: judge_task_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.judge_task_id_seq', 30, true);


--
-- Name: judge_tasktest_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.judge_tasktest_id_seq', 75, true);


--
-- Name: judge_userproblemstatus_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.judge_userproblemstatus_id_seq', 27, true);


--
-- Name: news_article_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.news_article_id_seq', 4, true);


--
-- Name: users_customuser_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.users_customuser_groups_id_seq', 1, false);


--
-- Name: users_customuser_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.users_customuser_id_seq', 40, true);


--
-- Name: users_customuser_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.users_customuser_user_permissions_id_seq', 1, false);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: competitions_competition competitions_competition_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.competitions_competition
    ADD CONSTRAINT competitions_competition_pkey PRIMARY KEY (id);


--
-- Name: competitions_competition competitions_competition_title_key; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.competitions_competition
    ADD CONSTRAINT competitions_competition_title_key UNIQUE (title);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: groups_group groups_group_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.groups_group
    ADD CONSTRAINT groups_group_pkey PRIMARY KEY (id);


--
-- Name: groups_groupuser groups_groupuser_group_id_user_id_395455a8_uniq; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.groups_groupuser
    ADD CONSTRAINT groups_groupuser_group_id_user_id_395455a8_uniq UNIQUE (group_id, user_id);


--
-- Name: groups_groupuser groups_groupuser_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.groups_groupuser
    ADD CONSTRAINT groups_groupuser_pkey PRIMARY KEY (id);


--
-- Name: judge_problemcomment judge_problemcomment_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_problemcomment
    ADD CONSTRAINT judge_problemcomment_pkey PRIMARY KEY (id);


--
-- Name: judge_problemsamples judge_problemsamples_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_problemsamples
    ADD CONSTRAINT judge_problemsamples_pkey PRIMARY KEY (id);


--
-- Name: judge_programminglanguage judge_programminglanguage_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_programminglanguage
    ADD CONSTRAINT judge_programminglanguage_pkey PRIMARY KEY (id);


--
-- Name: judge_solution judge_solution_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_solution
    ADD CONSTRAINT judge_solution_pkey PRIMARY KEY (id);


--
-- Name: judge_solutiontest judge_solutiontest_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_solutiontest
    ADD CONSTRAINT judge_solutiontest_pkey PRIMARY KEY (id);


--
-- Name: judge_solutiontest judge_solutiontest_solution_id_problem_test_id_a73a3de0_uniq; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_solutiontest
    ADD CONSTRAINT judge_solutiontest_solution_id_problem_test_id_a73a3de0_uniq UNIQUE (solution_id, problem_test_id);


--
-- Name: judge_problem judge_task_number_key; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_problem
    ADD CONSTRAINT judge_task_number_key UNIQUE (number);


--
-- Name: judge_problem judge_task_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_problem
    ADD CONSTRAINT judge_task_pkey PRIMARY KEY (id);


--
-- Name: judge_problemtest judge_tasktest_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_problemtest
    ADD CONSTRAINT judge_tasktest_pkey PRIMARY KEY (id);


--
-- Name: judge_userproblemstatus judge_userproblemstatus_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_userproblemstatus
    ADD CONSTRAINT judge_userproblemstatus_pkey PRIMARY KEY (id);


--
-- Name: judge_userproblemstatus judge_userproblemstatus_user_id_problem_id_1d410bff_uniq; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_userproblemstatus
    ADD CONSTRAINT judge_userproblemstatus_user_id_problem_id_1d410bff_uniq UNIQUE (user_id, problem_id);


--
-- Name: news_article news_article_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.news_article
    ADD CONSTRAINT news_article_pkey PRIMARY KEY (id);


--
-- Name: news_article news_article_title_publication_date_c78bc849_uniq; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.news_article
    ADD CONSTRAINT news_article_title_publication_date_c78bc849_uniq UNIQUE (title, publication_date);


--
-- Name: urlshortening_url urlshortening_url_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.urlshortening_url
    ADD CONSTRAINT urlshortening_url_pkey PRIMARY KEY (short_id);


--
-- Name: users_customuser users_customuser_email_key; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.users_customuser
    ADD CONSTRAINT users_customuser_email_key UNIQUE (email);


--
-- Name: users_customuser_groups users_customuser_groups_customuser_id_group_id_76b619e3_uniq; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.users_customuser_groups
    ADD CONSTRAINT users_customuser_groups_customuser_id_group_id_76b619e3_uniq UNIQUE (customuser_id, group_id);


--
-- Name: users_customuser_groups users_customuser_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.users_customuser_groups
    ADD CONSTRAINT users_customuser_groups_pkey PRIMARY KEY (id);


--
-- Name: users_customuser users_customuser_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.users_customuser
    ADD CONSTRAINT users_customuser_pkey PRIMARY KEY (id);


--
-- Name: users_customuser_user_permissions users_customuser_user_pe_customuser_id_permission_7a7debf6_uniq; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.users_customuser_user_permissions
    ADD CONSTRAINT users_customuser_user_pe_customuser_id_permission_7a7debf6_uniq UNIQUE (customuser_id, permission_id);


--
-- Name: users_customuser_user_permissions users_customuser_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.users_customuser_user_permissions
    ADD CONSTRAINT users_customuser_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: users_customuser users_customuser_username_key; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.users_customuser
    ADD CONSTRAINT users_customuser_username_key UNIQUE (username);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: competitions_competition_group_id_e3e39c08; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX competitions_competition_group_id_e3e39c08 ON public.competitions_competition USING btree (group_id);


--
-- Name: competitions_competition_title_4dab390b_like; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX competitions_competition_title_4dab390b_like ON public.competitions_competition USING btree (title varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: groups_groupuser_group_id_01dfd2c3; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX groups_groupuser_group_id_01dfd2c3 ON public.groups_groupuser USING btree (group_id);


--
-- Name: groups_groupuser_user_id_aadcb3f0; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX groups_groupuser_user_id_aadcb3f0 ON public.groups_groupuser USING btree (user_id);


--
-- Name: judge_problem_competition_id_e50917b5; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX judge_problem_competition_id_e50917b5 ON public.judge_problem USING btree (competition_id);


--
-- Name: judge_problemcomment_author_id_1d5ced6d; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX judge_problemcomment_author_id_1d5ced6d ON public.judge_problemcomment USING btree (author_id);


--
-- Name: judge_problemcomment_problem_id_e302d833; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX judge_problemcomment_problem_id_e302d833 ON public.judge_problemcomment USING btree (problem_id);


--
-- Name: judge_problemsamples_problem_id_0f9cf120; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX judge_problemsamples_problem_id_0f9cf120 ON public.judge_problemsamples USING btree (problem_id);


--
-- Name: judge_solution_language_id_4e1187a0; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX judge_solution_language_id_4e1187a0 ON public.judge_solution USING btree (language_id);


--
-- Name: judge_solution_task_id_520e823d; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX judge_solution_task_id_520e823d ON public.judge_solution USING btree (problem_id);


--
-- Name: judge_solution_user_id_5e30e132; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX judge_solution_user_id_5e30e132 ON public.judge_solution USING btree (user_id);


--
-- Name: judge_solutiontest_solution_id_c1a24281; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX judge_solutiontest_solution_id_c1a24281 ON public.judge_solutiontest USING btree (solution_id);


--
-- Name: judge_solutiontest_task_test_id_ed4582a2; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX judge_solutiontest_task_test_id_ed4582a2 ON public.judge_solutiontest USING btree (problem_test_id);


--
-- Name: judge_task_number_f60e8e02_like; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX judge_task_number_f60e8e02_like ON public.judge_problem USING btree (number varchar_pattern_ops);


--
-- Name: judge_tasktest_task_id_dc437648; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX judge_tasktest_task_id_dc437648 ON public.judge_problemtest USING btree (problem_id);


--
-- Name: judge_userproblemstatus_problem_id_659a52be; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX judge_userproblemstatus_problem_id_659a52be ON public.judge_userproblemstatus USING btree (problem_id);


--
-- Name: judge_userproblemstatus_user_id_95d440df; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX judge_userproblemstatus_user_id_95d440df ON public.judge_userproblemstatus USING btree (user_id);


--
-- Name: urlshortening_url_short_id_d5b55826_like; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX urlshortening_url_short_id_d5b55826_like ON public.urlshortening_url USING btree (short_id varchar_pattern_ops);


--
-- Name: users_customuser_email_6445acef_like; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX users_customuser_email_6445acef_like ON public.users_customuser USING btree (email varchar_pattern_ops);


--
-- Name: users_customuser_groups_customuser_id_958147bf; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX users_customuser_groups_customuser_id_958147bf ON public.users_customuser_groups USING btree (customuser_id);


--
-- Name: users_customuser_groups_group_id_01390b14; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX users_customuser_groups_group_id_01390b14 ON public.users_customuser_groups USING btree (group_id);


--
-- Name: users_customuser_user_permissions_customuser_id_5771478b; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX users_customuser_user_permissions_customuser_id_5771478b ON public.users_customuser_user_permissions USING btree (customuser_id);


--
-- Name: users_customuser_user_permissions_permission_id_baaa2f74; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX users_customuser_user_permissions_permission_id_baaa2f74 ON public.users_customuser_user_permissions USING btree (permission_id);


--
-- Name: users_customuser_username_80452fdf_like; Type: INDEX; Schema: public; Owner: admin
--

CREATE INDEX users_customuser_username_80452fdf_like ON public.users_customuser USING btree (username varchar_pattern_ops);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: competitions_competition competitions_competition_group_id_e3e39c08_fk_groups_group_id; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.competitions_competition
    ADD CONSTRAINT competitions_competition_group_id_e3e39c08_fk_groups_group_id FOREIGN KEY (group_id) REFERENCES public.groups_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_users_customuser_id; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_users_customuser_id FOREIGN KEY (user_id) REFERENCES public.users_customuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: groups_groupuser groups_groupuser_group_id_01dfd2c3_fk_groups_group_id; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.groups_groupuser
    ADD CONSTRAINT groups_groupuser_group_id_01dfd2c3_fk_groups_group_id FOREIGN KEY (group_id) REFERENCES public.groups_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: groups_groupuser groups_groupuser_user_id_aadcb3f0_fk_users_customuser_id; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.groups_groupuser
    ADD CONSTRAINT groups_groupuser_user_id_aadcb3f0_fk_users_customuser_id FOREIGN KEY (user_id) REFERENCES public.users_customuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: judge_problem judge_problem_competition_id_e50917b5_fk_competiti; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_problem
    ADD CONSTRAINT judge_problem_competition_id_e50917b5_fk_competiti FOREIGN KEY (competition_id) REFERENCES public.competitions_competition(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: judge_problemcomment judge_problemcomment_author_id_1d5ced6d_fk_users_customuser_id; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_problemcomment
    ADD CONSTRAINT judge_problemcomment_author_id_1d5ced6d_fk_users_customuser_id FOREIGN KEY (author_id) REFERENCES public.users_customuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: judge_problemcomment judge_problemcomment_problem_id_e302d833_fk_judge_problem_id; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_problemcomment
    ADD CONSTRAINT judge_problemcomment_problem_id_e302d833_fk_judge_problem_id FOREIGN KEY (problem_id) REFERENCES public.judge_problem(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: judge_problemsamples judge_problemsamples_problem_id_0f9cf120_fk_judge_problem_id; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_problemsamples
    ADD CONSTRAINT judge_problemsamples_problem_id_0f9cf120_fk_judge_problem_id FOREIGN KEY (problem_id) REFERENCES public.judge_problem(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: judge_problemtest judge_problemtest_problem_id_aab8416c_fk_judge_problem_id; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_problemtest
    ADD CONSTRAINT judge_problemtest_problem_id_aab8416c_fk_judge_problem_id FOREIGN KEY (problem_id) REFERENCES public.judge_problem(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: judge_solution judge_solution_language_id_4e1187a0_fk_judge_pro; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_solution
    ADD CONSTRAINT judge_solution_language_id_4e1187a0_fk_judge_pro FOREIGN KEY (language_id) REFERENCES public.judge_programminglanguage(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: judge_solution judge_solution_problem_id_44bbf556_fk_judge_problem_id; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_solution
    ADD CONSTRAINT judge_solution_problem_id_44bbf556_fk_judge_problem_id FOREIGN KEY (problem_id) REFERENCES public.judge_problem(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: judge_solution judge_solution_user_id_5e30e132_fk_users_customuser_id; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_solution
    ADD CONSTRAINT judge_solution_user_id_5e30e132_fk_users_customuser_id FOREIGN KEY (user_id) REFERENCES public.users_customuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: judge_solutiontest judge_solutiontest_problem_test_id_90d78863_fk_judge_pro; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_solutiontest
    ADD CONSTRAINT judge_solutiontest_problem_test_id_90d78863_fk_judge_pro FOREIGN KEY (problem_test_id) REFERENCES public.judge_problemtest(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: judge_solutiontest judge_solutiontest_solution_id_c1a24281_fk_judge_solution_id; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_solutiontest
    ADD CONSTRAINT judge_solutiontest_solution_id_c1a24281_fk_judge_solution_id FOREIGN KEY (solution_id) REFERENCES public.judge_solution(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: judge_userproblemstatus judge_userproblemstatus_problem_id_659a52be_fk_judge_problem_id; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_userproblemstatus
    ADD CONSTRAINT judge_userproblemstatus_problem_id_659a52be_fk_judge_problem_id FOREIGN KEY (problem_id) REFERENCES public.judge_problem(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: judge_userproblemstatus judge_userproblemstatus_user_id_95d440df_fk_users_customuser_id; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.judge_userproblemstatus
    ADD CONSTRAINT judge_userproblemstatus_user_id_95d440df_fk_users_customuser_id FOREIGN KEY (user_id) REFERENCES public.users_customuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_customuser_groups users_customuser_gro_customuser_id_958147bf_fk_users_cus; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.users_customuser_groups
    ADD CONSTRAINT users_customuser_gro_customuser_id_958147bf_fk_users_cus FOREIGN KEY (customuser_id) REFERENCES public.users_customuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_customuser_groups users_customuser_groups_group_id_01390b14_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.users_customuser_groups
    ADD CONSTRAINT users_customuser_groups_group_id_01390b14_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_customuser_user_permissions users_customuser_use_customuser_id_5771478b_fk_users_cus; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.users_customuser_user_permissions
    ADD CONSTRAINT users_customuser_use_customuser_id_5771478b_fk_users_cus FOREIGN KEY (customuser_id) REFERENCES public.users_customuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_customuser_user_permissions users_customuser_use_permission_id_baaa2f74_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.users_customuser_user_permissions
    ADD CONSTRAINT users_customuser_use_permission_id_baaa2f74_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

