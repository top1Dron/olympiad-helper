# Generated by Django 3.1.4 on 2021-04-29 16:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('judge', '0001_initial'), ('judge', '0002_auto_20201223_1516'), 
                ('judge', '0003_auto_20201224_1318'), ('judge', '0004_auto_20201226_1342'), 
                ('judge', '0005_auto_20210116_0033'), ('judge', '0006_auto_20210116_0216'), 
                ('judge', '0007_auto_20210116_0217'), ('judge', '0008_remove_tasktest_language'), 
                ('judge', '0009_auto_20210116_2251'), ('judge', '0010_auto_20210129_1716'), 
                ('judge', '0011_auto_20210202_1131'), ('judge', '0012_auto_20210208_2047'), 
                ('judge', '0013_userproblemstatus'), ('judge', '0014_problem_competition'), 
                ('judge', '0015_auto_20210409_2033'), ('judge', '0016_auto_20210421_1334'), 
                ('judge', '0017_auto_20210421_1352'), ('judge', '0018_auto_20210421_1358'), 
                ('judge', '0019_auto_20210421_2036'), ('judge', '0020_auto_20210424_1537'), 
                ('judge', '0021_auto_20210429_1731')
                ]

    initial = True

    dependencies = [
        ('competitions', '0001_squashed_0004_auto_20210421_2111'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProgrammingLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Programming language')),
                ('compile', models.CharField(max_length=300)),
                ('execute', models.CharField(max_length=300)),
                ('extension', models.CharField(max_length=5)),
            ],
            options={
                'verbose_name': 'Programming language',
                'verbose_name_plural': 'Programming languages',
            },
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solving_date', models.DateTimeField(auto_now=True, verbose_name='Solving date')),
                ('status', models.CharField(choices=[('PD', 'Pending'), ('CE', 'Compilation error'), ('WA', 'Wrong answer'), ('RE', 'Runtime error'), ('PA', 'Partially accepted'), ('TO', 'Timeout'), ('MO', 'Memory out'), ('AC', 'Accepted')], max_length=2)),
                ('program_code', models.TextField()),
                ('avg_memory_usage', models.CharField(max_length=30)),
                ('avg_time_usage', models.CharField(max_length=30)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='judge.programminglanguage')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='judge.problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Solution',
                'verbose_name_plural': 'Solutions',
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.SlugField(max_length=1000, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('description_photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('difficulty', models.CharField(choices=[('VE', 'Very easy'), ('EA', 'Easy'), ('MD', 'Middle'), ('HD', 'Hard'), ('VH', 'Very hard')], max_length=2)),
                ('classification', models.CharField(choices=[('CB', 'Combinatorics')], max_length=2)),
                ('input_condition', models.CharField(max_length=500, verbose_name='Input')),
                ('output_condition', models.CharField(max_length=500, verbose_name='Output')),
                ('special_warning', models.CharField(blank=True, max_length=500, null=True, verbose_name='Warning')),
                ('is_active', models.BooleanField(default=True)),
                ('memory_limit', models.CharField(default='128', max_length=30)),
                ('time_limit', models.CharField(default='1', max_length=30)),
                ('competition', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='problems', to='competitions.competition')),
                ('classification_en', models.CharField(choices=[('CB', 'Combinatorics')], max_length=2, null=True)),
                ('classification_uk', models.CharField(choices=[('CB', 'Combinatorics')], max_length=2, null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_uk', models.TextField(null=True)),
                ('difficulty_en', models.CharField(choices=[('VE', 'Very easy'), ('EA', 'Easy'), ('MD', 'Middle'), ('HD', 'Hard'), ('VH', 'Very hard')], max_length=2, null=True)),
                ('difficulty_uk', models.CharField(choices=[('VE', 'Very easy'), ('EA', 'Easy'), ('MD', 'Middle'), ('HD', 'Hard'), ('VH', 'Very hard')], max_length=2, null=True)),
                ('input_condition_en', models.CharField(max_length=500, null=True, verbose_name='Input')),
                ('input_condition_uk', models.CharField(max_length=500, null=True, verbose_name='Input')),
                ('output_condition_en', models.CharField(max_length=500, null=True, verbose_name='Output')),
                ('output_condition_uk', models.CharField(max_length=500, null=True, verbose_name='Output')),
                ('special_warning_en', models.CharField(blank=True, max_length=500, null=True, verbose_name='Warning')),
                ('special_warning_uk', models.CharField(blank=True, max_length=500, null=True, verbose_name='Warning')),
                ('title_en', models.CharField(max_length=100, null=True)),
                ('title_uk', models.CharField(max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Problem',
                'verbose_name_plural': 'Problems',
            },
        ),
        migrations.CreateModel(
            name='ProblemComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('publication_date', models.DateTimeField(auto_now=True, verbose_name='Publication date')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='judge.problem')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemSamples',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_input', models.TextField(verbose_name='Sample input #')),
                ('sample_output', models.TextField(verbose_name='Sample output #')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='judge.problem')),
                ('sample_input_en', models.TextField(null=True, verbose_name='Sample input #')),
                ('sample_input_uk', models.TextField(null=True, verbose_name='Sample input #')),
                ('sample_output_en', models.TextField(null=True, verbose_name='Sample output #')),
                ('sample_output_uk', models.TextField(null=True, verbose_name='Sample output #')),
            ],
            options={
                'verbose_name': 'Problem samples',
                'verbose_name_plural': 'Problem samples',
            },
        ),
        migrations.CreateModel(
            name='ProblemTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_number', models.IntegerField()),
                ('input_data', models.TextField()),
                ('output_data', models.TextField()),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='judge.problem')),
            ],
            options={
                'verbose_name': 'Problem tests',
                'verbose_name_plural': 'Problem tests',
            },
        ),
        migrations.CreateModel(
            name='SolutionTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memory_usage', models.CharField(max_length=30)),
                ('time_usage', models.CharField(max_length=30)),
                ('status', models.CharField(choices=[('PD', 'Pending'), ('CE', 'Compilation error'), ('WA', 'Wrong answer'), ('RE', 'Runtime error'), ('PA', 'Partially accepted'), ('TO', 'Timeout'), ('MO', 'Memory out'), ('AC', 'Accepted')], max_length=2)),
                ('solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='judge.solution')),
                ('problem_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='judge.problemtest')),
            ],
            options={
                'verbose_name': 'Solution tests',
                'verbose_name_plural': 'Solution tests',
                'unique_together': {('solution', 'problem_test')},
            },
        ),
        migrations.CreateModel(
            name='UserProblemStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PD', 'Pending'), ('CE', 'Compilation error'), ('WA', 'Wrong answer'), ('RE', 'Runtime error'), ('PA', 'Partially accepted'), ('TO', 'Timeout'), ('MO', 'Memory out'), ('AC', 'Accepted')], max_length=2)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='judge.problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User problem status',
                'verbose_name_plural': 'User problem statuses',
                'unique_together': {('user', 'problem')},
            },
        ),
    ]
